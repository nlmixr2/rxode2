[{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"user-defined-functions","dir":"Articles","previous_headings":"","what":"User Defined Functions","title":"Integrating User Defined Functions into rxode2","text":"defining models may wished write small R function make function integrate rxode2 somehow. article discusses 4 ways : R-based user function can loaded simple function certain circumstances translated C run efficiently C function define integrate code user defined function changes rxode2 ui code replacing function rxode2 code. can presence absence data simulation estimation.","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`"},{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"r-based-user-functions","dir":"Articles","previous_headings":"","what":"R based user functions","title":"Integrating User Defined Functions into rxode2","text":"R-based user function convenient include ODE, slower done written C , C++ compiled language. requested github appropriate example; However, use simple example simply illustrate concepts. Now ODE compiled R functions called solving ODE. Since calling R, forces parallization turned since R single-threaded. also takes time solve since shuttling back forth R C. Lets see simple function performs:  terribly bad, even though shuffling R C. can make better converting functions C:  C version almost twice fast R version. may noticed conversion also created C versions first derivative. done automatically gives just C versions function, C versions derivatives registers rxode2. allows C versions work rxode2 nlmixr2 models. function setup advance allow type conversion. general derivatives calculated return() statement user defined function. means simply let R return last value instead explictly calling return(). Many people prefer method coding. Even return function, function converted C. github issue, used function convert derivatives: still helpful functions early returns, nlmixr2 models requiring derivatives calculated non-optimized finite differences occurs. gets internals rxode2 nlmixr2 can see easily calculating derivatives: Whereas originally defined function newAbs() use new derivatives calculated well: circumstances, conversion C possible, though can still use R function. requirements R functions integrated rxode2 system: function must set number arguments, variable arguments like f(…) currently allowed. function given argument single number, function return single number requirements met can use R function rxode2. Additional requirements conversion C include: functions use within R function must understood available rxode2. Practically speaking fun2() refers fun1(), fun1() must changed C code available rxode2 changing function fun2() C. functions can include /else assignments simple return statements (either returning value value line ). Special R control structures functions (like lapply) present. function refer package functions mentioned, return() statement present, derivative C functions rxode2’s derivative table updated.","code":"newAbs <- function(x) {   if (x < 0) {     -x   } else {     x   } }  f <- rxode2({   a <- newAbs(time) }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(-10, 10, length.out=40) mb1 <- microbenchmark::microbenchmark(withoutC=suppressWarnings(rxSolve(f,e)))  library(ggplot2) autoplot(mb1) + rxTheme() # Create C functions automatically with `rxFun()` rxFun(newAbs) #> → finding duplicate expressions in d(newAbs)/d(x)... #> [====|====|====|====|====|====|====|====|====|====] 0:00:00 #> → optimizing duplicate expressions in d(newAbs)/d(x)... #> [====|====|====|====|====|====|====|====|====|====] 0:00:00 #> converted R function 'newAbs' to C (will now use in rxode2) #> converted R function 'rx_newAbs_d_x' to C (will now use in rxode2) #> Added derivative table for 'newAbs' # Recompile to use the C functions # Note it would recompile anyway if you didn't do this step, # it just makes sure that it doesn't recompile every step in # the benchmark f <- rxode2({   a <- newAbs(time) }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  mb2 <- microbenchmark::microbenchmark(withC=rxSolve(f,e, cores=1))  mb <- rbind(mb1, mb2) autoplot(mb) + rxTheme() + xgxr::xgx_scale_y_log10() #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. print(mb) #> Unit: milliseconds #>      expr      min       lq      mean   median       uq       max neval #>  withoutC 9.472465 9.576805 10.207607 9.656198 9.930094 16.672077   100 #>     withC 3.312024 3.376164  3.681546 3.407933 3.537044  7.767322   100 # Light f_R <- function(actRad, k_0, a_k) {   photfac <- a_k * actRad + k_0   if (photfac > 1) {     photfac = 1   }   return(photfac) }  rxFun(f_R) #> function contains return statement; derivatives not calculated #> converted R function 'f_R' to C (will now use in rxode2) rxFromSE(\"Derivative(f_R(actRad, k_0, a_k),k_0)\") #> [1] \"(f_R(actRad,(k_0)+6.05545445239334e-06,a_k)-f_R(actRad,k_0,a_k))/6.05545445239334e-06\" rxFromSE(\"Derivative(newAbs(x),x)\") #> [1] \"rx_newAbs_d_x(x)\""},{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"c-based-functions","dir":"Articles","previous_headings":"","what":"C based functions","title":"Integrating User Defined Functions into rxode2","text":"can add C functions directly rxode2 well using rxFun(): wanted also use C functions expressions derivatives using rxD() function: Removing function rxRmFun() also remove derivative table:","code":"fun <- \"  double fun(double a, double b, double c) {    return a*a+b*a+c;  } \" ## C-code for function  rxFun(\"fun\", c(\"a\", \"b\", \"c\"), fun) rxD(\"fun\", list(    function(a, b, c) { # derivative of arg1: a      paste0(\"2*\", a, \"+\", b)    },    function(a, b, c) { # derivative of arg2: b      return(a)    },    function(a, b, c) { # derivative of arg3: c      return(\"0.0\")    } )) rxRmFun(\"fun\")"},{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"functions-to-insert-rxode2-code-into-the-current-model","dir":"Articles","previous_headings":"","what":"Functions to insert rxode2 code into the current model","title":"Integrating User Defined Functions into rxode2","text":"replaces rxode2 code current model expansion. can allow R-like functions inside rxode2 ui models, well adding approximating functions like polynomials, splines neural networks. example allows R-like functions : accomplished combination two functions, highly commented: general list function needs return can : $replace – text replaced $– lines placed model current function found $– lines added model current function found $iniDf – initial estimates data.frame problem. calling function, can retrieve initial conditions currently used parsing can get prior value rxUdfUiIniDf() can modify inside function return new data.frame list element. allows add/delete initial estimates model well modify model lines . $uiUseData – TRUE, instructs rxode2 nlmixr2est re-parse function presence data, means bit function setup need done. $uiUseMv – TRUE instructs rxode2 re-parse function initial model variables calculated. addition rxUdfUiIniDf() can get information parser: rxUdfUiParsing() returns rxode2 ui function parsed currently (allows function overloaded udf calling rxode2 well function modifying model). rxUdfUiNum() parsing function calling (example rxpois() can called multiple times. gives number function model order (first give 1 second, 2, etc). can used create unique variables functions like rxIntToLetter() rxIntToBase(). rxUdfUiIniLhs() gives left-handed side equation function found. also R language object. rxUdfUiIniMv() gives model variables parsing (can used functions like linCmt()) rxUdfUiData() specifies data used simulate, estimate, etc. rxUdfUiEst() gives estimation/simulation method used model. example, simulation rxSolve.","code":"f <- function() {   model({     a <- rxpois(lambda=lam)   }) }  # Which will evaluate into a standard rxode2 function that does not # support named arguments (since it is translated to C) f()  # Which is still true in the standard rxode2:  try(rxode2({   a <- rxpois(lambda=lam) })) rxUdfUi.rxpois <- function(fun) {   # Fun is the language object (ie quoted R object) to be evaluated or   # changed in the code   .fun <- fun   # Since the `rxpois` function is built into the rxode2 we need to   # have a function with a different conflicts.  In this case, I take   # the function name (fun[[1]]), and prepend a \".\", which follows   # `rxode2`'s naming convention of un-exported functions.   #   # This next evaluation changes the expression function to .rxpois()   .fun[[1]] <- str2lang(paste0(\".\", deparse1(fun[[1]])))   # Since this is still a R expression, you can then evaluate the   # function .rxpois to produce the proper code:   eval(.fun) }  # The above s3 method can be registered in a package or you can use # the following code to register it in your session: rxode2::.s3register(\"rxode2::rxUdfUi\", \"rxpois\")  # This is the function that changes the code as needed .rxpois <- function(lambda) {   # The first part of this code tries to change the value into a   # character.  This handles cases like rxpois(lambda=lam),   # rxpois(lam), rxpois(\"lam\").  It also tries to evaluate the   # argument supplied to lambda in case it comes from a different   # location.   .lam <- as.character(substitute(lambda))   .tmp <- try(force(lambda), silent=TRUE)   if (!inherits(.tmp, \"try-error\")) {     if (is.character(.tmp)) {       .lam <- lambda     }   }   # This part creates a list with the replacement text, in this case   # it woulb be rxpois(lam) where there is no equals included, as   # required by `rxode2`:   list(replace=paste0(\"rxpois(\", .lam, \")\")) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"using-model-variables-in-rxode2-ui-models","dir":"Articles","previous_headings":"Functions to insert rxode2 code into the current model","what":"Using model variables in rxode2 ui models","title":"Integrating User Defined Functions into rxode2","text":"can also take change model take consideration rxode2 model variables full ui completed parsing. rxode2 model variables information might change variables make names variables. example left hand side equations ($lhs), input parameters ($params) ODE states ($state)). using approach, likely need following steps: data processed, need put function rxode2 acceptable form, named arguments, strings, numbers variables output. number arguments output needs declared S3 method adding attribute \"nargs\" method. example, built testMod1() ui modification function uses one argument parsed commented example model variables example:","code":"testMod1 <- function(val=1) {   # This converts the val to a character if it is somthing like testMod1(b)   .val <- as.character(substitute(val))   .tmp <- suppressWarnings(try(force(val), silent = TRUE))   if (!inherits(.tmp, \"try-error\")) {     if (is.character(.tmp)) {       .val <- val     }   }   # This does the UI parsing   if (rxUdfUiParsing()) {     # See if the model variables are available     .mv <- rxUdfUiMv()     if (is.null(.mv)) {       # Put this in a rxode2 low level acceptible form, no complex       # expressions, no named arguments, something that is suitable       # for C.       #       # The `uiUsMv` tells the parser this needs to be reparsed when       # the model variables become avaialble during parsing.       return(list(replace=paste0(\"testMod1(\", .val, \")\"),                   uiUseMv=TRUE))     } else {       # Now that we have the model variables, we can then do something       # about this       .vars <- .mv$params       if (length(.vars) > 0) {         # If there is parameters available, this dummy function times         # the first input function by the value specified         return(list(replace=paste0(.vars[1], \"*\", .val)))       } else {         # If the value isn't availble, simply replace the function         # with the value.         return(list(replace=.val))       }     }   }   stop(\"This function is only for use in rxode2 ui models\",        call.=FALSE)  }  rxUdfUi.testMod1 <- function(fun) {   eval(fun) }  # To allow this to go to the next step, you need to declare how many # arguments this argument has, in this case 1.  Bu adding the # attribute \"nargs\", rxode2 lower level parser knows how to handle # this new function.  This allows rxode2 to generate the model # variables and send it to the next step.  attr(rxUdfUi.testMod1, \"nargs\") <- 1L  # If you are in a package, you can use the rxoygen tag @export to # register this as a rxode2 model definition. # # If you are using this in your own script, you need to register the s3 function # One way to do this is: rxode2::.s3register(\"rxode2::rxUdfUi\", \"testMod1\")  ## These are some examples of this function in use:  f <- function() {   model({     a <- b + testMod1(3)   }) }  f <- f()  print(f) #>  ── rxode2-based Pred model ─────────────────────────────────────────────────────  #>  ── Model (Normalized Syntax): ──  #> function() { #>     model({ #>         a <- b + (b * 3) #>     }) #> }  f <- function() {   model({     a <- testMod1(c)   }) }  f <- f()  print(f) #>  ── rxode2-based Pred model ─────────────────────────────────────────────────────  #>  ── Model (Normalized Syntax): ──  #> function() { #>     model({ #>         a <- (c * c) #>     }) #> }  f <- function() {   model({     a <- testMod1(1)   }) }  f <- f()  print(f) #>  ── rxode2-based Pred model ─────────────────────────────────────────────────────  #>  ── Model (Normalized Syntax): ──  #> function() { #>     model({ #>         a <- 1 #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Integrating-User-Defined-Functions-into-rxode2.html","id":"using-data-for-rxode2-ui-modification-models","dir":"Articles","previous_headings":"Functions to insert rxode2 code into the current model","what":"Using data for rxode2 ui modification models","title":"Integrating User Defined Functions into rxode2","text":"steps needed use data model replacement; can use data model replace values inside model. worked example linMod() included ability use: model variables, put lines model, add initial conditions use data initial estimates","code":"# You can print the code: linMod #> function (variable, power, dv = \"dv\", intercept = TRUE, type = c(\"replace\",  #>     \"before\", \"after\"), num = NULL, iniDf = NULL, data = FALSE,  #>     mv = FALSE)  #> { #>     .dv <- as.character(substitute(dv)) #>     .tmp <- suppressWarnings(try(force(dv), silent = TRUE)) #>     if (!inherits(.tmp, \"try-error\")) { #>         if (is.character(.tmp)) { #>             .dv <- dv #>         } #>     } #>     .var <- as.character(substitute(variable)) #>     .tmp <- try(force(variable), silent = TRUE) #>     .doExp3 <- FALSE #>     if (!inherits(.tmp, \"try-error\")) { #>         if (is.character(.tmp)) { #>             .var <- variable #>         } #>         else if (!inherits(.tmp, \"formula\")) { #>             .dv <- as.character(substitute(dv)) #>             .tmp <- suppressWarnings(try(force(dv), silent = TRUE)) #>             if (!inherits(.tmp, \"try-error\")) { #>                 if (is.character(.tmp)) { #>                   .dv <- dv #>                 } #>             } #>         } #>         else if (length(variable) == 2) { #>             if (!identical(variable[[1]], quote(`~`))) { #>                 stop(\"unexpected formula, needs to be the form ~x^3\",  #>                   call. = FALSE) #>             } #>             .doExp3 <- TRUE #>             .exp3 <- variable[[2]] #>         } #>         else { #>             if (length(variable) != 3) { #>                 stop(\"unexpected formula, needs to be the form dv~x^3\",  #>                   call. = FALSE) #>             } #>             if (!identical(variable[[1]], quote(`~`))) { #>                 stop(\"unexpected formula, needs to be the form dv~x^3\",  #>                   call. = FALSE) #>             } #>             .dv <- as.character(variable[[2]]) #>             data <- TRUE #>             .exp3 <- variable[[3]] #>             .doExp3 <- TRUE #>         } #>         if (.doExp3) { #>             if (length(.exp3) == 1) { #>                 .var <- variable <- as.character(.exp3) #>                 power <- 1 #>             } #>             else if (length(.exp3) == 3) { #>                 if (!identical(.exp3[[1]], quote(`^`))) { #>                   stop(\"unexpected formula, needs to be the form dv~x^3\",  #>                     call. = FALSE) #>                 } #>                 if (!is.numeric(.exp3[[3]])) { #>                   stop(\"unexpected formula, needs to be the form dv~x^3\",  #>                     call. = FALSE) #>                 } #>                 .var <- variable <- as.character(.exp3[[2]]) #>                 power <- .exp3[[3]] #>             } #>             else { #>                 stop(\"unexpected formula, needs to be the form dv~x^3\",  #>                   call. = FALSE) #>             } #>         } #>     } #>     checkmate::assertCharacter(.var, len = 1L, any.missing = FALSE,  #>         pattern = \"^[.]*[a-zA-Z]+[a-zA-Z0-9._]*$\", min.chars = 1L,  #>         .var.name = \"variable\") #>     checkmate::assertCharacter(.dv, len = 1L, any.missing = FALSE,  #>         pattern = \"^[.]*[a-zA-Z]+[a-zA-Z0-9._]*$\", min.chars = 1L,  #>         .var.name = \"dv\") #>     checkmate::assertLogical(intercept, len = 1L, any.missing = FALSE) #>     checkmate::assertIntegerish(power, lower = ifelse(intercept,  #>         0L, 1L), len = 1L) #>     if (is.null(num)) { #>         num <- rxUdfUiNum() #>     } #>     checkmate::assertIntegerish(num, lower = 1, any.missing = FALSE,  #>         len = 1) #>     if (mv && is.null(rxUdfUiMv())) { #>         if (intercept) { #>             return(list(replace = paste0(\"linModM(\", .var, \", \",  #>                 power, \")\"), uiUseMv = TRUE)) #>         } #>         else { #>             return(list(replace = paste0(\"linModM0(\", .var, \", \",  #>                 power, \")\"), uiUseMv = TRUE)) #>         } #>     } #>     if (data && is.null(rxUdfUiData())) { #>         if (intercept) { #>             return(list(replace = paste0(\"linModD(\", .var, \", \",  #>                 power, \", \", .dv, \")\"), uiUseData = TRUE)) #>         } #>         else { #>             return(list(replace = paste0(\"linModD0(\", .var, \", \",  #>                 power, \",\", .dv, \")\"), uiUseData = TRUE)) #>         } #>     } #>     if (is.null(iniDf)) { #>         iniDf <- rxUdfUiIniDf() #>     } #>     assertIniDf(iniDf, null.ok = TRUE) #>     type <- match.arg(type) #>     .mv <- rxUdfUiMv() #>     if (!is.null(.mv)) { #>         .varsMv <- c(.mv$lhs, .mv$params, .mv$state) #>         .pre <- paste0(.var, num, rxIntToLetter(seq_len(power +  #>             ifelse(intercept, 1L, 0L)) - 1L)) #>         .pre <- vapply(.pre, function(v) { #>             if (v %in% .varsMv) { #>                 paste0(\"rx.linMod.\", v) #>             } #>             else { #>                 v #>             } #>         }, character(1), USE.NAMES = FALSE) #>     } #>     else { #>         .pre <- paste0(\"rx.linMod.\", .var, num, rxIntToLetter(seq_len(power +  #>             ifelse(intercept, 1L, 0L)) - 1L)) #>     } #>     if (!is.null(iniDf)) { #>         .theta <- iniDf[!is.na(iniDf$ntheta), , drop = FALSE] #>         if (length(.theta$ntheta) > 0L) { #>             .maxTheta <- max(.theta$ntheta) #>             .theta1 <- .theta[1, ] #>         } #>         else { #>             .maxTheta <- 0L #>             .theta1 <- .rxBlankIni(\"theta\") #>         } #>         .theta1$lower <- -Inf #>         .theta1$upper <- Inf #>         .theta1$fix <- FALSE #>         .theta1$label <- NA_character_ #>         .theta1$backTransform <- NA_character_ #>         .theta1$condition <- NA_character_ #>         .theta1$err <- NA_character_ #>         .est <- rep(0, length(.pre)) #>         if (data) { #>             .dat <- rxUdfUiData() #>             .wdv <- which(tolower(names(.dat)) == tolower(.dv)) #>             if (length(.wdv) == 0L) { #>                 warning(.dv, \"not found in data, so no initial estimates will be set to zero\") #>             } #>             else { #>                 names(.dat)[.wdv] <- .dv #>                 .model <- stats::lm(stats::as.formula(paste0(.dv,  #>                   \" ~ stats::poly(\", .var, \",\", power, \")\", ifelse(intercept,  #>                     \"\", \"+0\"))), data = rxUdfUiData()) #>                 .est <- coef(.model) #>             } #>         } #>         .cur <- c(list(.theta), lapply(seq_along(.pre), function(i) { #>             .cur <- .theta1 #>             .cur$name <- .pre[i] #>             .cur$est <- .est[i] #>             .cur$ntheta <- .maxTheta + i #>             .cur #>         })) #>         .theta <- do.call(rbind, .cur) #>         .eta <- iniDf[is.na(iniDf$neta), , drop = FALSE] #>         .iniDf <- rbind(.theta, .eta) #>     } #>     else { #>         .iniDf <- NULL #>     } #>     .linMod <- paste(vapply(seq_along(.pre), function(i) { #>         if (intercept) { #>             if (i == 1)  #>                 return(.pre[i]) #>             if (i == 2)  #>                 return(paste0(.pre[i], \"*\", .var)) #>             paste0(.pre[i], \"*\", paste0(.var, \"^\", i - 1L)) #>         } #>         else { #>             if (i == 1)  #>                 return(paste0(.pre[i], \"*\", .var)) #>             paste0(.pre[i], \"*\", paste0(.var, \"^\", i)) #>         } #>     }, character(1)), collapse = \"+\") #>     if (type == \"replace\") { #>         list(replace = .linMod, iniDf = .iniDf) #>     } #>     else if (type == \"before\") { #>         .replace <- paste0(\"rx.linMod.\", .var, \".f\", num) #>         list(before = paste0(.replace, \" <- \", .linMod), replace = .replace,  #>             iniDf = .iniDf) #>     } #>     else if (type == \"after\") { #>         .replace <- paste0(\"rx.linMod.\", .var, \".f\", num) #>         list(after = paste0(.replace, \" <- \", .linMod), replace = \"0\",  #>             iniDf = .iniDf) #>     } #> } #> <bytecode: 0x5585a9c6c2b8> #> <environment: namespace:rxode2>  # You can also print the s3 method that is used for this method  rxode2:::rxUdfUi.linMod #> function (fun)  #> { #>     eval(fun) #> } #> <bytecode: 0x5585aa86aa70> #> <environment: namespace:rxode2> #> attr(,\"nargs\") #> [1] 2"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"modifying-model","dir":"Articles","previous_headings":"","what":"Modifying model","title":"Modifying Models","text":"tasks might want overall model: Change line model Add line model Rename parameters model Combine different models Create functions add certain model features model go model piping functions can use modify models even add functions modify models. cover model modification functions nlmixr2lib","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"modifying-a-model-line","dir":"Articles","previous_headings":"Modifying model","what":"Modifying a model line","title":"Modifying Models","text":"opinion, modifying lines model likely common task modifying model. may wish modify model subject variability add covariate effects. begin course need base model modify. Let’s start simple PK example, using single-dose theophylline dataset generously provided Dr. Robert . Upton University California, San Francisco: believed enough absorption support subject variability can change line drop subject modifying single line. simply type line want model piping expression: expected, line modified. Also can notice initial estimate subject variability dropped since longer part model. reason wanted add back model can modify model add back: modification, eta.ka automatically assumed subject variability parameter. Also since eta.ka mu-referenced rxode2 points . automatic detection eta.ka name follows convention. Parameters starting ending following names assumed subject variability parameters: eta (NONMEM convention) ppv (per patient variability) psv (per subject variability) iiv (inter-individual variability) bsv (subject variability) bpv (patient variability) functioning correctly can change covariate can add type initial estimate later: seen , eta.ka model assumed data-input parameter covariate instead estimated parameter. can also note WT automatically recognized covariate covWt automatically recognized covariate parameter. general covariates typical/population parameters automatically converted estimated parameters based parameter name starting (ending ): tv (typical value) t (also typical value) pop (population parameter) err (error parameter) eff (effect parameter) cov (covariate parameters) notable exceptions parameters like (wt, sex crcl) assumed covariates. don’t want automatic variable conversion, can also use auto=FALSE: case additional parameters (eta.ka, WT, covWt) assumed parameters dataset.","code":"one.compartment <- function() {   ini({     tka <- 0.45; label(\"Ka\")     tcl <- 1; label(\"Cl\")     tv <- 3.45; label(\"V\")     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) } mod <- one.compartment |>   model(ka <- exp(tka)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ! remove between subject variability `eta.ka`  print(mod) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.cl eta.v #> eta.cl    0.3   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tcl eta.cl    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } mod2 <- mod |>   model(ka <- tka * exp(eta.ka)) #> ℹ add between subject variability `eta.ka` and set estimate to 1  print(mod2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.ka #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.ka    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tcl eta.cl    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.ka ~ 1 #>     }) #>     model({ #>         ka <- tka * exp(eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } mod2 <- mod |>   model(ka <- tka * exp(eta.ka) + WT * covWt, cov=\"eta.ka\") #> ℹ add covariate `eta.ka` (as requested by cov option) #> ℹ add covariate `WT` #> ℹ add population parameter `covWt` and set estimate to 1  print(mod2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  covWt  #>   0.45   1.00   3.45   0.70   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v #> eta.cl    0.3   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level covariates #> 1   tcl eta.cl    id            #> 2    tv  eta.v    id            #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         covWt <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- tka * exp(eta.ka) + WT * covWt #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } mod3 <- mod |>   model(ka <- tka * exp(eta.ka) + WT * covWt, auto=FALSE) #> ℹ add covariate `eta.ka` #> ℹ add covariate `WT` #> ℹ add covariate `covWt`  print(mod3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.cl eta.v #> eta.cl    0.3   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level covariates #> 1   tcl eta.cl    id            #> 2    tv  eta.v    id            #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- tka * exp(eta.ka) + WT * covWt #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"note-on-automatic-detection-of-variables","dir":"Articles","previous_headings":"Modifying model","what":"Note on automatic detection of variables","title":"Modifying Models","text":"automatic detection variables convenient many models may suit style; like can always change using options(): option disabled, variables assumed covariates promote population parameters ini block last example option enabled none variables starting t added model course use turn back : can use withr::with_options(list(rxode2.autoVarPiping=FALSE), ...) turn option temporarily. don’t like defaults changing variables change well rxSetPipingAuto() example wanted variables starting ending te can change : requested population parameters starting te added ini block. want reset defaults simply call rxSetPipingAuto() without arguments:","code":"options(rxode2.autoVarPiping=FALSE) mod7 <- mod3 |>   model({     emax <- exp(temax)     e0 <- exp(te0 + eta.e0)     ec50 <- exp(tec50)     kin <- exp(tkin)     kout <- exp(tkout)   }, append=FALSE)  print(mod7) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.cl eta.v #> eta.cl    0.3   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level covariates #> 1   tcl eta.cl    id            #> 2    tv  eta.v    id            #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- tka * exp(eta.ka) + WT * covWt #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } options(rxode2.autoVarPiping=TRUE) mod8 <- mod |>   model({     emax <- exp(temax)     e0 <- exp(te0 + eta.e0)     ec50 <- exp(tec50)     kin <- exp(tkin)     kout <- exp(tkout)   }, append=FALSE) #> ℹ promote `temax` to population parameter with initial estimate 1 #> ℹ promote `te0` to population parameter with initial estimate 1 #> ℹ promote `eta.e0` to between subject variability with initial estimate 1 #> ℹ promote `tec50` to population parameter with initial estimate 1 #> ℹ promote `tkin` to population parameter with initial estimate 1 #> ℹ promote `tkout` to population parameter with initial estimate 1  print(mod8) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  temax    te0  tec50   tkin  tkout  #>   0.45   1.00   3.45   0.70   1.00   1.00   1.00   1.00   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         temax <- 1 #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tkout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } rxSetPipingAuto(thetamodelVars = rex::rex(\"te\"))  mod9 <- mod |>   model({     emax <- exp(temax)     e0 <- exp(te0 + eta.e0)     ec50 <- exp(tec50)     kin <- exp(tkin)     kout <- exp(tkout)   }, append=FALSE) #> ℹ promote `temax` to population parameter with initial estimate 1 #> ℹ promote `te0` to population parameter with initial estimate 1 #> ℹ promote `eta.e0` to between subject variability with initial estimate 1 #> ℹ promote `tec50` to population parameter with initial estimate 1  print(mod9) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  temax    te0  tec50  #>   0.45   1.00   3.45   0.70   1.00   1.00   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         temax <- 1 #>         te0 <- 1 #>         tec50 <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } rxSetPipingAuto() mod10 <- mod |>   model({     emax <- exp(temax)     e0 <- exp(te0 + eta.e0)     ec50 <- exp(tec50)     kin <- exp(tkin)     kout <- exp(tkout)   }, append=FALSE) #> ℹ promote `temax` to population parameter with initial estimate 1 #> ℹ promote `te0` to population parameter with initial estimate 1 #> ℹ promote `eta.e0` to between subject variability with initial estimate 1 #> ℹ promote `tec50` to population parameter with initial estimate 1 #> ℹ promote `tkin` to population parameter with initial estimate 1 #> ℹ promote `tkout` to population parameter with initial estimate 1"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"adding-model-lines","dir":"Articles","previous_headings":"Modifying model","what":"Adding model lines","title":"Modifying Models","text":"three ways insert lines rxode2/nlmixr2 model. can add lines end model, expression beginning model controlled append option. Let’s assume two different assays run compound noticed different variability. can modify model adding lines end model using append=TRUE: Perhaps instead may want add indirect response model addition concentrations, can choose add : append=lhsVar lhsVar left handed variable want insert new lines: last type insertion may wish add lines beginning model using append=FALSE:","code":"mod4 <- mod |>   model({     cp2 <- cp     cp2 ~ lnorm(lnorm.sd)   }, append=TRUE) #> ℹ add residual parameter `lnorm.sd` and set estimate to 1  print(mod4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>      tka      tcl       tv   add.sd lnorm.sd  #>     0.45     1.00     3.45     0.70     1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v #> eta.cl    0.3   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── Multiple Endpoint Model ($multipleEndpoint): ──   #>   variable                cmt                dvid* #> 1   cp ~ …  cmt='cp' or cmt=3  dvid='cp' or dvid=1 #> 2  cp2 ~ … cmt='cp2' or cmt=4 dvid='cp2' or dvid=2 #>   * If dvids are outside this range, all dvids are re-numered sequentially, ie 1,7, 10 becomes 1,2,3 etc #>  #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tcl eta.cl    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         lnorm.sd <- c(0, 1) #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>         cp2 <- cp #>         cp2 ~ lnorm(lnorm.sd) #>     }) #> } mod5 <- mod |>   model({     PD <- 1-emax*cp/(ec50+cp)     ##     effect(0) <- e0     kin <- e0*kout     d/dt(effect) <- kin*PD -kout*effect   }, append=d/dt(center)) mod6 <- mod5 |>   model({     emax <- exp(temax)     e0 <- exp(te0 + eta.e0)     ec50 <- exp(tec50)     kin <- exp(tkin)     kout <- exp(tkout)   }, append=FALSE) #> ℹ promote `temax` to population parameter with initial estimate 1 #> ℹ promote `te0` to population parameter with initial estimate 1 #> ℹ promote `eta.e0` to between subject variability with initial estimate 1 #> ℹ promote `tec50` to population parameter with initial estimate 1 #> ℹ promote `tkin` to population parameter with initial estimate 1 #> ℹ promote `tkout` to population parameter with initial estimate 1  print(mod6) #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  temax    te0  tec50   tkin  tkout  #>   0.45   1.00   3.45   0.70   1.00   1.00   1.00   1.00   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3           effect #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         temax <- 1 #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tkout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         PD <- 1 - emax * cp/(ec50 + cp) #>         effect(0) <- e0 #>         kin <- e0 * kout #>         d/dt(effect) <- kin * PD - kout * effect #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"remove-lines-in-the-model","dir":"Articles","previous_headings":"Modifying model","what":"Remove lines in the model","title":"Modifying Models","text":"lines model can removed one 2 ways either use -param param <- NULL model piping:","code":"mod7 <- mod6 |>   model(-emax) #> ! remove population parameter `temax`  print(mod7) #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd    te0  tec50   tkin  tkout  #>   0.45   1.00   3.45   0.70   1.00   1.00   1.00   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3           effect #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tkout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         PD <- 1 - emax * cp/(ec50 + cp) #>         effect(0) <- e0 #>         kin <- e0 * kout #>         d/dt(effect) <- kin * PD - kout * effect #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }  # Equivalently  mod8 <- mod6 |>   model(emax <- NULL) #> ! remove population parameter `temax`  print(mod8) #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd    te0  tec50   tkin  tkout  #>   0.45   1.00   3.45   0.70   1.00   1.00   1.00   1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3           effect #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tkout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         PD <- 1 - emax * cp/(ec50 + cp) #>         effect(0) <- e0 #>         kin <- e0 * kout #>         d/dt(effect) <- kin * PD - kout * effect #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"rename-parameters-in-a-model","dir":"Articles","previous_headings":"Modifying model","what":"Rename parameters in a model","title":"Modifying Models","text":"may want rename parameters model, easy rxRename(). dplyr loaded can even replace rename(). semantics similar two functions, assigning newVar=oldVar. example: can see every instance variable named model renamed inside model ini block. completeness can see dplyr verb (since S3 method):","code":"mod11 <- mod10 |>   rxRename(drug1kout=kout, tv.drug1kout=tkout)  print(mod11) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>          tka          tcl           tv       add.sd        temax          te0  #>         0.45         1.00         3.45         0.70         1.00         1.00  #>        tec50         tkin tv.drug1kout  #>         1.00         1.00         1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         temax <- 1 #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tv.drug1kout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         drug1kout <- exp(tv.drug1kout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union mod12 <- mod10 |>   rename(drug1kout=kout, tv.drug1kout=tkout)  print(mod12) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>          tka          tcl           tv       add.sd        temax          te0  #>         0.45         1.00         3.45         0.70         1.00         1.00  #>        tec50         tkin tv.drug1kout  #>         1.00         1.00         1.00  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.e0 #> eta.cl    0.3   0.0      0 #> eta.v     0.0   0.1      0 #> eta.e0    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   te0 eta.e0    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Ka\") #>         tcl <- 1 #>         label(\"Cl\") #>         tv <- 3.45 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         temax <- 1 #>         te0 <- 1 #>         tec50 <- 1 #>         tkin <- 1 #>         tv.drug1kout <- 1 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>         eta.e0 ~ 1 #>     }) #>     model({ #>         emax <- exp(temax) #>         e0 <- exp(te0 + eta.e0) #>         ec50 <- exp(tec50) #>         kin <- exp(tkin) #>         drug1kout <- exp(tv.drug1kout) #>         ka <- exp(tka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"combine-different-models","dir":"Articles","previous_headings":"Modifying model","what":"Combine different models","title":"Modifying Models","text":"can also combine different models rxAppendModel(). general need variables common combine. generally want models link . example pk pd model done renaming cp first model ceff second model: get error try combine models without variables common: want combine models without respecting variables common, can use common=FALSE:","code":"ocmt <- function() {   ini({     tka <- exp(0.45) # Ka     tcl <- exp(1) # Cl     tv <- exp(3.45); # log V     ## the label(\"Label name\") works with all models     add.sd <- 0.7   })   model({     ka <- tka     cl <- tcl     v <- tv     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl / v * center     cp <- center / v     cp ~ add(add.sd)   }) }  idr <- function() {   ini({     tkin <- log(1)     tkout <- log(1)     tic50 <- log(10)     gamma <- fix(1)     idr.sd <- 1   })   model({     kin <- exp(tkin)     kout <- exp(tkout)     ic50 <- exp(tic50)     d/dt(eff) <- kin - kout*(1-ceff^gamma/(ic50^gamma+ceff^gamma))     eff ~ add(idr.sd)   }) }  rxAppendModel(ocmt %>% rxRename(ceff=cp), idr) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd      tkin     tkout     tic50     gamma  #>  1.568312  2.718282 31.500392  0.700000  0.000000  0.000000  2.302585  1.000000  #>    idr.sd  #>  1.000000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3              eff #>  ── Multiple Endpoint Model ($multipleEndpoint): ──   #>   variable                 cmt                 dvid* #> 1 ceff ~ … cmt='ceff' or cmt=4 dvid='ceff' or dvid=1 #> 2  eff ~ …  cmt='eff' or cmt=3  dvid='eff' or dvid=2 #>   * If dvids are outside this range, all dvids are re-numered sequentially, ie 1,7, 10 becomes 1,2,3 etc #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 1.56831218549017 #>         tcl <- 2.71828182845905 #>         tv <- 31.5003923087479 #>         add.sd <- c(0, 0.7) #>         tkin <- 0 #>         tkout <- 0 #>         tic50 <- 2.30258509299405 #>         gamma <- fix(1) #>         idr.sd <- c(0, 1) #>     }) #>     model({ #>         ka <- tka #>         cl <- tcl #>         v <- tv #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         ceff <- center/v #>         ceff ~ add(add.sd) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ic50 <- exp(tic50) #>         d/dt(eff) <- kin - kout * (1 - ceff^gamma/(ic50^gamma +  #>             ceff^gamma)) #>         eff ~ add(idr.sd) #>     }) #> } try(rxAppendModel(ocmt, idr)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> Error : not all the models have variables in common (use `common=FALSE` to allow this) mod2 <- rxAppendModel(ocmt, idr, common=FALSE) |>   model(ceff=cp, append=ic50) # here we add the translation after the #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments                               # ic50 line to make it reasonable  print(mod2) #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd      tkin     tkout     tic50     gamma  #>  1.568312  2.718282 31.500392  0.700000  0.000000  0.000000  2.302585  1.000000  #>    idr.sd  #>  1.000000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3              eff #>  ── Multiple Endpoint Model ($multipleEndpoint): ──   #>   variable                cmt                dvid* #> 1   cp ~ …  cmt='cp' or cmt=4  dvid='cp' or dvid=1 #> 2  eff ~ … cmt='eff' or cmt=3 dvid='eff' or dvid=2 #>   * If dvids are outside this range, all dvids are re-numered sequentially, ie 1,7, 10 becomes 1,2,3 etc #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 1.56831218549017 #>         tcl <- 2.71828182845905 #>         tv <- 31.5003923087479 #>         add.sd <- c(0, 0.7) #>         tkin <- 0 #>         tkout <- 0 #>         tic50 <- 2.30258509299405 #>         gamma <- fix(1) #>         idr.sd <- c(0, 1) #>     }) #>     model({ #>         ka <- tka #>         cl <- tcl #>         v <- tv #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ic50 <- exp(tic50) #>         ceff <- cp #>         d/dt(eff) <- kin - kout * (1 - ceff^gamma/(ic50^gamma +  #>             ceff^gamma)) #>         eff ~ add(idr.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"creating-more-complex-model-modification-functions","dir":"Articles","previous_headings":"Modifying model","what":"Creating more complex model modification functions","title":"Modifying Models","text":"pretty flexible, may want even , helper functions help create functions . discuss extract model function update . Lets start model: Lets assume moment want remove eta cl. First probably want get model lines. can modelExtract(): Now want worry cl line, can subset : Now wish change line “cl <- exp(tcl+eta.cl)” Note functions modify ini({}) block. may modify ini block first make valid rxode2/nlmixr2 model. particular case, using model piping easier, simply demonstrates two different way extract model information way add information final model. methods can tricky using model parsed correctly. means make sure parameters endpoints follow correct rules","code":"f <- function() {   ini({     tka <- 0.45     tcl <- 1     tv <- 3.45     eta.ka ~ 0.6     eta.v ~ 0.1   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl)     v <- exp(tv + eta.v)     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl/v * center     cp <- center/v   }) } totLines <- modelExtract(f, endpoint=NA) # endpoints should be included #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(totLines) #> [1] \"ka <- exp(tka + eta.ka)\"                    #> [2] \"cl <- exp(tcl)\"                             #> [3] \"v <- exp(tv + eta.v)\"                       #> [4] \"d/dt(depot) <- -ka * depot\"                 #> [5] \"d/dt(center) <- ka * depot - cl/v * center\" #> [6] \"cp <- center/v\" clLine <- modelExtract(f, cl, lines=TRUE) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments line <- attr(clLine, \"lines\") totLines[line] <- \"cl <- exp(tcl+eta.cl)\"  # For now lets remove the entire `ini` block (so you don't have to # worry about syncing parameters).  #  ini(f) <- NULL #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  model(f) <- totLines #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f) #> function ()  #> { #>     ini({ #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>     }) #> } #> <environment: 0x5643f26efa50>"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"modifying-initial-estimates","dir":"Articles","previous_headings":"","what":"Modifying initial estimates","title":"Modifying Models","text":"common items want initial estimates : Fix/Unfix parameter Change initial condition values bounds Change initial condition type Change labels transformations Reorder parameters Remove covariances parameters group parameters may wish create functions; discuss .","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"fixing-or-unfixing-a-parameter","dir":"Articles","previous_headings":"Modifying initial estimates","what":"Fixing or unfixing a parameter","title":"Modifying Models","text":"can fix model estimates two ways. first fix value whatever model function, done piping model parameter name (like tka) setting equal fix (%>% ini(tka=fix)). full example: can also fix parameter different value wish; similar can specify value fix inside fix pseudo-function follows: %>% ini(tka=fix(0.1)). fully worked example :","code":"f <- function() {   ini({     tka <- 0.45     tcl <- 1     tv <- 3.45     add.sd <- c(0, 0.7)     eta.ka ~ 0.6     eta.v ~ 0.1   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl)     v <- exp(tv + eta.v)     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl/v * center     cp <- center/v     cp ~ add(add.sd)   }) }  f2 <- f |>   ini(tka=fix) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ fix `tka` to `0.45`  print(f2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- fix(0.45) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f <- function() {   ini({     tka <- 0.45     tcl <- 1     tv <- 3.45     add.sd <- c(0, 0.7)     eta.ka ~ 0.6     eta.v ~ 0.1   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl)     v <- exp(tv + eta.v)     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl/v * center     cp <- center/v     cp ~ add(add.sd)   }) }  f2 <- f |>   ini(tka=fix(0.1)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ fix `tka` to `0.45` #> ℹ change initial estimate of `tka` to `0.1`  print(f2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- fix(0.1) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"unfixing-parameters","dir":"Articles","previous_headings":"Modifying initial estimates","what":"Unfixing parameters","title":"Modifying Models","text":"unfix parameters similarly fixing. Instead using fix keyword, use unfix keyword. unfix parameter (keeping value) pipe model using (|> ini(tka=unfix)). Starting fixed model fully worked example : can also unfix change initial estimate ini(parameter=unfix(newEst)):","code":"print(f2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- fix(0.1) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  f3 <- f2 |> ini(tka=unfix) #> ℹ unfix `tka` keeping initial estimate `0.1`  print(f3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } print(f2) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- fix(0.1) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  f3 <- f2 |>   ini(tka=unfix(10)) #> ℹ unfix `tka` keeping initial estimate `0.1` #> ℹ change initial estimate of `tka` to `10`  print(f3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>  10.00   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 10 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"multiple-parameter-assignment","dir":"Articles","previous_headings":"Modifying initial estimates > Changing the parameter values and possibly bounds","what":"Multiple parameter assignment","title":"Modifying Models","text":"can also assign multiple parameters providing : vector/list multiple lines piped ini() block Using covariance matrix case vector can specify pipe model. example: can also added multiple lines commas separating estimates: also use matrix specify covariance: Another option use variable, prefix ~ promoted subject variabilities:","code":"ini1 <- c(tka=0.1, tcl=1, tv=3)  f4 <- f |> ini(ini1) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1` #> ℹ change initial estimate of `tcl` to `1` #> ℹ change initial estimate of `tv` to `3`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>    0.1    1.0    3.0    0.7  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # or equivalently  ini1 <- list(tka=0.1, tcl=1, tv=3)  f4a <- f |> ini(ini1) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1` #> ℹ change initial estimate of `tcl` to `1` #> ℹ change initial estimate of `tv` to `3`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>    0.1    1.0    3.0    0.7  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } # commas separating values: f4 <- f |> ini(tka=0.1, tcl=1, tv=3) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1` #> ℹ change initial estimate of `tcl` to `1` #> ℹ change initial estimate of `tv` to `3` print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>    0.1    1.0    3.0    0.7  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # multiple lines in {} f4 <- f |>   ini({     tka <- 0.2     tcl <- 2     tv <- 6   }) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.2` #> ℹ change initial estimate of `tcl` to `2` #> ℹ change initial estimate of `tv` to `6`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>    0.2    2.0    6.0    0.7  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.2 #>         tcl <- 2 #>         tv <- 6 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } ome <- lotri(eta.ka + eta.v ~ c(0.6,                                 0.01, 10.1))  f4 <- f |> ini(ome) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `eta.ka` to `0.6` #> ℹ add covariance between `eta.v` and `eta.ka` with initial estimate `0.01` #> ℹ change initial estimate of `eta.v` to `10.1`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka   0.60  0.01 #> eta.v    0.01 10.10 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ c(0.01, 10.1) #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # or equavialtly use the lotri-type syntax for the omega:  f4 <- f |> ini(eta.ka + eta.v ~ c(0.6,                                   0.01, 0.2)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `eta.ka` to `0.6` #> ℹ add covariance between `eta.v` and `eta.ka` with initial estimate `0.01` #> ℹ change initial estimate of `eta.v` to `0.2` print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka   0.60  0.01 #> eta.v    0.01  0.20 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ c(0.01, 0.2) #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } eta <- c(eta.ka=0.6, eta.v=0.6)  f5 <- f |> ini(~eta) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `eta.ka` to `0.6` #> ℹ change initial estimate of `eta.v` to `0.6`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka   0.60  0.01 #> eta.v    0.01  0.20 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ c(0.01, 0.2) #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"single-parameter-assignment","dir":"Articles","previous_headings":"Modifying initial estimates > Changing the parameter values and possibly bounds","what":"Single parameter assignment","title":"Modifying Models","text":"simplest way change initial parameter estimates simply use ini(parameter=newValue). can also use <- ~ change value: fully worked example showing three types initial value modification : can change bounds like model specification using numeric vector c(low, estimate) c(low, estimate, hi). worked example: Note changing parameters default values might show parameter printout:","code":"f3 <- f |>   ini(tka <- 0.1) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1`  f4 <- f |>   ini(tka=0.1) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1`  f5 <- f |>   ini(tka ~ 0.1) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.1`  print(f5) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f3 <- f |>   ini(tka <- c(0, 0.1, 0.2)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate (0.1) and upper/lower bound (0 to 0.2) of `tka`  print(f3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- c(0, 0.1, 0.2) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }   f3 <- f |>   ini(tka <- c(0, 0.1)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate (0.1) and lower bound (0) of `tka`  print(f3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- c(0, 0.1) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f3 <- f |>   ini(tka <- c(0, 0.1, 0.2)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate (0.1) and upper/lower bound (0 to 0.2) of `tka`  print(f3) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- c(0, 0.1, 0.2) #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # Now reassign f4 <- f3 |>   ini(tka <- c(-Inf, 0.1, Inf)) #> ℹ change initial estimate (0.1) and upper/lower bound (-Inf to Inf) of `tka`  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.10   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.1 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"changing-parameter-types","dir":"Articles","previous_headings":"Modifying initial estimates > Changing the parameter values and possibly bounds","what":"Changing parameter types","title":"Modifying Models","text":"can change parameter type two operators either using -par convert parameter covariate ~par toggle population individual parameters. example 3:","code":"# Switch population parameter to between subject variability parameter: f4 <- f |>   ini( ~ tcl) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ convert 'tcl' from population parameter to between subject variability  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd  #>   0.45   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v tcl #> eta.ka    0.6   0.0   0 #> eta.v     0.0   0.1   0 #> tcl       0.0   0.0   1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>         tcl ~ 1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # Switch back to population parameter f5 <- f4 |>   ini( ~ tcl) #> ℹ convert 'tcl' from between subject variability to population parameter  print(f5) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd    tcl  #>   0.45   3.45   0.70   1.00  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         tcl <- 1 #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # Change the variable to a covariate parameter (ie it doesn't have an # initial estimate so remove it with the `-` operator):  f6 <- f4 |>   ini(-tcl) #> ℹ changing between subject variability parameter 'tcl' to covariate parameter  print(f6) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd  #>   0.45   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # You can change the covariate or remove the parameter estimate by # `tcl <- NULL`:  f6 <- f4 |>   ini(tcl <- NULL) #> ℹ changing between subject variability parameter 'tcl' to covariate parameter  print(f6) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd  #>   0.45   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # to add it back as a between subject variability or population # parameter you can pipe it as follows:  f7 <- f6 |>   ini(tcl=4) #> ℹ promote `tcl` to population parameter with initial estimate 4 #> ℹ change initial estimate of `tcl` to `4`  print(f7) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd    tcl  #>   0.45   3.45   0.70   4.00  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         tcl <- 4 #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }   f8 <- f6 |>   ini(tcl ~ 0.1) #> ℹ promote `tcl` to between subject variability with initial estimate 0.1 #> ℹ change initial estimate of `tcl` to `0.1`  print(f8) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka     tv add.sd  #>   0.45   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v tcl #> eta.ka    0.6   0.0 0.0 #> eta.v     0.0   0.1 0.0 #> tcl       0.0   0.0 0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>         tcl ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"changing-parameter-labels","dir":"Articles","previous_headings":"Modifying initial estimates > Changing the parameter values and possibly bounds","what":"Changing parameter labels","title":"Modifying Models","text":"want change/add parameter label assign parameter label(\"label add\"). example: can also change order performing operations: want remove labels can remove ini(par=label(NULL)); example:","code":"f4 <- f |>   ini(tka=label(\"Typical Ka (1/hr)\")) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f4) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Typical Ka (1/hr)\") #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f5 <- f |>   ini(tka=label(\"Typical Ka (1/hr)\"), append=tcl) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f5) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tcl    tka     tv add.sd  #>   1.00   0.45   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tcl <- 1 #>         tka <- 0.45 #>         label(\"Typical Ka (1/hr)\") #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f6 <- f |>   ini(tka=label(NULL)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f6) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"changing-parameter-transformations","dir":"Articles","previous_headings":"Modifying initial estimates > Changing the parameter values and possibly bounds","what":"Changing parameter transformations","title":"Modifying Models","text":"Back-transformations -ride back transformations nlmixr2 models. similar modification labels. use |> ini(tka=backTransform(exp)) add exponential back-transformation data: wish remove can also |> ini(tka=backTransform(NULL)):","code":"f7 <- f |>   ini(tka=backTransform(exp)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f7) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         backTransform(\"exp\") #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> } f8 <- f |>   ini(tka=backTransform(NULL)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  print(f8) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"removing-covariances-between-between-subject-varaibilities","dir":"Articles","previous_headings":"Modifying initial estimates","what":"Removing covariances between between subject varaibilities","title":"Modifying Models","text":"two approaches removing covarinaces subject variabilities: diag() -cov(var1, var2) diag() removes either covariance elements (arguments) covariance elements included argument list:","code":"fd <- function() {   ini({     tka <- 0.45     tcl <- 1     tv <- 3.45     add.sd <- c(0, 0.7)     eta.ka ~ 0.6     eta.v ~ c(0.01, 0.1)     eta.cl ~ c(0.01, 0.01, 1)   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl/v * center     cp <- center/v     cp ~ add(add.sd)   }) }  # If you want to remove all covariances you can use diag() with no # arguments  fd %>% ini(diag()) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ remove covariance `(eta.ka,eta.v)` #> ℹ remove covariance `(eta.ka,eta.cl)` #> ℹ remove covariance `(eta.v,eta.cl)` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v eta.cl #> eta.ka    0.6   0.0      0 #> eta.v     0.0   0.1      0 #> eta.cl    0.0   0.0      1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>         eta.cl ~ 1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # if you want to remove only covariances with eta.ka  you can use: fd %>% ini(diag(eta.ka)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ remove covariance `(eta.ka,eta.v)` #> ℹ remove covariance `(eta.ka,eta.cl)` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.cl eta.v eta.ka #> eta.cl   1.00  0.01    0.0 #> eta.v    0.01  0.10    0.0 #> eta.ka   0.00  0.00    0.6 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.cl ~ 1 #>         eta.v ~ c(0.01, 0.1) #>         eta.ka ~ 0.6 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }  # if you want to remove only the covariances with eta.ka and eta.v you can use: fd %>% ini(-cov(eta.ka, eta.v)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ remove covariance `(eta.ka, eta.v)` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   0.45   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.v eta.cl eta.ka #> eta.v   0.10   0.01   0.00 #> eta.cl  0.01   1.00   0.01 #> eta.ka  0.00   0.01   0.60 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.v ~ 0.1 #>         eta.cl ~ c(0.01, 1) #>         eta.ka ~ c(0, 0.01, 0.6) #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/Modifying-Models.html","id":"more-granular-access-of-initial-conditions","dir":"Articles","previous_headings":"Modifying initial estimates","what":"More granular access of initial conditions","title":"Modifying Models","text":"Just like model() can modify underlying data frame represents ini() block. case simply change initial estimate first parameter (tka):","code":"f <- rxode2(f) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  ini <- f$iniDf  print(ini) #>   ntheta neta1 neta2   name lower  est upper   fix label backTransform #> 1      1    NA    NA    tka  -Inf 0.45   Inf FALSE  <NA>          <NA> #> 2      2    NA    NA    tcl  -Inf 1.00   Inf FALSE  <NA>          <NA> #> 3      3    NA    NA     tv  -Inf 3.45   Inf FALSE  <NA>          <NA> #> 4      4    NA    NA add.sd     0 0.70   Inf FALSE  <NA>          <NA> #> 5     NA     1     1 eta.ka  -Inf 0.60   Inf FALSE  <NA>          <NA> #> 6     NA     2     2  eta.v  -Inf 0.10   Inf FALSE  <NA>          <NA> #>   condition  err #> 1      <NA> <NA> #> 2      <NA> <NA> #> 3      <NA> <NA> #> 4        cp  add #> 5        id <NA> #> 6        id <NA>  ini$est[1] <- 7  ini(f) <- ini  print(f) #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>    tka    tcl     tv add.sd  #>   7.00   1.00   3.45   0.70  #>  #> Omega ($omega):  #>        eta.ka eta.v #> eta.ka    0.6   0.0 #> eta.v     0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 7 #>         tcl <- 1 #>         tv <- 3.45 #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-cmt.html","id":"how-rxode2-assigns-compartment-numbers","dir":"Articles","previous_headings":"","what":"How rxode2 assigns compartment numbers","title":"Changing rxode2 compartment numbers","text":"rxode2 automatically assigns compartment numbers parsing. example, Mavoglurant PBPK model following model may used: look printout, can see rxode2 assigned compartment number(s) can also see classic rxode2 model. case use summary() function: case, Venous_Blood assigned compartment 15. Figuring can inconvenient also lead re-numbering compartment simulation estimation datasets. easy probably clearer specify compartment name, tools support compartment numbers. Therefore, way number compartment easily can lead less data modification multiple tools.","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` pbpk <- function() {   model({     KbBR = exp(lKbBR)     KbMU = exp(lKbMU)     KbAD = exp(lKbAD)     CLint= exp(lCLint + eta.LClint)     KbBO = exp(lKbBO)     KbRB = exp(lKbRB)      ## Regional blood flows     # Cardiac output (L/h) from White et al (1968)     CO  = (187.00*WT^0.81)*60/1000      QHT = 4.0 *CO/100     QBR = 12.0*CO/100     QMU = 17.0*CO/100     QAD = 5.0 *CO/100     QSK = 5.0 *CO/100     QSP = 3.0 *CO/100     QPA = 1.0 *CO/100     QLI = 25.5*CO/100     QST = 1.0 *CO/100     QGU = 14.0*CO/100     # Hepatic artery blood flow     QHA = QLI - (QSP + QPA + QST + QGU)      QBO = 5.0 *CO/100     QKI = 19.0*CO/100     QRB = CO - (QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI)     QLU = QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI + QRB      ## Organs' volumes = organs' weights / organs' density     VLU = (0.76 *WT/100)/1.051     VHT = (0.47 *WT/100)/1.030     VBR = (2.00 *WT/100)/1.036     VMU = (40.00*WT/100)/1.041     VAD = (21.42*WT/100)/0.916     VSK = (3.71 *WT/100)/1.116     VSP = (0.26 *WT/100)/1.054     VPA = (0.14 *WT/100)/1.045     VLI = (2.57 *WT/100)/1.040     VST = (0.21 *WT/100)/1.050     VGU = (1.44 *WT/100)/1.043     VBO = (14.29*WT/100)/1.990     VKI = (0.44 *WT/100)/1.050     VAB = (2.81 *WT/100)/1.040     VVB = (5.62 *WT/100)/1.040     VRB = (3.86 *WT/100)/1.040      ## Fixed parameters     BP = 0.61      # Blood:plasma partition coefficient     fup = 0.028    # Fraction unbound in plasma     fub = fup/BP   # Fraction unbound in blood      KbLU = exp(0.8334)     KbHT = exp(1.1205)     KbSK = exp(-.5238)     KbSP = exp(0.3224)     KbPA = exp(0.3224)     KbLI = exp(1.7604)     KbST = exp(0.3224)     KbGU = exp(1.2026)     KbKI = exp(1.3171)      ##-----------------------------------------     S15 = VVB*BP/1000     C15 = Venous_Blood/S15      ##-----------------------------------------     d/dt(Lungs) = QLU*(Venous_Blood/VVB - Lungs/KbLU/VLU)     d/dt(Heart) = QHT*(Arterial_Blood/VAB - Heart/KbHT/VHT)     d/dt(Brain) = QBR*(Arterial_Blood/VAB - Brain/KbBR/VBR)     d/dt(Muscles) = QMU*(Arterial_Blood/VAB - Muscles/KbMU/VMU)     d/dt(Adipose) = QAD*(Arterial_Blood/VAB - Adipose/KbAD/VAD)     d/dt(Skin) = QSK*(Arterial_Blood/VAB - Skin/KbSK/VSK)     d/dt(Spleen) = QSP*(Arterial_Blood/VAB - Spleen/KbSP/VSP)     d/dt(Pancreas) = QPA*(Arterial_Blood/VAB - Pancreas/KbPA/VPA)     d/dt(Liver) = QHA*Arterial_Blood/VAB + QSP*Spleen/KbSP/VSP +       QPA*Pancreas/KbPA/VPA + QST*Stomach/KbST/VST +       QGU*Gut/KbGU/VGU - CLint*fub*Liver/KbLI/VLI - QLI*Liver/KbLI/VLI     d/dt(Stomach) = QST*(Arterial_Blood/VAB - Stomach/KbST/VST)     d/dt(Gut) = QGU*(Arterial_Blood/VAB - Gut/KbGU/VGU)     d/dt(Bones) = QBO*(Arterial_Blood/VAB - Bones/KbBO/VBO)     d/dt(Kidneys) = QKI*(Arterial_Blood/VAB - Kidneys/KbKI/VKI)     d/dt(Arterial_Blood) = QLU*(Lungs/KbLU/VLU - Arterial_Blood/VAB)     d/dt(Venous_Blood) = QHT*Heart/KbHT/VHT + QBR*Brain/KbBR/VBR +       QMU*Muscles/KbMU/VMU + QAD*Adipose/KbAD/VAD + QSK*Skin/KbSK/VSK +       QLI*Liver/KbLI/VLI + QBO*Bones/KbBO/VBO + QKI*Kidneys/KbKI/VKI +       QRB*Rest_of_Body/KbRB/VRB - QLU*Venous_Blood/VVB     d/dt(Rest_of_Body) = QRB*(Arterial_Blood/VAB - Rest_of_Body/KbRB/VRB)   }) } pbpk <- pbpk() print(pbpk) #>  -- rxode2-based free-form 16-cmt ODE model -------------------------------------  #>  #> States ($state or $stateDf):  #>    Compartment Number Compartment Name #> 1                   1            Lungs #> 2                   2            Heart #> 3                   3            Brain #> 4                   4          Muscles #> 5                   5          Adipose #> 6                   6             Skin #> 7                   7           Spleen #> 8                   8         Pancreas #> 9                   9            Liver #> 10                 10          Stomach #> 11                 11              Gut #> 12                 12            Bones #> 13                 13          Kidneys #> 14                 14   Arterial_Blood #> 15                 15     Venous_Blood #> 16                 16     Rest_of_Body #>  -- Model (Normalized Syntax): --  #> function() { #>     model({ #>         KbBR = exp(lKbBR) #>         KbMU = exp(lKbMU) #>         KbAD = exp(lKbAD) #>         CLint = exp(lCLint + eta.LClint) #>         KbBO = exp(lKbBO) #>         KbRB = exp(lKbRB) #>         CO = (187 * WT^0.81) * 60/1000 #>         QHT = 4 * CO/100 #>         QBR = 12 * CO/100 #>         QMU = 17 * CO/100 #>         QAD = 5 * CO/100 #>         QSK = 5 * CO/100 #>         QSP = 3 * CO/100 #>         QPA = 1 * CO/100 #>         QLI = 25.5 * CO/100 #>         QST = 1 * CO/100 #>         QGU = 14 * CO/100 #>         QHA = QLI - (QSP + QPA + QST + QGU) #>         QBO = 5 * CO/100 #>         QKI = 19 * CO/100 #>         QRB = CO - (QHT + QBR + QMU + QAD + QSK + QLI + QBO +  #>             QKI) #>         QLU = QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI +  #>             QRB #>         VLU = (0.76 * WT/100)/1.051 #>         VHT = (0.47 * WT/100)/1.03 #>         VBR = (2 * WT/100)/1.036 #>         VMU = (40 * WT/100)/1.041 #>         VAD = (21.42 * WT/100)/0.916 #>         VSK = (3.71 * WT/100)/1.116 #>         VSP = (0.26 * WT/100)/1.054 #>         VPA = (0.14 * WT/100)/1.045 #>         VLI = (2.57 * WT/100)/1.04 #>         VST = (0.21 * WT/100)/1.05 #>         VGU = (1.44 * WT/100)/1.043 #>         VBO = (14.29 * WT/100)/1.99 #>         VKI = (0.44 * WT/100)/1.05 #>         VAB = (2.81 * WT/100)/1.04 #>         VVB = (5.62 * WT/100)/1.04 #>         VRB = (3.86 * WT/100)/1.04 #>         BP = 0.61 #>         fup = 0.028 #>         fub = fup/BP #>         KbLU = exp(0.8334) #>         KbHT = exp(1.1205) #>         KbSK = exp(-0.5238) #>         KbSP = exp(0.3224) #>         KbPA = exp(0.3224) #>         KbLI = exp(1.7604) #>         KbST = exp(0.3224) #>         KbGU = exp(1.2026) #>         KbKI = exp(1.3171) #>         S15 = VVB * BP/1000 #>         C15 = Venous_Blood/S15 #>         d/dt(Lungs) = QLU * (Venous_Blood/VVB - Lungs/KbLU/VLU) #>         d/dt(Heart) = QHT * (Arterial_Blood/VAB - Heart/KbHT/VHT) #>         d/dt(Brain) = QBR * (Arterial_Blood/VAB - Brain/KbBR/VBR) #>         d/dt(Muscles) = QMU * (Arterial_Blood/VAB - Muscles/KbMU/VMU) #>         d/dt(Adipose) = QAD * (Arterial_Blood/VAB - Adipose/KbAD/VAD) #>         d/dt(Skin) = QSK * (Arterial_Blood/VAB - Skin/KbSK/VSK) #>         d/dt(Spleen) = QSP * (Arterial_Blood/VAB - Spleen/KbSP/VSP) #>         d/dt(Pancreas) = QPA * (Arterial_Blood/VAB - Pancreas/KbPA/VPA) #>         d/dt(Liver) = QHA * Arterial_Blood/VAB + QSP * Spleen/KbSP/VSP +  #>             QPA * Pancreas/KbPA/VPA + QST * Stomach/KbST/VST +  #>             QGU * Gut/KbGU/VGU - CLint * fub * Liver/KbLI/VLI -  #>             QLI * Liver/KbLI/VLI #>         d/dt(Stomach) = QST * (Arterial_Blood/VAB - Stomach/KbST/VST) #>         d/dt(Gut) = QGU * (Arterial_Blood/VAB - Gut/KbGU/VGU) #>         d/dt(Bones) = QBO * (Arterial_Blood/VAB - Bones/KbBO/VBO) #>         d/dt(Kidneys) = QKI * (Arterial_Blood/VAB - Kidneys/KbKI/VKI) #>         d/dt(Arterial_Blood) = QLU * (Lungs/KbLU/VLU - Arterial_Blood/VAB) #>         d/dt(Venous_Blood) = QHT * Heart/KbHT/VHT + QBR * Brain/KbBR/VBR +  #>             QMU * Muscles/KbMU/VMU + QAD * Adipose/KbAD/VAD +  #>             QSK * Skin/KbSK/VSK + QLI * Liver/KbLI/VLI + QBO *  #>             Bones/KbBO/VBO + QKI * Kidneys/KbKI/VKI + QRB * Rest_of_Body/KbRB/VRB -  #>             QLU * Venous_Blood/VVB #>         d/dt(Rest_of_Body) = QRB * (Arterial_Blood/VAB - Rest_of_Body/KbRB/VRB) #>     }) #> } pbpk <- pbpk$simulationModel #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ summary(pbpk) #> rxode2 4.0.0 model named rx_bc7116206b34bb97dd72370525f2842f model (ready).  #> DLL: /tmp/RtmpG60pcR/rxode2/rx_bc7116206b34bb97dd72370525f2842f__.rxd/rx_bc7116206b34bb97dd72370525f2842f_.so #> NULL #>  #> Calculated Variables: #>  [1] \"KbBR\"  \"KbMU\"  \"KbAD\"  \"CLint\" \"KbBO\"  \"KbRB\"  \"CO\"    \"QHT\"   \"QBR\"   #> [10] \"QMU\"   \"QAD\"   \"QSK\"   \"QSP\"   \"QPA\"   \"QLI\"   \"QST\"   \"QGU\"   \"QHA\"   #> [19] \"QBO\"   \"QKI\"   \"QRB\"   \"QLU\"   \"VLU\"   \"VHT\"   \"VBR\"   \"VMU\"   \"VAD\"   #> [28] \"VSK\"   \"VSP\"   \"VPA\"   \"VLI\"   \"VST\"   \"VGU\"   \"VBO\"   \"VKI\"   \"VAB\"   #> [37] \"VVB\"   \"VRB\"   \"fub\"   \"KbLU\"  \"KbHT\"  \"KbSK\"  \"KbSP\"  \"KbPA\"  \"KbLI\"  #> [46] \"KbST\"  \"KbGU\"  \"KbKI\"  \"S15\"   \"C15\"   #> -- rxode2 Model Syntax -- #> rxode2({ #>     param(lKbBR, lKbMU, lKbAD, lCLint, eta.LClint, lKbBO, lKbRB,  #>         WT) #>     KbBR = exp(lKbBR) #>     KbMU = exp(lKbMU) #>     KbAD = exp(lKbAD) #>     CLint = exp(lCLint + eta.LClint) #>     KbBO = exp(lKbBO) #>     KbRB = exp(lKbRB) #>     CO = (187 * WT^0.81) * 60/1000 #>     QHT = 4 * CO/100 #>     QBR = 12 * CO/100 #>     QMU = 17 * CO/100 #>     QAD = 5 * CO/100 #>     QSK = 5 * CO/100 #>     QSP = 3 * CO/100 #>     QPA = 1 * CO/100 #>     QLI = 25.5 * CO/100 #>     QST = 1 * CO/100 #>     QGU = 14 * CO/100 #>     QHA = QLI - (QSP + QPA + QST + QGU) #>     QBO = 5 * CO/100 #>     QKI = 19 * CO/100 #>     QRB = CO - (QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI) #>     QLU = QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI + QRB #>     VLU = (0.76 * WT/100)/1.051 #>     VHT = (0.47 * WT/100)/1.03 #>     VBR = (2 * WT/100)/1.036 #>     VMU = (40 * WT/100)/1.041 #>     VAD = (21.42 * WT/100)/0.916 #>     VSK = (3.71 * WT/100)/1.116 #>     VSP = (0.26 * WT/100)/1.054 #>     VPA = (0.14 * WT/100)/1.045 #>     VLI = (2.57 * WT/100)/1.04 #>     VST = (0.21 * WT/100)/1.05 #>     VGU = (1.44 * WT/100)/1.043 #>     VBO = (14.29 * WT/100)/1.99 #>     VKI = (0.44 * WT/100)/1.05 #>     VAB = (2.81 * WT/100)/1.04 #>     VVB = (5.62 * WT/100)/1.04 #>     VRB = (3.86 * WT/100)/1.04 #>     BP = 0.61 #>     fup = 0.028 #>     fub = fup/BP #>     KbLU = exp(0.8334) #>     KbHT = exp(1.1205) #>     KbSK = exp(-0.5238) #>     KbSP = exp(0.3224) #>     KbPA = exp(0.3224) #>     KbLI = exp(1.7604) #>     KbST = exp(0.3224) #>     KbGU = exp(1.2026) #>     KbKI = exp(1.3171) #>     S15 = VVB * BP/1000 #>     C15 = Venous_Blood/S15 #>     d/dt(Lungs) = QLU * (Venous_Blood/VVB - Lungs/KbLU/VLU) #>     d/dt(Heart) = QHT * (Arterial_Blood/VAB - Heart/KbHT/VHT) #>     d/dt(Brain) = QBR * (Arterial_Blood/VAB - Brain/KbBR/VBR) #>     d/dt(Muscles) = QMU * (Arterial_Blood/VAB - Muscles/KbMU/VMU) #>     d/dt(Adipose) = QAD * (Arterial_Blood/VAB - Adipose/KbAD/VAD) #>     d/dt(Skin) = QSK * (Arterial_Blood/VAB - Skin/KbSK/VSK) #>     d/dt(Spleen) = QSP * (Arterial_Blood/VAB - Spleen/KbSP/VSP) #>     d/dt(Pancreas) = QPA * (Arterial_Blood/VAB - Pancreas/KbPA/VPA) #>     d/dt(Liver) = QHA * Arterial_Blood/VAB + QSP * Spleen/KbSP/VSP +  #>         QPA * Pancreas/KbPA/VPA + QST * Stomach/KbST/VST + QGU *  #>         Gut/KbGU/VGU - CLint * fub * Liver/KbLI/VLI - QLI * Liver/KbLI/VLI #>     d/dt(Stomach) = QST * (Arterial_Blood/VAB - Stomach/KbST/VST) #>     d/dt(Gut) = QGU * (Arterial_Blood/VAB - Gut/KbGU/VGU) #>     d/dt(Bones) = QBO * (Arterial_Blood/VAB - Bones/KbBO/VBO) #>     d/dt(Kidneys) = QKI * (Arterial_Blood/VAB - Kidneys/KbKI/VKI) #>     d/dt(Arterial_Blood) = QLU * (Lungs/KbLU/VLU - Arterial_Blood/VAB) #>     d/dt(Venous_Blood) = QHT * Heart/KbHT/VHT + QBR * Brain/KbBR/VBR +  #>         QMU * Muscles/KbMU/VMU + QAD * Adipose/KbAD/VAD + QSK *  #>         Skin/KbSK/VSK + QLI * Liver/KbLI/VLI + QBO * Bones/KbBO/VBO +  #>         QKI * Kidneys/KbKI/VKI + QRB * Rest_of_Body/KbRB/VRB -  #>         QLU * Venous_Blood/VVB #>     d/dt(Rest_of_Body) = QRB * (Arterial_Blood/VAB - Rest_of_Body/KbRB/VRB) #> })"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-cmt.html","id":"changing-compartment-numbers-by-pre-declaring-the-compartments","dir":"Articles","previous_headings":"","what":"Changing compartment numbers by pre-declaring the compartments","title":"Changing rxode2 compartment numbers","text":"add compartments rxode2 model order desire simply need pre-declare compartments cmt. example specifying Venous_Blood Skin 1st 2nd compartments, respectively, simple: can see change simple printout first two compartments Venous_Blood followed Skin.","code":"pbpk2 <- function() {   model({     ## Now this is the first compartment, ie cmt=1     cmt(Venous_Blood)     ## Skin may be a compartment you wish to dose to as well,     ##  so it is now cmt=2     cmt(Skin)     KbBR = exp(lKbBR)     KbMU = exp(lKbMU)     KbAD = exp(lKbAD)     CLint= exp(lCLint + eta.LClint)     KbBO = exp(lKbBO)     KbRB = exp(lKbRB)      ## Regional blood flows     # Cardiac output (L/h) from White et al (1968)m     CO  = (187.00*WT^0.81)*60/1000;     QHT = 4.0 *CO/100;     QBR = 12.0*CO/100;     QMU = 17.0*CO/100;     QAD = 5.0 *CO/100;     QSK = 5.0 *CO/100;     QSP = 3.0 *CO/100;     QPA = 1.0 *CO/100;     QLI = 25.5*CO/100;     QST = 1.0 *CO/100;     QGU = 14.0*CO/100;     QHA = QLI - (QSP + QPA + QST + QGU); # Hepatic artery blood flow     QBO = 5.0 *CO/100;     QKI = 19.0*CO/100;     QRB = CO - (QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI);     QLU = QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI + QRB;      ## Organs' volumes = organs' weights / organs' density     VLU = (0.76 *WT/100)/1.051;     VHT = (0.47 *WT/100)/1.030;     VBR = (2.00 *WT/100)/1.036;     VMU = (40.00*WT/100)/1.041;     VAD = (21.42*WT/100)/0.916;     VSK = (3.71 *WT/100)/1.116;     VSP = (0.26 *WT/100)/1.054;     VPA = (0.14 *WT/100)/1.045;     VLI = (2.57 *WT/100)/1.040;     VST = (0.21 *WT/100)/1.050;     VGU = (1.44 *WT/100)/1.043;     VBO = (14.29*WT/100)/1.990;     VKI = (0.44 *WT/100)/1.050;     VAB = (2.81 *WT/100)/1.040;     VVB = (5.62 *WT/100)/1.040;     VRB = (3.86 *WT/100)/1.040;      ## Fixed parameters     BP = 0.61;      # Blood:plasma partition coefficient     fup = 0.028;    # Fraction unbound in plasma     fub = fup/BP;   # Fraction unbound in blood      KbLU = exp(0.8334);     KbHT = exp(1.1205);     KbSK = exp(-.5238);     KbSP = exp(0.3224);     KbPA = exp(0.3224);     KbLI = exp(1.7604);     KbST = exp(0.3224);     KbGU = exp(1.2026);     KbKI = exp(1.3171);      ##-----------------------------------------     S15 = VVB*BP/1000;     C15 = Venous_Blood/S15      ##-----------------------------------------     d/dt(Lungs) = QLU*(Venous_Blood/VVB - Lungs/KbLU/VLU);     d/dt(Heart) = QHT*(Arterial_Blood/VAB - Heart/KbHT/VHT);     d/dt(Brain) = QBR*(Arterial_Blood/VAB - Brain/KbBR/VBR);     d/dt(Muscles) = QMU*(Arterial_Blood/VAB - Muscles/KbMU/VMU);     d/dt(Adipose) = QAD*(Arterial_Blood/VAB - Adipose/KbAD/VAD);     d/dt(Skin) = QSK*(Arterial_Blood/VAB - Skin/KbSK/VSK);     d/dt(Spleen) = QSP*(Arterial_Blood/VAB - Spleen/KbSP/VSP);     d/dt(Pancreas) = QPA*(Arterial_Blood/VAB - Pancreas/KbPA/VPA);     d/dt(Liver) = QHA*Arterial_Blood/VAB + QSP*Spleen/KbSP/VSP +       QPA*Pancreas/KbPA/VPA + QST*Stomach/KbST/VST + QGU*Gut/KbGU/VGU -       CLint*fub*Liver/KbLI/VLI - QLI*Liver/KbLI/VLI;       d/dt(Stomach) = QST*(Arterial_Blood/VAB - Stomach/KbST/VST);       d/dt(Gut) = QGU*(Arterial_Blood/VAB - Gut/KbGU/VGU);       d/dt(Bones) = QBO*(Arterial_Blood/VAB - Bones/KbBO/VBO);       d/dt(Kidneys) = QKI*(Arterial_Blood/VAB - Kidneys/KbKI/VKI);       d/dt(Arterial_Blood) = QLU*(Lungs/KbLU/VLU - Arterial_Blood/VAB);       d/dt(Venous_Blood) = QHT*Heart/KbHT/VHT + QBR*Brain/KbBR/VBR +         QMU*Muscles/KbMU/VMU + QAD*Adipose/KbAD/VAD + QSK*Skin/KbSK/VSK +         QLI*Liver/KbLI/VLI + QBO*Bones/KbBO/VBO + QKI*Kidneys/KbKI/VKI +         QRB*Rest_of_Body/KbRB/VRB - QLU*Venous_Blood/VVB;         d/dt(Rest_of_Body) = QRB*(Arterial_Blood/VAB - Rest_of_Body/KbRB/VRB);   }) } pbpk2 <- pbpk2() pbpk2 #>  -- rxode2-based free-form 16-cmt ODE model -------------------------------------  #>  #> States ($state or $stateDf):  #>    Compartment Number Compartment Name #> 1                   1     Venous_Blood #> 2                   2             Skin #> 3                   3            Lungs #> 4                   4            Heart #> 5                   5            Brain #> 6                   6          Muscles #> 7                   7          Adipose #> 8                   8           Spleen #> 9                   9         Pancreas #> 10                 10            Liver #> 11                 11          Stomach #> 12                 12              Gut #> 13                 13            Bones #> 14                 14          Kidneys #> 15                 15   Arterial_Blood #> 16                 16     Rest_of_Body #>  -- Model (Normalized Syntax): --  #> function() { #>     model({ #>         cmt(Venous_Blood) #>         cmt(Skin) #>         KbBR = exp(lKbBR) #>         KbMU = exp(lKbMU) #>         KbAD = exp(lKbAD) #>         CLint = exp(lCLint + eta.LClint) #>         KbBO = exp(lKbBO) #>         KbRB = exp(lKbRB) #>         CO = (187 * WT^0.81) * 60/1000 #>         QHT = 4 * CO/100 #>         QBR = 12 * CO/100 #>         QMU = 17 * CO/100 #>         QAD = 5 * CO/100 #>         QSK = 5 * CO/100 #>         QSP = 3 * CO/100 #>         QPA = 1 * CO/100 #>         QLI = 25.5 * CO/100 #>         QST = 1 * CO/100 #>         QGU = 14 * CO/100 #>         QHA = QLI - (QSP + QPA + QST + QGU) #>         QBO = 5 * CO/100 #>         QKI = 19 * CO/100 #>         QRB = CO - (QHT + QBR + QMU + QAD + QSK + QLI + QBO +  #>             QKI) #>         QLU = QHT + QBR + QMU + QAD + QSK + QLI + QBO + QKI +  #>             QRB #>         VLU = (0.76 * WT/100)/1.051 #>         VHT = (0.47 * WT/100)/1.03 #>         VBR = (2 * WT/100)/1.036 #>         VMU = (40 * WT/100)/1.041 #>         VAD = (21.42 * WT/100)/0.916 #>         VSK = (3.71 * WT/100)/1.116 #>         VSP = (0.26 * WT/100)/1.054 #>         VPA = (0.14 * WT/100)/1.045 #>         VLI = (2.57 * WT/100)/1.04 #>         VST = (0.21 * WT/100)/1.05 #>         VGU = (1.44 * WT/100)/1.043 #>         VBO = (14.29 * WT/100)/1.99 #>         VKI = (0.44 * WT/100)/1.05 #>         VAB = (2.81 * WT/100)/1.04 #>         VVB = (5.62 * WT/100)/1.04 #>         VRB = (3.86 * WT/100)/1.04 #>         BP = 0.61 #>         fup = 0.028 #>         fub = fup/BP #>         KbLU = exp(0.8334) #>         KbHT = exp(1.1205) #>         KbSK = exp(-0.5238) #>         KbSP = exp(0.3224) #>         KbPA = exp(0.3224) #>         KbLI = exp(1.7604) #>         KbST = exp(0.3224) #>         KbGU = exp(1.2026) #>         KbKI = exp(1.3171) #>         S15 = VVB * BP/1000 #>         C15 = Venous_Blood/S15 #>         d/dt(Lungs) = QLU * (Venous_Blood/VVB - Lungs/KbLU/VLU) #>         d/dt(Heart) = QHT * (Arterial_Blood/VAB - Heart/KbHT/VHT) #>         d/dt(Brain) = QBR * (Arterial_Blood/VAB - Brain/KbBR/VBR) #>         d/dt(Muscles) = QMU * (Arterial_Blood/VAB - Muscles/KbMU/VMU) #>         d/dt(Adipose) = QAD * (Arterial_Blood/VAB - Adipose/KbAD/VAD) #>         d/dt(Skin) = QSK * (Arterial_Blood/VAB - Skin/KbSK/VSK) #>         d/dt(Spleen) = QSP * (Arterial_Blood/VAB - Spleen/KbSP/VSP) #>         d/dt(Pancreas) = QPA * (Arterial_Blood/VAB - Pancreas/KbPA/VPA) #>         d/dt(Liver) = QHA * Arterial_Blood/VAB + QSP * Spleen/KbSP/VSP +  #>             QPA * Pancreas/KbPA/VPA + QST * Stomach/KbST/VST +  #>             QGU * Gut/KbGU/VGU - CLint * fub * Liver/KbLI/VLI -  #>             QLI * Liver/KbLI/VLI #>         d/dt(Stomach) = QST * (Arterial_Blood/VAB - Stomach/KbST/VST) #>         d/dt(Gut) = QGU * (Arterial_Blood/VAB - Gut/KbGU/VGU) #>         d/dt(Bones) = QBO * (Arterial_Blood/VAB - Bones/KbBO/VBO) #>         d/dt(Kidneys) = QKI * (Arterial_Blood/VAB - Kidneys/KbKI/VKI) #>         d/dt(Arterial_Blood) = QLU * (Lungs/KbLU/VLU - Arterial_Blood/VAB) #>         d/dt(Venous_Blood) = QHT * Heart/KbHT/VHT + QBR * Brain/KbBR/VBR +  #>             QMU * Muscles/KbMU/VMU + QAD * Adipose/KbAD/VAD +  #>             QSK * Skin/KbSK/VSK + QLI * Liver/KbLI/VLI + QBO *  #>             Bones/KbBO/VBO + QKI * Kidneys/KbKI/VKI + QRB * Rest_of_Body/KbRB/VRB -  #>             QLU * Venous_Blood/VVB #>         d/dt(Rest_of_Body) = QRB * (Arterial_Blood/VAB - Rest_of_Body/KbRB/VRB) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-cmt.html","id":"appending-compartments-to-the-model","dir":"Articles","previous_headings":"","what":"Appending compartments to the model","title":"Changing rxode2 compartment numbers","text":"can also append “compartments” model. ODE solving internals, add fake compartments model differential equations defined. example legal: can see clearly underlying classic rxode2 model: compartments defined differential equations supported; model : give error:","code":"ode.1c.ka <- function(){   model({     C2 = center/V     d / dt(depot) = -KA * depot     d/dt(center) = KA * depot - CL*C2     cmt(eff)   }) }  ode.1c.ka <- ode.1c.ka() print(ode.1c.ka) #>  -- rxode2-based free-form 2-cmt ODE model --------------------------------------  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  -- Model (Normalized Syntax): --  #> function() { #>     model({ #>         C2 = center/V #>         d/dt(depot) = -KA * depot #>         d/dt(center) = KA * depot - CL * C2 #>         cmt(eff) #>     }) #> } ode.1c.ka$simulationModel #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> rxode2 4.0.0 model named rx_71a997e983c093a85743381f268de70e model (ready).  #> x$state: depot, center #> x$stateExtra: eff #> x$params: V, KA, CL #> x$lhs: C2 ode.1c.ka <- rxode2({     cmt(eff)     C2 = center/V;     d / dt(depot) = -KA * depot     d/dt(center) = KA * depot - CL*C2 }) Error in rxModelVars_(obj) :    Evaluation error: Compartment 'eff' needs differential equations defined."},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-covariates.html","id":"individual-covariates","dir":"Articles","previous_headings":"","what":"Individual Covariates","title":"rxode2 Covariates","text":"individual covariate wish solve may specify iCov dataset:","code":"library(rxode2) ## rxode2 4.0.0 using 2 threads (see ?getRxThreads) ##   no cache: create with `rxCreateCache()` library(units) ## udunits database from /usr/share/xml/udunits/udunits2.xml library(xgxr)  mod3 <- function() {   ini({     TKA   <- 2.94E-01     ## Clearance with individuals     TCL   <- 1.86E+01      TV2   <-4.02E+01     TQ    <-1.05E+01     TV3   <-2.97E+02     TKin  <- 1     TKout <- 1     TEC50 <-200   })   model({     KA            <- TKA     CL            <- TCL * (WT / 70) ^ 0.75     V2            <- TV2     Q             <- TQ     V3            <- TV3     Kin           <- TKin     Kout          <- TKout     EC50          <- TEC50     Tz            <- 8     amp           <- 0.1     C2            <- central/V2     C3            <- peri/V3     d/dt(depot)   <- -KA*depot     d/dt(central) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)    <-                    Q*C2 - Q*C3     d/dt(eff)     <-  Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0)        <- 1  ## This specifies that the effect compartment starts at 1.   }) }  ev <- et(amount.units=\"mg\", time.units=\"hours\") %>%   et(amt=10000, cmt=1) %>%   et(0,48,length.out=100) %>%   et(id=1:4)  set.seed(10) rxSetSeed(10) ## Now use iCov to simulate a 4-id sample r1 <- solve(mod3, ev,             # Create individual covariate data-frame             iCov=data.frame(id=1:4, WT=rnorm(4, 70, 10))) ## ℹ parameter labels from comments are typically ignored in non-interactive mode ## ℹ Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ print(r1) ## ── Solved rxode2 object ── ## ── Parameters ($params): ── ##     TKA     TCL     TV2      TQ     TV3    TKin   TKout   TEC50      Tz     amp  ##   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000   8.000   0.100  ## ── Initial Conditions ($inits): ── ##   depot central    peri     eff  ##       0       0       0       1  ## ── First part of data (object): ── ## # A tibble: 400 × 17 ##      id  time    KA    CL    V2     Q    V3   Kin  Kout  EC50    C2    C3  depot ##   <int>   [h] <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> ## 1     1 0     0.294  18.6  40.2  10.5   297     1     1   200   0   0     10000  ## 2     1 0.485 0.294  18.6  40.2  10.5   297     1     1   200  27.8 0.257  8671. ## 3     1 0.970 0.294  18.6  40.2  10.5   297     1     1   200  43.7 0.873  7519. ## 4     1 1.45  0.294  18.6  40.2  10.5   297     1     1   200  51.7 1.68   6520. ## 5     1 1.94  0.294  18.6  40.2  10.5   297     1     1   200  54.7 2.56   5654. ## 6     1 2.42  0.294  18.6  40.2  10.5   297     1     1   200  54.5 3.45   4903. ## # ℹ 394 more rows ## # ℹ 4 more variables: central <dbl>, peri <dbl>, eff <dbl>, WT <dbl> plot(r1, C2, log=\"y\") ## Warning in ggplot2::scale_y_log10(..., breaks = breaks, minor_breaks = ## minor_breaks, : log-10 transformation introduced infinite ## values."},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-covariates.html","id":"time-varying-covariates","dir":"Articles","previous_headings":"","what":"Time Varying Covariates","title":"rxode2 Covariates","text":"Covariates easy specify rxode2, can specify variable. Time-varying covariates, like clock time circadian rhythm model, can also used. Extending indirect response model already discussed, : Now covariate present event dataset, system can solved combining dataset model: solving ODE equations, solver may sample times outside data. happens, ODE solver can use linear interpolation covariate values. equivalent R’s approxfun method=\"linear\".   Note linear approximation case leads kinks solved system 24-hours covariate linear interpolation near 24 near 0. linear seems reasonable, cases like clock time make interpolation methods attractive. rxode2 default covariate interpolation last observation carried forward (locf), constant approximation. equivalent R’s approxfun method=\"constant\". gives following plots:   case, plots seem smoother. can also use NONMEM’s preferred interpolation style next observation carried backward (NOCB): gives following plots:","code":"library(rxode2) library(units)  mod4 <- mod3 %>%   model(d/dt(eff) <-  Kin - Kout*(1-C2/(EC50+C2))*eff) %>%   model(-Kin) %>%   model(Kin <- TKin + amp *cos(2*pi*(ctime-Tz)/24), append=C2, cov=\"ctime\")   ev <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%     et(amt=10000, cmt=1) %>%     et(0,48,length.out=100)   ## Create data frame of 8 am dosing for the first dose This is done ## with base R but it can be done with dplyr or data.table ev$ctime <- (ev$time+set_units(8,hr)) %% 24 ev$WT <- 70 r1 <- solve(mod4, ev, covsInterpolation=\"linear\") print(r1) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #>        TKA        TCL        TV2         TQ        TV3      TKout      TEC50  #>   0.294000  18.600000  40.200000  10.500000 297.000000   1.000000 200.000000  #>       TKin         Tz        amp         pi  #>   1.000000   8.000000   0.100000   3.141593  #> ── Initial Conditions ($inits): ── #>   depot central    peri     eff  #>       0       0       0       1  #> ── First part of data (object): ── #> # A tibble: 100 × 17 #>    time    KA    CL    V2     Q    V3  Kout  EC50    C2   Kin    C3  depot #>     [h] <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1 0     0.294  18.6  40.2  10.5   297     1   200   0    1.1  0     10000  #> 2 0.485 0.294  18.6  40.2  10.5   297     1   200  27.8  1.10 0.257  8671. #> 3 0.970 0.294  18.6  40.2  10.5   297     1   200  43.7  1.10 0.874  7519. #> 4 1.45  0.294  18.6  40.2  10.5   297     1   200  51.8  1.09 1.68   6520. #> 5 1.94  0.294  18.6  40.2  10.5   297     1   200  54.8  1.09 2.56   5654. #> 6 2.42  0.294  18.6  40.2  10.5   297     1   200  54.6  1.08 3.45   4903. #> # ℹ 94 more rows #> # ℹ 5 more variables: central <dbl>, peri <dbl>, eff <dbl>, ctime [h], WT <dbl> plot(r1,C2, ylab=\"Central Concentration\") plot(r1,eff) + ylab(\"Effect\") + xlab(\"Time\") r1 <- solve(mod4, ev,covsInterpolation=\"locf\") print(r1) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #>        TKA        TCL        TV2         TQ        TV3      TKout      TEC50  #>   0.294000  18.600000  40.200000  10.500000 297.000000   1.000000 200.000000  #>       TKin         Tz        amp         pi  #>   1.000000   8.000000   0.100000   3.141593  #> ── Initial Conditions ($inits): ── #>   depot central    peri     eff  #>       0       0       0       1  #> ── First part of data (object): ── #> # A tibble: 100 × 17 #>    time    KA    CL    V2     Q    V3  Kout  EC50    C2   Kin    C3  depot #>     [h] <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1 0     0.294  18.6  40.2  10.5   297     1   200   0    1.1  0     10000  #> 2 0.485 0.294  18.6  40.2  10.5   297     1   200  27.8  1.10 0.257  8671. #> 3 0.970 0.294  18.6  40.2  10.5   297     1   200  43.7  1.10 0.874  7519. #> 4 1.45  0.294  18.6  40.2  10.5   297     1   200  51.8  1.09 1.68   6520. #> 5 1.94  0.294  18.6  40.2  10.5   297     1   200  54.8  1.09 2.56   5654. #> 6 2.42  0.294  18.6  40.2  10.5   297     1   200  54.6  1.08 3.45   4903. #> # ℹ 94 more rows #> # ℹ 5 more variables: central <dbl>, peri <dbl>, eff <dbl>, ctime [h], WT <dbl> plot(r1,C2, ylab=\"Central Concentration\", xlab=\"Time\") plot(r1,eff, ylab=\"Effect\", xlab=\"Time\") r1 <- solve(mod4, ev,covsInterpolation=\"nocb\") print(r1) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #>        TKA        TCL        TV2         TQ        TV3      TKout      TEC50  #>   0.294000  18.600000  40.200000  10.500000 297.000000   1.000000 200.000000  #>       TKin         Tz        amp         pi  #>   1.000000   8.000000   0.100000   3.141593  #> ── Initial Conditions ($inits): ── #>   depot central    peri     eff  #>       0       0       0       1  #> ── First part of data (object): ── #> # A tibble: 100 × 17 #>    time    KA    CL    V2     Q    V3  Kout  EC50    C2   Kin    C3  depot #>     [h] <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1 0     0.294  18.6  40.2  10.5   297     1   200   0    1.1  0     10000  #> 2 0.485 0.294  18.6  40.2  10.5   297     1   200  27.8  1.10 0.257  8671. #> 3 0.970 0.294  18.6  40.2  10.5   297     1   200  43.7  1.10 0.874  7519. #> 4 1.45  0.294  18.6  40.2  10.5   297     1   200  51.8  1.09 1.68   6520. #> 5 1.94  0.294  18.6  40.2  10.5   297     1   200  54.8  1.09 2.56   5654. #> 6 2.42  0.294  18.6  40.2  10.5   297     1   200  54.6  1.08 3.45   4903. #> # ℹ 94 more rows #> # ℹ 5 more variables: central <dbl>, peri <dbl>, eff <dbl>, ctime [h], WT <dbl> plot(r1,C2, ylab=\"Central Concentration\", xlab=\"Time\") plot(r1,eff, ylab=\"Effect\", xlab=\"Time\")"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-data-frame.html","id":"creating-an-interactive-data-frame","dir":"Articles","previous_headings":"Using rxode2 data frames","what":"Creating an interactive data frame","title":"rxode2 Data Frames","text":"rxode2 supports returning solved object modified data-frame. done predict(), solve(), rxSolve() methods.","code":"library(rxode2) library(units)  ## Setup example model mod1 <- function() {   ini({     # central      KA <- 2.94E-01     CL <- 1.86E+01     # peripheral     V2 <- 4.02E+01      Q  <- 1.05E+01     V3 <- 2.97E+02     # effects     Kin  <- 1     Kout <- 1     EC50 <- 200   })   model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <-  KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                     Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) <- 1   }) }  ## Seup parameters and initial conditions   ## Setup dosing event information ev <- et(amountUnits=\"mg\", timeUnits = \"hours\") %>%   et(amt=10000, addl=9, ii=12) %>%   et(amt=20000, addl=4, time=120, ii=24) %>%   et(0:240)   ## Now solve x <- predict(mod1, ev)  x #> -- Solved rxode2 object -- #> -- Parameters (x$params): -- #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> -- Initial Conditions (x$inits): -- #> depot centr  peri   eff  #>     0     0     0     1  #> -- First part of data (object): -- #> # A tibble: 241 x 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # i 235 more rows"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-data-frame.html","id":"using-the-solved-object-as-a-simple-data-frame","dir":"Articles","previous_headings":"Using rxode2 data frames","what":"Using the solved object as a simple data frame","title":"rxode2 Data Frames","text":"solved object acts data.frame tbl can filtered dpylr. example filter easily.","code":"library(dplyr) ## You can  drop units for comparisons and filtering x <- mod1 %>% solve(ev) %>%   drop_units() %>% filter(time <= 3) %>% as_tibble()  ## or keep them and compare with the proper units. x <- mod1 %>% solve(ev) %>%     filter(time <= set_units(3, hr)) %>% as_tibble() x #> # A tibble: 4 x 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-data-frame.html","id":"updating-the-data-set-interactively","dir":"Articles","previous_headings":"","what":"Updating the data-set interactively","title":"rxode2 Data Frames","text":"However isn’t just simple data object. can use solved object update parameters fly, even change sampling time. First need recreate original solved system:","code":"x <- mod1 %>% solve(ev) print(x) #> -- Solved rxode2 object -- #> -- Parameters ($params): -- #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> -- Initial Conditions ($inits): -- #> depot centr  peri   eff  #>     0     0     0     1  #> -- First part of data (object): -- #> # A tibble: 241 x 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # i 235 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-data-frame.html","id":"modifying-observation-times-for-rxode2","dir":"Articles","previous_headings":"Updating the data-set interactively","what":"Modifying observation times for rxode2","title":"rxode2 Data Frames","text":"Notice initial effect now 2. can also change sampling times easily method changing t time. example:","code":"x$t <- seq(0,5,length.out=20) print(x) #> -- Solved rxode2 object -- #> -- Parameters ($params): -- #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> -- Initial Conditions ($inits): -- #> depot centr  peri   eff  #>     0     0     0     1  #> -- First part of data (object): -- #> # A tibble: 20 x 7 #>    time    C2     C3  depot centr  peri   eff #>     [h] <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 0       0   0      10000     0    0    1    #> 2 0.263  16.8 0.0817  9255.  677.  24.3  1.01 #> 3 0.526  29.5 0.299   8566. 1187.  88.7  1.03 #> 4 0.789  38.9 0.615   7929. 1562. 183.   1.06 #> 5 1.05   45.5 1.00    7338. 1830. 298.   1.09 #> 6 1.32   50.1 1.44    6792. 2013. 427.   1.12 #> # i 14 more rows plot(x)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-data-frame.html","id":"modifying-simulation-parameters","dir":"Articles","previous_headings":"Updating the data-set interactively","what":"Modifying simulation parameters","title":"rxode2 Data Frames","text":"can also access change parameters $ operator. example, accessing KA can done : may change assigning new value.  can access/change parameters, initialization(s) events $params, $inits, $events accessor syntax, similar used . syntax makes easy update explore effect various parameters solved object.","code":"x$KA #> [1] 0.294 x$KA <- 1 print(x) #> -- Solved rxode2 object -- #> -- Parameters ($params): -- #>    KA    CL    V2     Q    V3   Kin  Kout  EC50  #>   1.0  18.6  40.2  10.5 297.0   1.0   1.0 200.0  #> -- Initial Conditions ($inits): -- #> depot centr  peri   eff  #>     0     0     0     1  #> -- First part of data (object): -- #> # A tibble: 20 x 7 #>    time    C2    C3  depot centr   peri   eff #>     [h] <dbl> <dbl>  <dbl> <dbl>  <dbl> <dbl> #> 1 0       0   0     10000     0     0    1    #> 2 0.263  52.2 0.261  7686. 2098.   77.6  1.03 #> 3 0.526  83.3 0.900  5908. 3348.  267.   1.09 #> 4 0.789  99.8 1.75   4541. 4010.  519.   1.15 #> 5 1.05  106.  2.69   3490. 4273.  800.   1.21 #> 6 1.32  106.  3.66   2683. 4272. 1086.   1.26 #> # i 14 more rows plot(x)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"datasets-for-rxode2-nlmixr","dir":"Articles","previous_headings":"","what":"Datasets for rxode2 & nlmixr","title":"rxode2 Event Types","text":"Data input nlmixr type data input rxode2, similar data NONMEM (NONMEM-ready datasets can used directly nlmixr).","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"subject-identification-columns","dir":"Articles","previous_headings":"Columns Described by Type of Use","what":"Subject Identification Columns","title":"rxode2 Event Types","text":"subject identification column separates subjects identification random effects. ID: subject identifier may integer, character, factor.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"observation-columns","dir":"Articles","previous_headings":"Columns Described by Type of Use","what":"Observation Columns","title":"rxode2 Event Types","text":"Observation columns used indicate dependent variable use measure . DV: numeric column measurement CENS: numeric column indication censoring, limit quantification assay. LIMIT: numeric column helping indicate type censoring, limit quantification assay. MDV: indicator missing DV values CMT: name number compartment DVID: dependent variable identifier EVID event identifier","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"dosing-columns","dir":"Articles","previous_headings":"Columns Described by Type of Use","what":"Dosing Columns","title":"rxode2 Event Types","text":"AMT: amount dose CMT: name number compartment EVID: event identifier ADDL: number additional doses RATE DUR: rate duration dose","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"details-for-specific-dataset-columns","dir":"Articles","previous_headings":"","what":"Details for Specific Dataset Columns","title":"rxode2 Event Types","text":"details sorted alphabetically column name. grouping use, see documentation .","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"amt-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"AMT Column","title":"rxode2 Event Types","text":"AMT column defines amount dose. observation rows, 0 NA. dosing rows, amount dose administered CMT. dose zero-order rate (constant infusion), infusion may setup using RATE DUR column.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"censlimit-columns","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"CENS/LIMIT Columns","title":"rxode2 Event Types","text":"CENS column indicator column indicating censoring occurred. pharmacokinetic modeling, censoring typically sample limit quantification. Internally rxode2 saves values nlmixr can use likelihood calculations. CENS = 0 indicates value DV measured without censoring. CENS = 1 indicates value left censored (limit quantitation) value DV censoring/quantitation limit. CENS = -1 indicates value right censored (limit quantitation) value DV censoring/quantitation limit. LIMIT additional information censoring handled nlmixr stored rxode2’s data structure well. value left censored, like limit 1 may also believe value certain threshold, like zero. case, limit 0 indicates censored value 0 1. short : CENS = 0 LIMIT ignored observation censored CENS = 1 value censored (LIMIT, DV) CENS = -1 value censored (DV, LIMIT)","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"cmt-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"CMT Column","title":"rxode2 Event Types","text":"CMT column indicates compartment event occurs. given character string factor (preferred method), matched name model. given integer, matched order compartments appear model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"dur-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"DUR Column","title":"rxode2 Event Types","text":"DUR column defines duration infusion. used set duration zero-order rate infusion.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"dv-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"DV Column","title":"rxode2 Event Types","text":"DV column indicates current measurement current compartment (see CMT) current measurement identifier (see DVID) may missing (see MDV) censored (see CENS).","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"dvid-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"DVID Column","title":"rxode2 Event Types","text":"TODO","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"evid-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"EVID Column","title":"rxode2 Event Types","text":"EVID column event identifier row data. observation records, 0. normal dosing records, 1. Many EVID values detailed rxode2 Event Types Classic rxode2 Events vignettes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"id-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"ID Column","title":"rxode2 Event Types","text":"ID column subject identifier. column used separate one individual (usually single person animal) another. model, ID column used separate individuals. numerical integrator re-initializes new individual, new values random effects selected.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-datasets.html","id":"rate-column","dir":"Articles","previous_headings":"Details for Specific Dataset Columns","what":"RATE Column","title":"rxode2 Event Types","text":"TODO","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"creating-rxode2s-event-tables","dir":"Articles","previous_headings":"","what":"Creating rxode2’s event tables","title":"Easy rxode2 Event Tables","text":"event table rxode2 specialized data frame acts container rxode2’s events observation times. create rxode2 event table may use code eventTable(), et(), even create data frame right event information contained . closely related types events rxode2 supports. event table can add sampling/observations doses piping direct access. short table two main functions create dosing Sampling times can added add.sampling( sampling times ) et( sampling times ). Dosing intervals sampling windows also supported. documentation using et() syntax, though supported. models, can illustrate using model shared rxode2 tutorial:","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` library(units) #> udunits database from /usr/share/xml/udunits/udunits2.xml (ev <- et()) #> -- EventTable with 0 records -- #> 0 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) (ev <- et()) #> -- EventTable with 0 records -- #> 0 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) ## Model from rxode2 tutorial m1 <-function() {   ini({     KA   <- 2.94E-01     CL   <- 1.86E+01     V2   <- 4.02E+01     Q    <- 1.05E+01     V3   <- 2.97E+02     Kin  <- 1     Kout <- 1     EC50 <- 200     ## Added modeled bioavaiblity, duration and rate     fdepot <- 1     durDepot <- 8     rateDepot <- 1250   })   model({     C2          <- centr/V2     C3          <- peri/V3     d/dt(depot) <- -KA*depot     f(depot)    <- fdepot     dur(depot)  <- durDepot     rate(depot) <- rateDepot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff;     eff(0)      <- 1   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"adding-doses-to-the-event-table","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Adding doses to the event table","title":"Easy rxode2 Event Tables","text":"created can add dosing event table add.dosing(), et() functions. Using add.dosing() function : Notice units specified table. specified, units use units package keep track units convert needed. Additionally, ggforce uses label ggplot axes. set_units drop_units useful set drop rxode2 event table units. example, can see time axes labeled:  familiar NONMEM/rxode2 event records, can also specify dosing using et dose elements directly: gives:  shows easy creating event tables can .","code":"ev <- eventTable(amount.units=\"mg\", time.units=\"hr\")  ## The methods ar attached to the event table, so you can use  ## them directly ev$add.dosing(dose=10000, nbr.doses = 3)# loading doses ## Starts at time 0; Default dosing interval is 24  ## You can also pipe the event tables to these methods. ev <- ev %>%   add.dosing(dose=5000, nbr.doses=14,              dosing.interval=12)# maintenance  ev #> -- EventTable with 2 records -- #> 2 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 2 x 5 #>   time   amt  ii  addl evid         #>    [h]  [mg] [h] <int> <evid>       #> 1    0 10000  24     2 1:Dose (Add) #> 2    0  5000  12    13 1:Dose (Add) rxSolve(m1, ev) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ ev <- et(timeUnits=\"hr\") %>%   et(amt=10000, until = set_units(3, days),      ii=12) # loading doses  ev #> -- EventTable with 1 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 1 x 5 #>   time   amt  ii  addl evid         #>    [h] <dbl> [h] <int> <evid>       #> 1    0 10000  12     6 1:Dose (Add) rxSolve(m1, ev) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"adding-sampling-to-an-event-table","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Adding sampling to an event table","title":"Easy rxode2 Event Tables","text":"notice examples, rxode2 generated default sampling times since sampling times. wish control sampling time, add samples rxode2 event table add.sampling et gives:  use et can simply add similar way add.sampling: gives following rxode2 solve:  Note jagged nature plots since sample times.","code":"ev <- eventTable(amount.units=\"mg\", time.units=\"hr\")  ## The methods ar attached to the event table, so you can use them ## directly ev$add.dosing(dose=10000, nbr.doses = 3)# loading doses  ev$add.sampling(seq(0,24,by=4))  ev #> -- EventTable with 8 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 7 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 8 x 5 #>   time   amt  ii  addl evid          #>    [h]  [mg] [h] <int> <evid>        #> 1    0    NA  NA    NA 0:Observation #> 2    0 10000  24     2 1:Dose (Add)  #> 3    4    NA  NA    NA 0:Observation #> 4    8    NA  NA    NA 0:Observation #> 5   12    NA  NA    NA 0:Observation #> 6   16    NA  NA    NA 0:Observation #> 7   20    NA  NA    NA 0:Observation #> 8   24    NA  NA    NA 0:Observation solve(m1, ev) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%   et(amt=10000, until = set_units(3, days),      ii=12) %>% # loading doses   et(seq(0,24,by=4))  ev #> -- EventTable with 8 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 7 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 8 x 5 #>   time   amt  ii  addl evid          #>    [h] <dbl> [h] <int> <evid>        #> 1    0    NA  NA    NA 0:Observation #> 2    0 10000  12     6 1:Dose (Add)  #> 3    4    NA  NA    NA 0:Observation #> 4    8    NA  NA    NA 0:Observation #> 5   12    NA  NA    NA 0:Observation #> 6   16    NA  NA    NA 0:Observation #> 7   20    NA  NA    NA 0:Observation #> 8   24    NA  NA    NA 0:Observation solve(m1, ev) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"expand-the-event-table-to-a-multi-subject-event-table-","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Expand the event table to a multi-subject event table.","title":"Easy rxode2 Event Tables","text":"thing needed expand event table list IDs want expand; can see following simulation 4 individuals solved :","code":"ev <- et(timeUnits=\"hr\") %>%   et(amt=10000, until = set_units(3, days),      ii=12) %>% # loading doses   et(seq(0,48,length.out=200)) %>%   et(id=1:4)  ev #> -- EventTable with 804 records -- #> 4 dosing records (see x$get.dosing(); add with add.dosing or et) #> 800 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 804 x 6 #>       id  time   amt  ii  addl evid          #>    <int>   [h] <dbl> [h] <int> <evid>        #>  1     1 0        NA  NA    NA 0:Observation #>  2     1 0     10000  12     6 1:Dose (Add)  #>  3     1 0.241    NA  NA    NA 0:Observation #>  4     1 0.482    NA  NA    NA 0:Observation #>  5     1 0.724    NA  NA    NA 0:Observation #>  6     1 0.965    NA  NA    NA 0:Observation #>  7     1 1.21     NA  NA    NA 0:Observation #>  8     1 1.45     NA  NA    NA 0:Observation #>  9     1 1.69     NA  NA    NA 0:Observation #> 10     1 1.93     NA  NA    NA 0:Observation #> # i 794 more rows set.seed(42) rxSetSeed(42) solve(m1, ev,       params=data.frame(KA=0.294*exp(rnorm(4)),                         CL=18.6*exp(rnorm(4)))) %>%     plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"add-doses-and-samples-within-a-sampling-window","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Add doses and samples within a sampling window","title":"Easy rxode2 Event Tables","text":"addition adding fixed doses fixed sampling times, can windows sample draw doses . dosing windows specify time ordered numerical vector lowest dosing time highest dosing time inside list. example, start dosing time 6 hour dosing window: can clearly see different dosing times following simulation:  course reality dosing interval may 2 hours:  sort thing can specified sampling times. specify sampling times terms sampling window, can create list sampling times. sampling time two element ordered numeric vector.  shows flexibility dosing sampling rxode2 event tables allow.","code":"set.seed(42) rxSetSeed(42) ev <- et(timeUnits=\"hr\") %>%   et(time=list(c(0,6)), amt=10000, until = set_units(2, days),      ii=12) %>% # loading doses   et(id=1:4)  ev #> -- EventTable with 16 records -- #> 0 dosing records (see x$get.dosing(); add with add.dosing or et) #> 16 observation times (see x$get.sampling(); add with add.sampling or et) #> -- First part of x: -- #> # A tibble: 16 x 6 #>       id low   time high   amt evid         #>    <int> [h]    [h]  [h] <dbl> <evid>       #>  1     1   0  5.49     6 10000 1:Dose (Add) #>  2     1  12 17.0     18 10000 1:Dose (Add) #>  3     1  24 25.7     30 10000 1:Dose (Add) #>  4     1  36 41.6     42 10000 1:Dose (Add) #>  5     2   0  4.31     6 10000 1:Dose (Add) #>  6     2  12 14.7     18 10000 1:Dose (Add) #>  7     2  24 28.2     30 10000 1:Dose (Add) #>  8     2  36 39.9     42 10000 1:Dose (Add) #>  9     3   0  0.808    6 10000 1:Dose (Add) #> 10     3  12 16.4     18 10000 1:Dose (Add) #> 11     3  24 27.1     30 10000 1:Dose (Add) #> 12     3  36 39.9     42 10000 1:Dose (Add) #> 13     4   0  4.98     6 10000 1:Dose (Add) #> 14     4  12 13.7     18 10000 1:Dose (Add) #> 15     4  24 29.6     30 10000 1:Dose (Add) #> 16     4  36 41.5     42 10000 1:Dose (Add) ev <- ev %>% et(seq(0,48,length.out=200))  solve(m1, ev,       params=data.frame(KA=0.294*exp(rnorm(4)),                         CL=18.6*exp(rnorm(4)))) %>%   plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments set.seed(42) rxSetSeed(42) ev <- et(timeUnits=\"hr\") %>%   et(time=list(c(0,2)), amt=10000, until = set_units(2, days),      ii=12) %>% # loading doses   et(id=1:4) %>%   et(seq(0,48,length.out=200))  solve(m1, ev,       params=data.frame(KA=0.294*exp(rnorm(4)),                         CL=18.6*exp(rnorm(4)))) %>%   plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments rxSetSeed(42) set.seed(42) ev <- et(timeUnits=\"hr\") %>%   et(time=list(c(0,2)), amt=10000, until = set_units(2, days),      ii=12) %>% # loading doses   et(id=1:4)  ## Create 20 samples in the first 24 hours and 20 samples in the ## second 24 hours samples <- c(lapply(1:20, function(...){c(0,24)}),              lapply(1:20, function(...){c(20,48)}))  ## Add the random collection to the event table ev <- ev %>% et(samples)  library(ggplot2) solve(m1, ev, params=data.frame(KA=0.294*exp(rnorm(4)),                                 CL=18.6*exp(rnorm(4)))) %>%   plot(C2) + geom_point() #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"combining-event-tables","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Combining event tables","title":"Easy rxode2 Event Tables","text":"Since can create dosing records sampling records, can create complex dosing regimen wish. addition, rxode2 allows combine event tables c, seq, rep, rbind.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"sequencing-event-tables","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Sequencing event tables","title":"Easy rxode2 Event Tables","text":"One way combine event table sequence c, seq etSeq. takes two dosing groups adds least one inter-dose interval :  sequencing events, can also separate sequence period time; example wanted separate week, easily following sequence event tables:  Note example time bid qd event tables exactly one week, 1 week plus 24 hours inter-dose interval. want behavior, can sequence using wait=\"+ii\".  Also note, rxode2 assumes dosing want space event tables , clears sampling records combine event tables. true, can also use option samples=\"use\"","code":"## bid for 5 days bid <- et(timeUnits=\"hr\") %>%        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") %>%       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days et <- seq(bid,qd) %>% et(seq(0,11*24,length.out=100));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ## bid for 5 days followed by qd for 5 days et <- seq(bid,set_units(1, \"week\"), qd) %>%     et(seq(0,18*24,length.out=100));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ## bid for 5 days followed by qd for 5 days et <- seq(bid,set_units(1, \"week\"), qd,wait=\"+ii\") %>%     et(seq(0,18*24,length.out=100));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"repeating-event-tables","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Repeating event tables","title":"Easy rxode2 Event Tables","text":"can event table can repeat etRep rep. example 4 rounds 2 weeks QD therapy 1 week therapy can simply specified:  simplified way use sequence event tables. Therefore, many options still apply; samples cleared unless use samples=\"use\", time event tables least inter-dose interval. can adjust timing wait option.","code":"qd <-et(timeUnits = \"hr\") %>%   et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- rep(qd, times=4, wait=set_units(1,\"weeks\")) %>%       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  rxSolve(m1, et)  %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"combining-event-tables-with-rbind","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Combining event tables with rbind","title":"Easy rxode2 Event Tables","text":"may combine event tables rbind. consider event times combining event tables, keeps times. space event tables waiting period, also consider inter-dose interval. Using previous seq can clearly see difference. sequence:  bind together rbind  Still waiting period applies (consider inter-dose interval)  can also bind tables together make ID event table unique; can good combine cohorts different expected dosing sampling times. requires id=\"unique\" option; Using first example shows different case:","code":"## bid for 5 days bid <- et(timeUnits=\"hr\") %>%        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") %>%       et(amt=20000,ii=24,until=set_units(5, \"days\"))  et <- seq(bid,qd) %>%     et(seq(0,18*24,length.out=500));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ## bid for 5 days et <- rbind(bid,qd) %>%     et(seq(0,18*24,length.out=500));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments et <- rbind(bid,wait=set_units(10,days),qd) %>%     et(seq(0,18*24,length.out=500));  rxSolve(m1, et) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ## bid for 5 days et <- etRbind(bid,qd, id=\"unique\") %>%     et(seq(0,150,length.out=500));  library(ggplot2) rxSolve(m1, et) %>% plot(C2) + facet_wrap( ~ id) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-table.html","id":"event-tables-in-rstudio-notebooks","dir":"Articles","previous_headings":"Creating rxode2’s event tables","what":"Event tables in Rstudio Notebooks","title":"Easy rxode2 Event Tables","text":"addition output console shown examples, Rstudio notebook output different can seen following screenshots; first screenshot shows event table looks evaluating Rstduio notebook  simple dataframe allows page contents. click first box Rstudio notebook output, notes event table: ## Expanding events Event tables can expanded contain addl data item, like following example: can expand events addl items $expand() etExpand(ev): first, etExpand(ev) expands event table without modifying original data frame: can see addl events expanded, however original data frame remained intact: use ev$expand() modify ev object. similar object-oriented method:","code":"ev <- et() %>%   et(dose=50, ii=8, until=48)  ev #> -- EventTable with 1 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 1 x 5 #>    time   amt    ii  addl evid         #>   <dbl> <dbl> <dbl> <int> <evid>       #> 1     0    50     8     6 1:Dose (Add) etExpand(ev) #> -- EventTable with 7 records -- #> 7 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) #> -- First part of x: -- #> # A tibble: 7 x 4 #>    time   amt    ii evid         #>   <dbl> <dbl> <dbl> <evid>       #> 1     0    50     0 1:Dose (Add) #> 2     8    50     0 1:Dose (Add) #> 3    16    50     0 1:Dose (Add) #> 4    24    50     0 1:Dose (Add) #> 5    32    50     0 1:Dose (Add) #> 6    40    50     0 1:Dose (Add) #> 7    48    50     0 1:Dose (Add) print(ev) #> -- EventTable with 1 records -- #> 1 dosing records (see $get.dosing(); add with add.dosing or et) #> 0 observation times (see $get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with $expand(); or etExpand() #> -- First part of : -- #> # A tibble: 1 x 5 #>    time   amt    ii  addl evid         #>   <dbl> <dbl> <dbl> <int> <evid>       #> 1     0    50     8     6 1:Dose (Add) ev$expand() ev #> -- EventTable with 7 records -- #> 7 dosing records (see x$get.dosing(); add with add.dosing or et) #> 0 observation times (see x$get.sampling(); add with add.sampling or et) #> -- First part of x: -- #> # A tibble: 7 x 4 #>    time   amt    ii evid         #>   <dbl> <dbl> <dbl> <evid>       #> 1     0    50     0 1:Dose (Add) #> 2     8    50     0 1:Dose (Add) #> 3    16    50     0 1:Dose (Add) #> 4    24    50     0 1:Dose (Add) #> 5    32    50     0 1:Dose (Add) #> 6    40    50     0 1:Dose (Add) #> 7    48    50     0 1:Dose (Add)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"rxode2-event-tables","dir":"Articles","previous_headings":"","what":"rxode2 event tables","title":"rxode2 Event Types","text":"general, rxode2 event tables follow NONMEM dataset convention exceptions: may turn compartment negative compartment number “-cmt” cmt compartment name. compartment data item (cmt) can still number, number compartment defined appearance compartment name model. can tedious count, can specify compartment numbers easier using cmt(cmtName) beginning model. Bioavailability changes change rate infusion since dur/amt fixed input data. Similarly, specifying rate/amt infusion, bioavailability change infusion duration since rate/amt fixed input data. infrequent NONMEM columns supported: pcmt, call. evid=5 replace event; replaces value compartment value specified amt column. equivalent deSolve=replace. evid=6 multiply event; multiplies value compartment value specified amt column. equivalent deSolve=multiply. evid=7 transit compartment model/phantom event. puts dose dose() function calculates time since last dose tad() doesn’t actually put dose compartment. allows transit() function easily apply compartment. legal entries data table: notes: evid can classic RxODE (described ) NONMEM-style evid described . NONMEM’s DV required; rxode2 ODE solving framework. NONMEM’s MDV required, since captured EVID. Instead NONMEM-compatible data, can accept deSolve compatible data-frames. returning rxode2 solved data-set additional event ids (EVID) may see depending solving options: EVID = -1 modeled rate ends (corresponds rate = -1) EVID = -2 modeled duration ends (corresponds rate=-2) EVID = -10 rate specified zero-order infusion ends (corresponds rate > 0) EVID = -20 duration specified zero-order infusion ends (corresponds dur > 0) EVID = 101, 102, 103,... correspond 1, 2, 3, … modeled time (mtime). can accessed solving option combination addDosing=TRUE subsetNonmem=FALSE. want see classic EVID equivalents can use addDosing=NA. illustrate event types use model original rxode2 tutorial.","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` ## Model from rxode2 tutorial  m1 <- function() {   ini({     KA   <- 2.94E-01     CL   <- 1.86E+01     V2   <- 4.02E+01     Q    <- 1.05E+01     V3   <- 2.97E+02     Kin  <- 1     Kout <- 1     EC50 <- 200     ## Added modeled bioavaiblity, duration and rate     fdepot <- 1     durDepot <- 8     rateDepot <- 1250   })   model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     f(depot) <- fdepot     dur(depot) <- durDepot     rate(depot) <- rateDepot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)  <- Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) <- 1   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"bolusadditive-doses","dir":"Articles","previous_headings":"","what":"Bolus/Additive Doses","title":"rxode2 Event Types","text":"bolus dose default type dose rxode2 requires amt/dose. Note uses convenience function et() described rxode2 event tables","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 101 x 5 #>     time   amt  ii  addl evid          #>      [h] <dbl> [h] <int> <evid>        #>  1 0        NA  NA    NA 0:Observation #>  2 0     10000  12     2 1:Dose (Add)  #>  3 0.242    NA  NA    NA 0:Observation #>  4 0.485    NA  NA    NA 0:Observation #>  5 0.727    NA  NA    NA 0:Observation #>  6 0.970    NA  NA    NA 0:Observation #>  7 1.21     NA  NA    NA 0:Observation #>  8 1.45     NA  NA    NA 0:Observation #>  9 1.70     NA  NA    NA 0:Observation #> 10 1.94     NA  NA    NA 0:Observation #> # i 91 more rows rxSolve(m1, ev) %>% plot(C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"infusion-doses","dir":"Articles","previous_headings":"","what":"Infusion Doses","title":"rxode2 Event Types","text":"different type infusions rxode2 supports: Constant Rate Infusion (rate) Constant Duration Infusion (dur) Estimated Rate Infusion Estimated Duration Infusion","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"constant-infusion-in-terms-of-duration-and-rate","dir":"Articles","previous_headings":"Infusion Doses","what":"Constant Infusion (in terms of duration and rate)","title":"rxode2 Event Types","text":"next type event infusion; two ways specify infusion; first dur keyword. example :  can also specified rate component:  exception bioavailability changes infusion. case modeling rate, bioavailability decrease, decreases infusion duration, NONMEM. example:  Similarly increasing bioavailability increases infusion duration.  rationale behavior rate amt specified event table, thing can change bioavailability increase duration infusion. specify amt dur components event table, bioavailability changes affect rate infusion. can see side--side comparison bioavailability changes affecting rate instead duration records following plots:","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24, dur=8) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 101 x 6 #>     time   amt  ii  addl evid          dur #>      [h] <dbl> [h] <int> <evid>        [h] #>  1 0        NA  NA    NA 0:Observation  NA #>  2 0     10000  12     2 1:Dose (Add)    8 #>  3 0.242    NA  NA    NA 0:Observation  NA #>  4 0.485    NA  NA    NA 0:Observation  NA #>  5 0.727    NA  NA    NA 0:Observation  NA #>  6 0.970    NA  NA    NA 0:Observation  NA #>  7 1.21     NA  NA    NA 0:Observation  NA #>  8 1.45     NA  NA    NA 0:Observation  NA #>  9 1.70     NA  NA    NA 0:Observation  NA #> 10 1.94     NA  NA    NA 0:Observation  NA #> # i 91 more rows rxSolve(m1, ev) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24, rate=10000/8) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 101 x 6 #>     time   amt rate        ii  addl evid          #>      [h] <dbl> <rate/dur> [h] <int> <evid>        #>  1 0        NA NA          NA    NA 0:Observation #>  2 0     10000  1250       12     2 1:Dose (Add)  #>  3 0.242    NA NA          NA    NA 0:Observation #>  4 0.485    NA NA          NA    NA 0:Observation #>  5 0.727    NA NA          NA    NA 0:Observation #>  6 0.970    NA NA          NA    NA 0:Observation #>  7 1.21     NA NA          NA    NA 0:Observation #>  8 1.45     NA NA          NA    NA 0:Observation #>  9 1.70     NA NA          NA    NA 0:Observation #> 10 1.94     NA NA          NA    NA 0:Observation #> # i 91 more rows rxSolve(m1, ev) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments rxSolve(m1, ev, c(fdepot=0.25)) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments rxSolve(m1, ev, c(fdepot=1.25)) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24, dur=8) %>%     et(seq(0, 24, length.out=100)) library(ggplot2) library(patchwork)  p1 <- rxSolve(m1, ev, c(fdepot=1.25)) %>% plot(depot) +     xlab(\"Time\") + ylim(0,5000) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments p2 <- rxSolve(m1, ev, c(fdepot=0.25)) %>% plot(depot) +     xlab(\"Time\")+ ylim(0,5000) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ## Use patchwork syntax to combine plots p1 * p2"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"modeled-rate-and-duration-of-infusion","dir":"Articles","previous_headings":"Infusion Doses","what":"Modeled Rate and Duration of Infusion","title":"rxode2 Event Types","text":"can model duration, equivalent NONMEM’s rate=-2.  Similarly, may also model rate. equivalent NONMEM’s rate=-1 rxode2’s event table specifies data item well.","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24, rate=-2) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 101 x 6 #>     time   amt rate        ii  addl evid          #>      [h] <dbl> <rate/dur> [h] <int> <evid>        #>  1 0        NA NA          NA    NA 0:Observation #>  2 0     10000 -2:dur      12     2 1:Dose (Add)  #>  3 0.242    NA NA          NA    NA 0:Observation #>  4 0.485    NA NA          NA    NA 0:Observation #>  5 0.727    NA NA          NA    NA 0:Observation #>  6 0.970    NA NA          NA    NA 0:Observation #>  7 1.21     NA NA          NA    NA 0:Observation #>  8 1.45     NA NA          NA    NA 0:Observation #>  9 1.70     NA NA          NA    NA 0:Observation #> 10 1.94     NA NA          NA    NA 0:Observation #> # i 91 more rows rxSolve(m1, ev, c(durDepot=7)) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12,until=24, rate=-1) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 101 x 6 #>     time   amt rate        ii  addl evid          #>      [h] <dbl> <rate/dur> [h] <int> <evid>        #>  1 0        NA NA          NA    NA 0:Observation #>  2 0     10000 -1:rate     12     2 1:Dose (Add)  #>  3 0.242    NA NA          NA    NA 0:Observation #>  4 0.485    NA NA          NA    NA 0:Observation #>  5 0.727    NA NA          NA    NA 0:Observation #>  6 0.970    NA NA          NA    NA 0:Observation #>  7 1.21     NA NA          NA    NA 0:Observation #>  8 1.45     NA NA          NA    NA 0:Observation #>  9 1.70     NA NA          NA    NA 0:Observation #> 10 1.94     NA NA          NA    NA 0:Observation #> # i 91 more rows rxSolve(m1, ev, c(rateDepot=10000/3)) %>% plot(depot, C2) +     xlab(\"Time\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"steady-state","dir":"Articles","previous_headings":"","what":"Steady State","title":"rxode2 Event Types","text":"doses solved steady state reached constant inter-dose interval.","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, ss=1) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 101 records -- #> 1 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> -- First part of x: -- #> # A tibble: 101 x 5 #>     time   amt  ii evid             ss #>      [h] <dbl> [h] <evid>        <int> #>  1 0        NA  NA 0:Observation    NA #>  2 0     10000  12 1:Dose (Add)      1 #>  3 0.242    NA  NA 0:Observation    NA #>  4 0.485    NA  NA 0:Observation    NA #>  5 0.727    NA  NA 0:Observation    NA #>  6 0.970    NA  NA 0:Observation    NA #>  7 1.21     NA  NA 0:Observation    NA #>  8 1.45     NA  NA 0:Observation    NA #>  9 1.70     NA  NA 0:Observation    NA #> 10 1.94     NA  NA 0:Observation    NA #> # i 91 more rows rxSolve(m1, ev) %>% plot(C2) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"steady-state-for-complex-dosing","dir":"Articles","previous_headings":"Steady State","what":"Steady state for complex dosing","title":"rxode2 Event Types","text":"using ss=2 flag, can use super-positioning principle linear kinetics get steady state nonstandard dosing (.e. morning 100 mg vs evening 150 mg). done : Saving state values Resetting states solving system steady state Adding back prior state values  can see takes full dose cycle reach true complex steady state dosing.","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=24, ss=1) %>%     et(time=12, amt=15000, ii=24, ss=2) %>%     et(time=24, amt=10000, ii=24, addl=3) %>%     et(time=36, amt=15000, ii=24, addl=3) %>%     et(seq(0, 64, length.out=500))  library(ggplot2)  rxSolve(m1, ev,maxsteps=10000) %>% plot(C2) +   annotate(\"rect\", xmin=0, xmax=24, ymin=-Inf, ymax=Inf,            alpha=0.2) +   annotate(\"text\", x=12.5, y=7,            label=\"Initial Steady State Period\") +   annotate(\"text\", x=44,   y=7,            label=\"Steady State AM/PM dosing\") #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"steady-state-for-constant-infusion-or-zero-order-processes","dir":"Articles","previous_headings":"Steady State","what":"Steady state for constant infusion or zero order processes","title":"rxode2 Event Types","text":"last type steady state rxode2 supports steady-state constant infusion rate. can specified way NONMEM, : inter-dose interval ii=0 steady state dose, ie ss=1 Either positive rate (rate>0) estimated rate rate=-1. zero dose, ie amt=0 steady-state constant infusion achieved, infusion turned using record, just like NONMEM. Note rate=-2 model duration infusion doesn’t make much sense since solving infusion steady state. duration specified steady state solution. Also note bioavailability changes steady state infusion also make sense neither change rate duration steady state infusion. Hence modeled bioavailability type dosing event ignored. example:  can used PK, can used steady-state disease processes.","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=0, ss=1,rate=10000/8)  p1 <- rxSolve(m1, ev) %>% plot(C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=200000, rate=10000/8) %>%     et(0, 250, length.out=1000)  p2 <- rxSolve(m1, ev) %>% plot(C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments library(patchwork)  p1 / p2"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"reset-events","dir":"Articles","previous_headings":"","what":"Reset Events","title":"rxode2 Event Types","text":"Reset events implemented evid=3 evid=reset, reset evid=4 reset dose. solving show happens system system reset 6 hours post-dose.  can see compartments reset initial values. next dose start dosing cycle . case, whole system reset dose given","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, addl=3) %>%     et(time=6, evid=reset) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 102 records -- #> 2 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 102 x 5 #>     time   amt  ii  addl evid          #>      [h] <dbl> [h] <int> <evid>        #>  1 0        NA  NA    NA 0:Observation #>  2 0     10000  12     3 1:Dose (Add)  #>  3 0.242    NA  NA    NA 0:Observation #>  4 0.485    NA  NA    NA 0:Observation #>  5 0.727    NA  NA    NA 0:Observation #>  6 0.970    NA  NA    NA 0:Observation #>  7 1.21     NA  NA    NA 0:Observation #>  8 1.45     NA  NA    NA 0:Observation #>  9 1.70     NA  NA    NA 0:Observation #> 10 1.94     NA  NA    NA 0:Observation #> # i 92 more rows rxSolve(m1, ev) %>% plot(depot,C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, addl=3) %>%     et(time=6, amt=10000, evid=4) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 102 records -- #> 2 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 102 x 5 #>     time   amt  ii  addl evid          #>      [h] <dbl> [h] <int> <evid>        #>  1 0        NA  NA    NA 0:Observation #>  2 0     10000  12     3 1:Dose (Add)  #>  3 0.242    NA  NA    NA 0:Observation #>  4 0.485    NA  NA    NA 0:Observation #>  5 0.727    NA  NA    NA 0:Observation #>  6 0.970    NA  NA    NA 0:Observation #>  7 1.21     NA  NA    NA 0:Observation #>  8 1.45     NA  NA    NA 0:Observation #>  9 1.70     NA  NA    NA 0:Observation #> 10 1.94     NA  NA    NA 0:Observation #> # i 92 more rows rxSolve(m1, ev) %>% plot(depot,C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-event-types.html","id":"turning-off-compartments","dir":"Articles","previous_headings":"","what":"Turning off compartments","title":"rxode2 Event Types","text":"may also turn compartment, similar reset event. Solving shows system:  case, depot turned , depot compartment concentrations set initial values compartment concentrations/levels reset. another dose depot administered depot compartment turned back . Note dose compartment turns back compartment dosed. Hence turn effect compartment, continues another dose depot.  turn back compartment, zero-dose compartment evid=2 compartment needed.","code":"ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, addl=3) %>%     et(time=6, cmt=\"-depot\", evid=2) %>%     et(seq(0, 24, length.out=100))  ev #> -- EventTable with 102 records -- #> 2 dosing records (see x$get.dosing(); add with add.dosing or et) #> 100 observation times (see x$get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with x$expand(); or etExpand(x) #> -- First part of x: -- #> # A tibble: 102 x 6 #>     time cmt         amt  ii  addl evid          #>      [h] <chr>     <dbl> [h] <int> <evid>        #>  1 0     (obs)        NA  NA    NA 0:Observation #>  2 0     (default) 10000  12     3 1:Dose (Add)  #>  3 0.242 (obs)        NA  NA    NA 0:Observation #>  4 0.485 (obs)        NA  NA    NA 0:Observation #>  5 0.727 (obs)        NA  NA    NA 0:Observation #>  6 0.970 (obs)        NA  NA    NA 0:Observation #>  7 1.21  (obs)        NA  NA    NA 0:Observation #>  8 1.45  (obs)        NA  NA    NA 0:Observation #>  9 1.70  (obs)        NA  NA    NA 0:Observation #> 10 1.94  (obs)        NA  NA    NA 0:Observation #> # i 92 more rows rxSolve(m1, ev) %>% plot(depot,C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, addl=3) %>%     et(time=6, cmt=\"-eff\", evid=2) %>%     et(seq(0, 24, length.out=100))  rxSolve(m1, ev) %>% plot(depot,C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments ev <- et(timeUnits=\"hr\") %>%     et(amt=10000, ii=12, addl=3) %>%     et(time=6, cmt=\"-eff\", evid=2) %>%     et(time=12,cmt=\"eff\",evid=2) %>%     et(seq(0, 24, length.out=100))  rxSolve(m1, ev) %>% plot(depot,C2, eff) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"classic-rxode-evid-values","dir":"Articles","previous_headings":"","what":"Classic RxODE evid values","title":"Classic rxode2 Events","text":"Originally RxODE supported compound event IDs; rxode2 still supports parameters, often useful use normal NONMEM dataset standard used many modeling tools like NONMEM, Monolix nlmixr, described rxode2 types article. Classically, RxODE supported event coding single event id evid described following table. classic EVID concatenate numbers table, infusion compartment 1 10101 infusion compartment 199 119901. EVID = 0 (observations), EVID=2 (type event) EVID=3 supported. Internally EVID=9 non-observation event makes sure system initialized zero; EVID=9 manually set. EVID 10-99 represents modeled time interventions, similar NONMEM’s MTIME. along amount (amt) time columns specify events ODE system. infusions specified EVIDs > 100 amt column represents rate value. Infusion flags 1 2 +amt turn infusion specific compartment -amt turn infusion specific compartment. specify dose/duration place dosing records time duration starts stops. modeled rate/duration infusion flags infusion flag must followed infusion record. number concatenated together form full RxODE event ID, shown following examples:","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"bolus-dose-examples","dir":"Articles","previous_headings":"Classic RxODE evid values","what":"Bolus Dose Examples","title":"Classic rxode2 Events","text":"100 bolus dose compartment #1 time 0 100 bolus dose compartment #99 time 0 100 bolus dose compartment #199 time 0","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"infusion-event-examples","dir":"Articles","previous_headings":"Classic RxODE evid values","what":"Infusion Event Examples","title":"Classic rxode2 Events","text":"Bolus infusion rate 50 compartment 1 1.5 hr, (modeled bioavailability changes duration infusion) Bolus infusion rate 50 compartment 1 1.5 hr (modeled bioavailability changes rate infusion) Modeled rate amount 50 Modeled duration amount 50","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"steady-state-for-classic-rxode-evid-example","dir":"Articles","previous_headings":"Classic RxODE evid values","what":"Steady State for classic RxODE EVID example","title":"Classic rxode2 Events","text":"Steady state dose cmt 1 Steady State super-positioning principle 50 pm 100 dose","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"steady-state-with-lagged-dose-for-classic-rxode-evid","dir":"Articles","previous_headings":"Classic RxODE evid values","what":"Steady state with lagged dose for classic RxODE evid","title":"Classic rxode2 Events","text":"Steady state lagged dose bolus dose: time | evid | amt | ii | 0 | 109 | 100 | 24 | 0 | 101 | 100 | 0 | event 109 calculates trough amount steady state passed (ii-lag_time) event 101 applies next steady state dose. Steady state (=2) lagged bolus dose Steady state infusion lag time time | evid | amt | ii | 0 | 10109 | 5 | 24 | 0 | 10108 | -5 | 24 | 0 | 10101 | 5 | | 20 | 10101 | -5 | | case bolus, 10109 event calculates trough concentration ii=24, may (may ) still infusion running. infusion running 10108 event turn infusion appropriate time. infusion completed, 10108 event ignored. next 2 events 10101 represent event times (assuming bioavailability applied).","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-events-classic.html","id":"turning-off-a-compartment-with-classic-rxode-evid","dir":"Articles","previous_headings":"Classic RxODE evid values","what":"Turning off a compartment with classic RxODE EVID","title":"Classic rxode2 Events","text":"Turn first compartment time 12 Event coding rxode2 encoded single event number evid. compartments 100, coded : event 0 observation events. 100*(Compartment Number) + 1 dose captured amt 10000 + 100*(Compartment Number) + 1 infusion rate captured amt column infusion turned subtracting amt evid stop infusion. compartments greater equal 100, 100s place digits transferred 100,000th place digit. doses 99th compartment evid bolus dose 9901 evid infusion 19901. bolus dose 199th compartment evid bolus dose 109901. infusion dosing record 199th compartment 119901.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to rxode2","text":"rxode2 R package facilitates simulation ODE models R. designed pharmacometrics models mind, can applied generally ODE model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-intro.html","id":"description-of-rxode2-illustrated-through-an-example","dir":"Articles","previous_headings":"","what":"Description of rxode2 illustrated through an example","title":"Introduction to rxode2","text":"model equations can specified text string, model file R expression. differential algebraic equations permitted. Differential equations specified d/dt(var_name) =. equation can separated semicolon. load rxode2 package compile model: Model parameters may specified ini({}) model block, initial conditions can specified within model cmt(0)= X, like model eff(0) <- 1. may also specify subject variability initial conditions residual error components just like nlmixr2. allows single interface nlmixr2/rxode2 models. Also note, classic rxode2 interface still works just like past (don’t worry breaking code time). fact, can get classic rxode2 model $simulationModel ui object:","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`  mod1 <- function() {   ini({     # central      KA=2.94E-01     CL=1.86E+01     V2=4.02E+01     # peripheral     Q=1.05E+01     V3=2.97E+02     # effects     Kin=1     Kout=1     EC50=200    })   model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <- Q*C2 - Q*C3     eff(0) <- 1     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff   }) } mod1 <- mod1() # create the ui object (can also use `rxode2(mod1)`) mod1  summary(mod1$simulationModel)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-intro.html","id":"specify-dosing-and-sampling-in-rxode2","dir":"Articles","previous_headings":"Description of rxode2 illustrated through an example","what":"Specify Dosing and sampling in rxode2","title":"Introduction to rxode2","text":"rxode2 provides simple flexible way specify dosing sampling functions generate event table. First, empty event table generated “et()” function. interface similar NONMEM event tables: can see code, can dose compartment named rxode2 model. slight deviation NONMEM can reduce need compartment renumbering. events can also combined expanded (multi-subject events complex regimens) rbind, c, seq, rep. information creating complex dosing regimens using rxode2 see rxode2 events vignette.","code":"ev  <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, addl=9,ii=12,cmt=\"depot\") %>%   et(time=120, amt=2000, addl=4, ii=14, cmt=\"depot\") %>%   et(0:240) # Add sampling"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-intro.html","id":"solving-odes","dir":"Articles","previous_headings":"Description of rxode2 illustrated through an example","what":"Solving ODEs","title":"Introduction to rxode2","text":"ODE can now solved using rxSolve: returns modified data frame. can see compartment values plot :  ,  Note labels automatically labeled units initial event table. rxode2 extracts units label plot (present).","code":"x <- mod1 %>% rxSolve(ev) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ x #> ── Solved rxode2 object ── #> ── Parameters (x$params): ── #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> ── Initial Conditions (x$inits): ── #> depot centr  peri   eff  #>     0     0     0     1  #> ── First part of data (object): ── #> # A tibble: 241 × 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # ℹ 235 more rows library(ggplot2) plot(x,C2) + ylab(\"Central Concentration\") plot(x,eff)  + ylab(\"Effect\")"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-model-types.html","id":"prediction-only-models","dir":"Articles","previous_headings":"","what":"Prediction only models","title":"rxode2 additional model types","text":"Prediction models simple create. use rxode2 syntax without ODE systems . simple example one-compartment model. Solving rxode2 models saving simple ODE system, faster course.","code":"library(rxode2) ## rxode2 4.0.0 using 2 threads (see ?getRxThreads) ##   no cache: create with `rxCreateCache()` mod <- function(){   model({     ipre <- 10 * exp(-ke * t)   }) } et  <- et(seq(0,24,length.out=50)) cmt1 <- rxSolve(mod,et,params=c(ke=0.5)) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ cmt1 ## -- Solved rxode2 object -- ## -- Parameters (x$params): -- ##  ke  ## 0.5  ## -- Initial Conditions (x$inits): -- ## named numeric(0) ## -- First part of data (object): -- ## # A tibble: 50 x 2 ##    time  ipre ##   <dbl> <dbl> ## 1 0     10    ## 2 0.490  7.83 ## 3 0.980  6.13 ## 4 1.47   4.80 ## 5 1.96   3.75 ## 6 2.45   2.94 ## # i 44 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-model-types.html","id":"solved-compartment-models","dir":"Articles","previous_headings":"","what":"Solved compartment models","title":"rxode2 additional model types","text":"Solved models also simple create. simply place linCmt() psuedo-function code. linCmt() function figures type model use based parameter names specified. often, pharmacometric models parameterized terms volume clearances. Clearances specified NONMEM-style names CL, Q, Q1, Q2, etc. distributional clearances CLD, CLD2. Volumes specified Central (VC V), Peripheral/Tissue (VP, VT). translations available, example translations : Another popular parameterization terms micro-constants. rxode2 assumes compartment 1 central compartment. elimination constant specified K, Ke Kel. example translations : last parameterization possible using alpha V //B/C. example translations : linCmt() sleuthing complete, 1, 2 3 compartment model solution used value linCmt(). linear linCmt() models following variables/state values become available (depenting type compartment model): depot, central, peripheral1 peripheral2 compartments can dose linear solved system depot central linear absorption constant model ka. Without additional ODEs, compartments numbered depot=1 central=2. absorption constant ka missing, may dose central compartment. Without additional ODEs compartment number central=1. peripheral compartments may dosed well, though numbers depend mixed ODEs. central depot compartment can infusions, departments can non-infusion doses. compartments take sort events ODE model can take, discussed rxode2 events vignette. acts ODE model; specify dose depot compartment solve system:","code":"mod <- function() {   ini({     kel <- 0.5     V <- 1   })   model({     ipre <- linCmt(V, kel)   }) } et  <- et(amt=10,time=0,cmt=depot) %>%   et(seq(0,24,length.out=50)) cmt1 <- rxSolve(mod,et) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ ## Warning: dose to compartment 2 ignored (not in system; 'id=1') cmt1 ## -- Solved rxode2 object -- ## -- Parameters (x$params): -- ## kel   V  ## 0.5 1.0  ## -- Initial Conditions (x$inits): -- ## central  ##       0  ## -- First part of data (object): -- ## # A tibble: 50 x 3 ##    time  ipre central ##   <dbl> <dbl>   <dbl> ## 1 0         0       0 ## 2 0.490     0       0 ## 3 0.980     0       0 ## 4 1.47      0       0 ## 5 1.96      0       0 ## 6 2.45      0       0 ## # i 44 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-model-types.html","id":"mixing-solved-systems-and-odes","dir":"Articles","previous_headings":"","what":"Mixing Solved Systems and ODEs","title":"rxode2 additional model types","text":"addition pure ODEs, may mix solved systems ODEs. prior 2-compartment indirect response model can simplified linCmt() function: allows indirect response model assign 2-compartment model C2 variable used indirect response model. mixing solved systems ODEs, solved system’s compartment always last compartment. solved system technically isn’t compartment solved. Adding dosing compartment end interfere actual ODE solved. Therefore,two-compartment indirect response model, effect compartment compartment #1 PK dosing compartment depot compartment #2. compartment model requires new event table since compartment number changed: can solved following command: Note solving require specifying effect compartment initial condition 1. Rather, already pre-specified eff(0)=1. can solved different initial conditions easily: rxode2 detective also require specify variables linCmt() function already defined block. Therefore, following function also work solve system. Note specify parameters solving system since built model, can override parameters:","code":"library(rxode2) ## Setup example model mod1 <-function() {   model({     C2 = centr/V2     C3 = peri/V3     d/dt(depot) =-KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  =                    Q*C2 - Q*C3     d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff   }) }  ## Seup parameters and initial conditions  theta <-     c(KA=2.94E-01, CL=1.86E+01, V2=4.02E+01, # central       Q=1.05E+01,  V3=2.97E+02,              # peripheral       Kin=1, Kout=1, EC50=200)               # effects  inits <- c(eff=1)  ## Setup dosing event information ev <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%     et(amt=10000, addl=9, ii=12) %>%     et(amt=20000, addl=4, time=120, ii=24) %>%     add.sampling(0:240)  ## Setup a mixed solved/ode system: mod2 <- function() {   model({     ## the order of variables do not matter, the type of compartmental     ## model is determined by the parameters specified.     C2   = linCmt(KA, CL, V2, Q, V3);     eff(0) = 1  ## This specifies that the effect compartment starts at 1.     d/dt(eff) =  Kin - Kout*(1-C2/(EC50+C2))*eff;   }) } ev <- et(amountUnits='mg', timeUnits='hours') %>%   et(amt=10000, addl=9, ii=12, cmt=2) %>%   et(amt=20000, addl=4, time=120, ii=24, cmt=2) %>%   et(0:240) x <- mod2 %>%  solve(theta, ev) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ print(x) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ##      KA      CL      V2       Q      V3     Kin    Kout    EC50  ##   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  ## -- Initial Conditions ($inits): -- ##         eff       depot     central peripheral1  ##           1           0           0           0  ## -- First part of data (object): -- ## # A tibble: 241 x 6 ##   time    C2   eff depot central peripheral1 ##    [h] <dbl> <dbl> <dbl>   <dbl>       <dbl> ## 1    0 249.   1        0  10000           0  ## 2    1 121.   1.35     0   4877.       1825. ## 3    2  60.3  1.38     0   2424.       2659. ## 4    3  31.0  1.28     0   1248.       3018. ## 5    4  17.0  1.18     0    683.       3152. ## 6    5  10.2  1.11     0    411.       3178. ## # i 235 more rows x <- mod2 %>%  solve(theta, ev,c(eff=2)) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments print(x) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ##      KA      CL      V2       Q      V3     Kin    Kout    EC50  ##   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  ## -- Initial Conditions ($inits): -- ##         eff       depot     central peripheral1  ##           2           0           0           0  ## -- First part of data (object): -- ## # A tibble: 241 x 6 ##   time    C2   eff depot central peripheral1 ##    [h] <dbl> <dbl> <dbl>   <dbl>       <dbl> ## 1    0 249.   2        0  10000           0  ## 2    1 121.   1.93     0   4877.       1825. ## 3    2  60.3  1.67     0   2424.       2659. ## 4    3  31.0  1.41     0   1248.       3018. ## 5    4  17.0  1.23     0    683.       3152. ## 6    5  10.2  1.13     0    411.       3178. ## # i 235 more rows mod3 <- function() {   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })   model({     # Since the parameters are in the ini block, put them in linCmt so     # that the model is detected correctly     C2   <- linCmt(KA, CL, V2, Q, V3)     eff(0) <- 1  ## This specifies that the effect compartment starts at 1.     d/dt(eff) <-  Kin - Kout*(1-C2/(EC50+C2))*eff;   }) }  x <- mod3 %>%  solve(ev) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments print(x) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ##      KA      CL      V2       Q      V3     Kin    Kout    EC50  ##   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  ## -- Initial Conditions ($inits): -- ##         eff       depot     central peripheral1  ##           1           0           0           0  ## -- First part of data (object): -- ## # A tibble: 241 x 6 ##   time    C2   eff depot central peripheral1 ##    [h] <dbl> <dbl> <dbl>   <dbl>       <dbl> ## 1    0 249.   1        0  10000           0  ## 2    1 121.   1.35     0   4877.       1825. ## 3    2  60.3  1.38     0   2424.       2659. ## 4    3  31.0  1.28     0   1248.       3018. ## 5    4  17.0  1.18     0    683.       3152. ## 6    5  10.2  1.11     0    411.       3178. ## # i 235 more rows x <- mod3 %>%  solve(c(KA=10),ev) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments print(x) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ##    KA    CL    V2     Q    V3   Kin  Kout  EC50  ##  10.0  18.6  40.2  10.5 297.0   1.0   1.0 200.0  ## -- Initial Conditions ($inits): -- ##         eff       depot     central peripheral1  ##           1           0           0           0  ## -- First part of data (object): -- ## # A tibble: 241 x 6 ##   time    C2   eff depot central peripheral1 ##    [h] <dbl> <dbl> <dbl>   <dbl>       <dbl> ## 1    0 249.   1        0  10000           0  ## 2    1 121.   1.35     0   4877.       1825. ## 3    2  60.3  1.38     0   2424.       2659. ## 4    3  31.0  1.28     0   1248.       3018. ## 5    4  17.0  1.18     0    683.       3152. ## 6    5  10.2  1.11     0    411.       3178. ## # i 235 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"nesting-in-rxode2","dir":"Articles","previous_headings":"","what":"Nesting in rxode2","title":"Nesting levels in rxode2","text":"one level nesting possible rxode2; example using following uncertainties sources variability:","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"event-table","dir":"Articles","previous_headings":"Nesting in rxode2","what":"Event table","title":"Nesting levels in rxode2","text":"event table contains nesting variables: inv: investigator id id: subject id eye: eye id (left right) occ: occasion","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, addl=9,ii=12,cmt=\"depot\") %>%   et(time=120, amt=2000, addl=4, ii=14, cmt=\"depot\") %>%   et(seq(0, 240, by=4)) %>% # Assumes sampling when there is no dosing information   et(seq(0, 240, by=4) + 0.1) %>% ## adds 0.1 for separate eye   et(id=1:20) %>%   ## Add an occasion per dose   mutate(occ=cumsum(!is.na(amt))) %>%   mutate(occ=ifelse(occ == 0, 1, occ)) %>%   mutate(occ=2- occ %% 2) %>%   mutate(eye=ifelse(round(time) == time, 1, 2)) %>%   mutate(inv=ifelse(id < 10, 1, 2)) %>% as_tibble ->   ev"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"rxode2-model","dir":"Articles","previous_headings":"Nesting in rxode2","what":"rxode2 model","title":"Nesting levels in rxode2","text":"creates rxode2 model multi-level nesting. Note variables inv.Cl, inv.Ka, eta.Cl etc; need one variable level nesting.","code":"mod <- rxode2({   ## Clearance with individuals   eff(0) = 1   C2 = centr/V2*(1+prop.sd)   C3 = peri/V3   CL =  TCl*exp(eta.Cl + eye.Cl + iov.Cl + inv.Cl)   KA = TKA * exp(eta.Ka + eye.Ka + iov.Cl + inv.Ka)   d/dt(depot) =-KA*depot   d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3   d/dt(peri)  =                    Q*C2 - Q*C3   d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff   ef0 = eff + add.sd }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"uncertainty-in-model-parameters","dir":"Articles","previous_headings":"Nesting in rxode2","what":"Uncertainty in Model parameters","title":"Nesting levels in rxode2","text":"","code":"theta <- c(\"TKA\"=0.294, \"TCl\"=18.6, \"V2\"=40.2,            \"Q\"=10.5, \"V3\"=297, \"Kin\"=1, \"Kout\"=1, \"EC50\"=200)  ## Creating covariance matrix tmp <- matrix(rnorm(8^2), 8, 8) tMat <- tcrossprod(tmp, tmp) / (8 ^ 2) dimnames(tMat) <- list(names(theta), names(theta))  tMat #>               TKA           TCl           V2            Q           V3 #> TKA   0.173571236 -0.1003204607  0.038185010 -0.004108928 -0.095032973 #> TCl  -0.100320461  0.2195710868 -0.043849095  0.013295549 -0.007477895 #> V2    0.038185010 -0.0438490948  0.129784612 -0.017270432 -0.038004762 #> Q    -0.004108928  0.0132955493 -0.017270432  0.022145634  0.020376451 #> V3   -0.095032973 -0.0074778948 -0.038004762  0.020376451  0.165568340 #> Kin  -0.040867119 -0.0492597458 -0.003056722 -0.033468634 -0.003021883 #> Kout  0.035469225  0.0275087955  0.033725901  0.027668205  0.005497301 #> EC50  0.026158042  0.0009434711  0.039426946 -0.036283167 -0.093134292 #>               Kin         Kout          EC50 #> TKA  -0.040867119  0.035469225  0.0261580416 #> TCl  -0.049259746  0.027508796  0.0009434711 #> V2   -0.003056722  0.033725901  0.0394269465 #> Q    -0.033468634  0.027668205 -0.0362831667 #> V3   -0.003021883  0.005497301 -0.0931342922 #> Kin   0.226735493 -0.083447793  0.0659884544 #> Kout -0.083447793  0.117195570 -0.0291684598 #> EC50  0.065988454 -0.029168460  0.0928611407"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"nesting-variability","dir":"Articles","previous_headings":"Nesting in rxode2","what":"Nesting Variability","title":"Nesting levels in rxode2","text":"specify multiple levels nesting, can specify nested lotri matrix; using approach use condition operator | specify variable nesting occurs ; Bayesian simulation need specify much information parameter; rxode2 nu parameter. case: - id, nu=100 model came 100 subjects - eye, nu=200 model came 200 eyes - occ, nu=200 model came 200 occasions - inv, nu=10 model came 10 investigators specify lotri can use | var(nu=X), :","code":"omega <- lotri(lotri(eta.Cl ~ 0.1,                      eta.Ka ~ 0.1) | id(nu=100),                lotri(eye.Cl ~ 0.05,                      eye.Ka ~ 0.05) | eye(nu=200),                lotri(iov.Cl ~ 0.01,                      iov.Ka ~ 0.01) | occ(nu=200),                lotri(inv.Cl ~ 0.02,                      inv.Ka ~ 0.02) | inv(nu=10)) omega #> $id #>        eta.Cl eta.Ka #> eta.Cl    0.1    0.0 #> eta.Ka    0.0    0.1 #>  #> $eye #>        eye.Cl eye.Ka #> eye.Cl   0.05   0.00 #> eye.Ka   0.00   0.05 #>  #> $occ #>        iov.Cl iov.Ka #> iov.Cl   0.01   0.00 #> iov.Ka   0.00   0.01 #>  #> $inv #>        inv.Cl inv.Ka #> inv.Cl   0.02   0.00 #> inv.Ka   0.00   0.02 #>  #> Properties: nu"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"unexplained-variability","dir":"Articles","previous_headings":"Nesting in rxode2","what":"Unexplained variability","title":"Nesting levels in rxode2","text":"last piece variability specify unexplained variability","code":"sigma <- lotri(prop.sd ~ .25,                add.sd~ 0.125)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-nesting.html","id":"solving-the-problem","dir":"Articles","previous_headings":"Nesting in rxode2","what":"Solving the problem","title":"Nesting levels in rxode2","text":"multiple investigators study; investigator number individuals enrolled site. rxode2 automatically determines number investigators simulate effect investigator. output, inv.Cl(inv==1) inv.Cl investigator 1, inv.Cl(inv==2) inv.Cl investigator 2, etc. inv.Cl(inv==1), inv.Cl(inv==2), etc simulated study combined form investigator variability. equation form represent following: look simulated parameters can see inv.Cl(inv==1) inv.Cl(inv==2) s$params; study: eye variability occasion variability individual simulates number variables become eye occasion variability; case eye: look simulation variables (ie eye.Cl(eye==1), eye.Cl(eye==2), etc) change individual combined make eye variability occasion variability can seen pharamcometric models.","code":"s <- rxSolve(mod, theta, ev,              thetaMat=tMat, omega=omega,              sigma=sigma, sigmaDf=400,              nStud=400) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> unhandled error message: EE:[lsoda] 70000 steps taken before reaching tout #>  @(lsoda.c:748 #> Warning: some ID(s) could not solve the ODEs correctly; These values are #> replaced with 'NA' print(s) #> -- Solved rxode2 object -- #> -- Parameters ($params): -- #> # A tibble: 8,000 x 24 #>    sim.id id    `inv.Cl(inv==1)` `inv.Cl(inv==2)` `inv.Ka(inv==1)` #>     <int> <fct>            <dbl>            <dbl>            <dbl> #>  1      1 1              0.00900            0.312           -0.117 #>  2      1 2              0.00900            0.312           -0.117 #>  3      1 3              0.00900            0.312           -0.117 #>  4      1 4              0.00900            0.312           -0.117 #>  5      1 5              0.00900            0.312           -0.117 #>  6      1 6              0.00900            0.312           -0.117 #>  7      1 7              0.00900            0.312           -0.117 #>  8      1 8              0.00900            0.312           -0.117 #>  9      1 9              0.00900            0.312           -0.117 #> 10      1 10             0.00900            0.312           -0.117 #> # i 7,990 more rows #> # i 19 more variables: `inv.Ka(inv==2)` <dbl>, `eye.Cl(eye==1)` <dbl>, #> #   `eye.Cl(eye==2)` <dbl>, `eye.Ka(eye==1)` <dbl>, `eye.Ka(eye==2)` <dbl>, #> #   `iov.Cl(occ==1)` <dbl>, `iov.Cl(occ==2)` <dbl>, `iov.Ka(occ==1)` <dbl>, #> #   `iov.Ka(occ==2)` <dbl>, V2 <dbl>, V3 <dbl>, TCl <dbl>, eta.Cl <dbl>, #> #   TKA <dbl>, eta.Ka <dbl>, Q <dbl>, Kin <dbl>, Kout <dbl>, EC50 <dbl> #> -- Initial Conditions ($inits): -- #> depot centr  peri   eff  #>     0     0     0     1  #>  #> Simulation with uncertainty in: #> * parameters ($thetaMat for changes) #> * omega matrix ($omegaList) #>  #> -- First part of data (object): -- #> # A tibble: 976,000 x 21 #>   sim.id    id time  inv.Cl inv.Ka  eye.Cl eye.Ka iov.Cl iov.Ka    C2      C3 #>    <int> <int>  [h]   <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl> <dbl>   <dbl> #> 1      1     1  0   0.00900 -0.117 -0.330  0.0792 0.0370 -0.197  0    0       #> 2      1     1  0.1 0.00900 -0.117 -0.0547 0.185  0.0370 -0.197  8.12 0.00805 #> 3      1     1  4   0.00900 -0.117 -0.330  0.0792 0.0370 -0.197 39.9  4.53    #> 4      1     1  4.1 0.00900 -0.117 -0.0547 0.185  0.0370 -0.197 20.0  4.64    #> 5      1     1  8   0.00900 -0.117 -0.330  0.0792 0.0370 -0.197  6.55 7.47    #> 6      1     1  8.1 0.00900 -0.117 -0.0547 0.185  0.0370 -0.197 18.2  7.51    #> # i 975,994 more rows #> # i 10 more variables: CL <dbl>, KA <dbl>, ef0 <dbl>, depot <dbl>, centr <dbl>, #> #   peri <dbl>, eff <dbl>, occ <fct>, eye <fct>, inv <fct> inv.Cl = (inv == 1) * `inv.Cl(inv==1)` + (inv == 2) * `inv.Cl(inv==2)` print(head(s$params)) #>   sim.id id inv.Cl(inv==1) inv.Cl(inv==2) inv.Ka(inv==1) inv.Ka(inv==2) #> 1      1  1    0.008995575      0.3118205     -0.1165083   -0.001926179 #> 2      1  2    0.008995575      0.3118205     -0.1165083   -0.001926179 #> 3      1  3    0.008995575      0.3118205     -0.1165083   -0.001926179 #> 4      1  4    0.008995575      0.3118205     -0.1165083   -0.001926179 #> 5      1  5    0.008995575      0.3118205     -0.1165083   -0.001926179 #> 6      1  6    0.008995575      0.3118205     -0.1165083   -0.001926179 #>   eye.Cl(eye==1) eye.Cl(eye==2) eye.Ka(eye==1) eye.Ka(eye==2) iov.Cl(occ==1) #> 1    -0.33023666    -0.05471051    0.079190835     0.18487157    0.037021761 #> 2    -0.42211135    -0.15399939   -0.006773841     0.22463048   -0.007762485 #> 3    -0.05128596     0.18243012    0.123504458     0.13361259   -0.168921159 #> 4    -0.06360621     0.65606292    0.340443016     0.04807945    0.157027939 #> 5     0.08009126     0.06662396   -0.027627640    -0.05838949   -0.226341946 #> 6    -0.11937190    -0.17320340    0.090540884     0.02039840   -0.211648032 #>   iov.Cl(occ==2) iov.Ka(occ==1) iov.Ka(occ==2)       V2       V3      TCl #> 1     0.13932112    -0.19726803    0.088763868 40.26476 296.4748 19.25043 #> 2     0.07716277     0.04555116    0.049148937 40.26476 296.4748 19.25043 #> 3     0.08347085     0.17916513   -0.002990168 40.26476 296.4748 19.25043 #> 4     0.24736740    -0.13444417   -0.077647794 40.26476 296.4748 19.25043 #> 5    -0.09568733     0.02049190    0.054658457 40.26476 296.4748 19.25043 #> 6    -0.01547841     0.12619350    0.040206608 40.26476 296.4748 19.25043 #>        eta.Cl       TKA      eta.Ka        Q       Kin     Kout     EC50 #> 1  0.09788109 0.2354877 -0.21526790 10.43157 0.9256189 1.044937 200.3679 #> 2  0.33302598 0.2354877 -0.01028112 10.43157 0.9256189 1.044937 200.3679 #> 3  0.08504325 0.2354877  0.37253705 10.43157 0.9256189 1.044937 200.3679 #> 4  0.16521678 0.2354877 -0.01859974 10.43157 0.9256189 1.044937 200.3679 #> 5  0.53131380 0.2354877 -0.37109644 10.43157 0.9256189 1.044937 200.3679 #> 6 -0.30786713 0.2354877  0.14897588 10.43157 0.9256189 1.044937 200.3679 print(head(s$params %>% filter(sim.id == 2))) #>   sim.id id inv.Cl(inv==1) inv.Cl(inv==2) inv.Ka(inv==1) inv.Ka(inv==2) #> 1      2  1    -0.07227613     0.07620864    -0.01884171    -0.01962499 #> 2      2  2    -0.07227613     0.07620864    -0.01884171    -0.01962499 #> 3      2  3    -0.07227613     0.07620864    -0.01884171    -0.01962499 #> 4      2  4    -0.07227613     0.07620864    -0.01884171    -0.01962499 #> 5      2  5    -0.07227613     0.07620864    -0.01884171    -0.01962499 #> 6      2  6    -0.07227613     0.07620864    -0.01884171    -0.01962499 #>   eye.Cl(eye==1) eye.Cl(eye==2) eye.Ka(eye==1) eye.Ka(eye==2) iov.Cl(occ==1) #> 1    -0.25102634   -0.135230741      0.1354374    -0.01605664    0.081212198 #> 2    -0.24832622   -0.380770273      0.2233348    -0.37101991    0.207985292 #> 3     0.24081384    0.133361609     -0.3826770    -0.32496203   -0.099983807 #> 4    -0.11021791    0.009423897      0.3655308     0.08736599   -0.002580804 #> 5     0.21155058    0.194977611      0.3626918    -0.19452347    0.058392202 #> 6     0.03663028    0.068047203     -0.1003754     0.32368023    0.167658084 #>   iov.Cl(occ==2) iov.Ka(occ==1) iov.Ka(occ==2)       V2       V3      TCl #> 1   -0.032678168    -0.06556217   -0.061277262 40.21091 296.6424 18.86433 #> 2    0.130258486    -0.05016896   -0.103721118 40.21091 296.6424 18.86433 #> 3   -0.262726137     0.06144127   -0.104186144 40.21091 296.6424 18.86433 #> 4   -0.037289852     0.03954265   -0.021344468 40.21091 296.6424 18.86433 #> 5   -0.007530921     0.12713682    0.081238197 40.21091 296.6424 18.86433 #> 6    0.026801132    -0.02811353   -0.002702762 40.21091 296.6424 18.86433 #>        eta.Cl       TKA      eta.Ka        Q       Kin     Kout   EC50 #> 1  0.19368101 0.5686675  0.26184170 10.54673 0.5434136 1.323825 200.09 #> 2 -0.16262369 0.5686675  0.12969487 10.54673 0.5434136 1.323825 200.09 #> 3  0.22164455 0.5686675  0.24501105 10.54673 0.5434136 1.323825 200.09 #> 4  0.05997662 0.5686675  0.03059399 10.54673 0.5434136 1.323825 200.09 #> 5  0.45691421 0.5686675 -0.20098716 10.54673 0.5434136 1.323825 200.09 #> 6 -0.19943300 0.5686675 -0.36846082 10.54673 0.5434136 1.323825 200.09 eye.Cl = (eye == 1) * `eye.Cl(eye==1)` + (eye == 2) * `eye.Cl(eye==2)`"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"setting-up-the-rxode2-model-for-the-pipeline","dir":"Articles","previous_headings":"","what":"Setting up the rxode2 model for the pipeline","title":"rxode2 in a pipeline","text":"example show use rxode2 simple pipeline. can start model can used different simulation workflows rxode2 can handle: tumor growth model described Ribba 2012. case, compiled model R object Ribba2012, though rxode2 simulation pipeline, assign compiled model object, though think makes sense.","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`  Ribba2012 <- function() {   ini({     k = 100     tkde = 0.24     eta.tkde = 0     tkpq = 0.0295     eta.kpq = 0     tkqpp = 0.0031     eta.kqpp = 0     tlambdap = 0.121     eta.lambdap = 0     tgamma = 0.729     eta.gamma = 0     tdeltaqp = 0.00867     eta.deltaqp = 0     prop.sd <- 0     tpt0 = 7.13     eta.pt0 = 0     tq0 = 41.2     eta.q0 = 0   })   model({     kde ~ tkde*exp(eta.tkde)     kpq ~ tkpq * exp(eta.kpq)     kqpp ~ tkqpp * exp(eta.kqpp)     lambdap ~ tlambdap*exp(eta.lambdap)     gamma ~ tgamma*exp(eta.gamma)     deltaqp ~ tdeltaqp*exp(eta.deltaqp)     d/dt(c) = -kde * c     d/dt(pt) = lambdap * pt *(1-pstar/k) + kqpp*qp -       kpq*pt - gamma*c*kde*pt     d/dt(q) = kpq*pt -gamma*c*kde*q     d/dt(qp) = gamma*c*kde*q - kqpp*qp - deltaqp*qp     ## initial conditions     pt0 ~ tpt0*exp(eta.pt0)     q0 ~ tq0*exp(eta.q0)     pt(0) = pt0     q(0) = q0     pstar <- (pt+q+qp)     pstar ~  prop(prop.sd)   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"simulating-one-event-table","dir":"Articles","previous_headings":"","what":"Simulating one event table","title":"rxode2 in a pipeline","text":"Simulating single event table quite simple: pipe rxode2 simulation object event table object et(). events completely specified, simply solve ODE system rxSolve(). case can pipe output plot() conveniently view results. pt (Proliferative Tissue), q (quiescent tissue) qp (DNA-Damaged quiescent tissue) pstar (total tumor tissue)","code":"Ribba2012 %>% # Use rxode2     et(time.units=\"months\") %>% # Pipe to a new event table     et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months     et(0, 250, by=0.5) %>% # Add some sampling times (not required)     rxSolve() %>% # Solve the simulation     plot(pt, q, qp, pstar) # Plot it, plotting the variables of interest #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"simulating-with-between-subject-variability","dir":"Articles","previous_headings":"Simulating multiple subjects from a single event table","what":"Simulating with between subject variability","title":"rxode2 in a pipeline","text":"next sort simulation may useful simulating multiple patients treatments. case, use omega matrix specified paper: information, easy simulate 3 subjects model-based parameters:  Note two different things added simulation: - nSub specify many subjects model - omega specify subject variability.","code":"## Add CVs from paper for individual simulation ## Uses exact formula:  lognCv = function(x){log((x/100)^2+1)}  library(lotri) ## Now create omega matrix ## I'm using lotri to quickly specify names/diagonals omega <- lotri(eta.pt0 ~ lognCv(94),                eta.q0 ~ lognCv(54),                eta.lambdap ~ lognCv(72),                eta.kqp ~ lognCv(76),                eta.kqpp ~ lognCv(97),                eta.deltaqp ~ lognCv(115),                eta.tkde ~ lognCv(70))  omega #>               eta.pt0    eta.q0 eta.lambdap   eta.kqp  eta.kqpp eta.deltaqp #> eta.pt0     0.6331848 0.0000000   0.0000000 0.0000000 0.0000000   0.0000000 #> eta.q0      0.0000000 0.2558818   0.0000000 0.0000000 0.0000000   0.0000000 #> eta.lambdap 0.0000000 0.0000000   0.4176571 0.0000000 0.0000000   0.0000000 #> eta.kqp     0.0000000 0.0000000   0.0000000 0.4559047 0.0000000   0.0000000 #> eta.kqpp    0.0000000 0.0000000   0.0000000 0.0000000 0.6631518   0.0000000 #> eta.deltaqp 0.0000000 0.0000000   0.0000000 0.0000000 0.0000000   0.8426442 #> eta.tkde    0.0000000 0.0000000   0.0000000 0.0000000 0.0000000   0.0000000 #>              eta.tkde #> eta.pt0     0.0000000 #> eta.q0      0.0000000 #> eta.lambdap 0.0000000 #> eta.kqp     0.0000000 #> eta.kqpp    0.0000000 #> eta.deltaqp 0.0000000 #> eta.tkde    0.3987761 set.seed(1089) rxSetSeed(1089) Ribba2012 %>% # Use rxode2     et(time.units=\"months\") %>% # Pipe to a new event table     et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months     et(0, 250, by=0.5) %>% # Add some sampling times (not required)     rxSolve(nSub=3, omega=omega) %>% # Solve the simulation     plot(pt, q, qp, pstar) # Plot it, plotting the variables of interest #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> Warning: multi-subject simulation without without 'omega'"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"simulation-with-unexplained-variability","dir":"Articles","previous_headings":"Simulating multiple subjects from a single event table","what":"Simulation with unexplained variability","title":"rxode2 in a pipeline","text":"can even add unexplained variability quite easily:  case added sigma matrix unexplained variability pstar total tumor tissue. can even simulate uncertainty theta omega sigma values wish.","code":"Ribba2012 %>% # Use rxode2   ini(prop.sd=0.05) %>% # change variability   et(time.units=\"months\") %>% # Pipe to a new event table   et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months   et(0, 250, by=0.5) %>% # Add some sampling times (not required)   rxSolve(nSub=3, omega=omega) %>%   plot(pt, q, qp, sim) # Plot it, plotting the variables of interest #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `prop.sd` to `0.05` #> Warning: multi-subject simulation without without 'omega' # note that sim is the simulated pstar since this is simulated from the # model with a nlmixr2 endpoint"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"simulation-with-uncertainty-in-all-the-parameters-by-matrices","dir":"Articles","previous_headings":"Simulating multiple subjects from a single event table","what":"Simulation with uncertainty in all the parameters (by matrices)","title":"rxode2 in a pipeline","text":"assume parameters came 95 subjects 8 observations apiece, degrees freedom omega matrix 95, degrees freedom sigma matrix 95*8=760 95 items informed omega matrix, 760 items informed sigma matrix.  Often simulations full covariance matrix fixed effect parameters. case, matrix, specified thetaMat. full covariance matrix, can information diagonal elements covariance matrix model paper. can converted follows: Now thetaMat represent uncertainty theta matrix, well pieces simulation. Typically can put information simulation thetaMat matrix. large variability theta easy sample negative rate constant, make sense. example: correct problems simply need use truncated multivariate normal specify reasonable ranges parameters. theta specified thetaLower thetaUpper. Similar parameters matrices: omegaLower, omegaUpper, sigmaLower sigmaUpper. may named vectors, one numeric value, numeric vector matching number parameters specified thetaMat matrix. case simulation simply modified thetaLower=0 make sure rates positive:","code":"Ribba2012 %>% # Use rxode2   ini(prop.sd = 0.05) %>%   et(time.units=\"months\") %>% # Pipe to a new event table   et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months   et(0, 250, by=0.5) %>% # Add some sampling times (not required)   rxSolve(nSub=3, nStud=3, omega=omega,           dfSub=760, dfObs=95) %>% # Solve the simulation   plot(pt, q, qp, sim) # Plot it, plotting the variables of interest #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `prop.sd` to `0.05` #> Warning: multi-subject simulation without without 'omega' rseVar <- function(est, rse){   return(est*rse/100)^2 }  thetaMat <- lotri(tpt0 ~ rseVar(7.13,25),                   tq0 ~ rseVar(41.2,7),                   tlambdap ~ rseVar(0.121, 16),                   tkqpp ~ rseVar(0.0031, 35),                   tdeltaqp ~ rseVar(0.00867, 21),                   tgamma ~ rseVar(0.729, 37),                   tkde ~ rseVar(0.24, 33)                   )  thetaMat #>            tpt0   tq0 tlambdap    tkqpp  tdeltaqp  tgamma   tkde #> tpt0     1.7825 0.000  0.00000 0.000000 0.0000000 0.00000 0.0000 #> tq0      0.0000 2.884  0.00000 0.000000 0.0000000 0.00000 0.0000 #> tlambdap 0.0000 0.000  0.01936 0.000000 0.0000000 0.00000 0.0000 #> tkqpp    0.0000 0.000  0.00000 0.001085 0.0000000 0.00000 0.0000 #> tdeltaqp 0.0000 0.000  0.00000 0.000000 0.0018207 0.00000 0.0000 #> tgamma   0.0000 0.000  0.00000 0.000000 0.0000000 0.26973 0.0000 #> tkde     0.0000 0.000  0.00000 0.000000 0.0000000 0.00000 0.0792 Ribba2012 %>% # Use rxode2 ini(prop.sd = 0.05) %>% et(time.units=\"months\") %>% # Pipe to a new event table et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months et(0, 250, by=0.5) %>% # Add some sampling times (not required) rxSolve(nSub=2, nStud=2, omega=omega, thetaMat=thetaMat, dfSub=760, dfObs=95) %>% # Solve the simulation plot(pt, q, qp, pstar) # Plot it, plotting the variables of interest  #> ℹ change initial estimate of `prop.sd` to `0.05` #> unhandled error message: EE:[lsoda] 70000 steps taken before reaching tout #> @(lsoda.c:750 #> Warning message: #> In rxSolve_(object, .ctl, .nms, .xtra, params, events, inits, setupOnly = .setupOnly) : #>  Some ID(s) could not solve the ODEs correctly; These values are replaced with NA. Ribba2012 %>% # Use rxode2   ini(prop.sd = 0.05) %>%   et(time.units=\"months\") %>% # Pipe to a new event table   et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months   et(0, 250, by=0.5) %>% # Add some sampling times (not required)   rxSolve(nSub=2, nStud=2, omega=omega,           thetaMat=thetaMat,           thetaLower=0, # Make sure the rates are reasonable           dfSub=760, dfObs=95) %>% # Solve the simulation   plot(pt, q, qp, sim) # Plot it, plotting the variables of interest #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `prop.sd` to `0.05` #> Warning: multi-subject simulation without without 'omega'"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"summarizing-the-simulation-output","dir":"Articles","previous_headings":"","what":"Summarizing the simulation output","title":"rxode2 in a pipeline","text":"easy use dplyr data.table perform summary simulations, rxode2 also provides ability confint function.","code":"## This takes a little more time; Most of the time is the summary ## time.  sim0 <- Ribba2012 %>% # Use rxode2   ini(prop.sd=0.05) %>%   et(time.units=\"months\") %>% # Pipe to a new event table   et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months   et(0, 250, by=0.5) %>% # Add some sampling times (not required)   rxSolve(nSub=10, nStud=10, omega=omega,           thetaMat=thetaMat,           thetaLower=0, # Make sure the rates are reasonable           dfSub=760, dfObs=95) %>% # Solve the simulation   confint(c(\"pt\",\"q\",\"qp\",\"sim\"),level=0.90); # Create Simulation intervals #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `prop.sd` to `0.05` #> Warning: multi-subject simulation without without 'omega' #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done  sim0 %>% plot() # Plot the simulation intervals"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-pipeline.html","id":"simulating-from-a-data-frame-of-parameters","dir":"Articles","previous_headings":"Summarizing the simulation output","what":"Simulating from a data-frame of parameters","title":"rxode2 in a pipeline","text":"simulation matrices can useful fast way simulate information, sometimes may want simulate complex scenarios. instance, may reason believe tkde needs tlambdap, therefore need simulated carefully. can generate data frame whatever way want. internal method simulating new parameters exported .","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  Ribba2012 <- Ribba2012() # Convert to classic rxode2 model with ini attached  r <- Ribba2012$simulationIniModel #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  pars <- rxInits(r) pars <- pars[regexpr(\"(prop|eta)\",names(pars)) == -1] print(pars) #>           k        tkde        tkpq       tkqpp    tlambdap      tgamma  #>    1.00e+02    2.40e-01    2.95e-02    3.10e-03    1.21e-01    7.29e-01  #>    tdeltaqp        tpt0         tq0 rxerr.pstar  #>    8.67e-03    7.13e+00    4.12e+01    1.00e+00 ## This is the exported method for simulation of Theta/Omega internally in rxode2 df <- rxSimThetaOmega(params=pars, omega=omega,dfSub=760,                       thetaMat=thetaMat, thetaLower=0, nSub=60,nStud=60) %>%     filter(tkde > tlambdap) %>% as_tibble() ## You could also simulate more and bind them together to a data frame. print(df) #> # A tibble: 2,100 × 17 #>        k  tkde   tkpq tkqpp tlambdap tgamma tdeltaqp  tpt0   tq0 rxerr.pstar #>    <dbl> <dbl>  <dbl> <dbl>    <dbl>  <dbl>    <dbl> <dbl> <dbl>       <dbl> #>  1   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  2   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  3   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  4   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  5   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  6   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  7   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  8   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #>  9   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #> 10   100 0.468 0.0295 0.805    0.288  0.980    0.256  8.54  41.4           1 #> # ℹ 2,090 more rows #> # ℹ 7 more variables: eta.pt0 <dbl>, eta.q0 <dbl>, eta.lambdap <dbl>, #> #   eta.kqp <dbl>, eta.kqpp <dbl>, eta.deltaqp <dbl>, eta.tkde <dbl> ## Quick check to make sure that all the parameters are OK. all(df$tkde>df$tlambdap) #> [1] TRUE sim1 <- r %>% # Use rxode2     et(time.units=\"months\") %>% # Pipe to a new event table     et(amt=1, time=50, until=58, ii=1.5) %>% # Add dosing every 1.5 months     et(0, 250, by=0.5) %>% # Add some sampling times (not required)     rxSolve(df) ## Note this information looses information about which ID is in a ## \"study\", so it summarizes the confidence intervals by dividing the ## subjects into sqrt(#subjects) subjects and then summarizes the ## confidence intervals sim2 <- sim1 %>% confint(c(\"pt\",\"q\",\"qp\",\"sim\"),level=0.90); # Create Simulation intervals #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done save(sim2, file = file.path(system.file(package = \"rxode2\"), \"pipeline-sim2.rds\"), version = 2) sim2 %>% plot()"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"setting-up-model-for-plotting-explanation","dir":"Articles","previous_headings":"Plotting in rxode2","what":"Setting up model for plotting explanation","title":"Plotting rxode2 models","text":"first step explain rxode2 model plots setup: rxode2 model event table solved object","code":"library(rxode2) ## rxode2 4.0.0 using 2 threads (see ?getRxThreads) ##   no cache: create with `rxCreateCache()` ## Model from rxode2 tutorial m1 <- function() {   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200     ## Added modeled bioavaiblity, duration and rate     fdepot <- 1     durDepot <- 8     rateDepot <- 1250   })   model({     C2 <- centr / V2     C3 <- peri / V3     d/dt(depot) <- -KA * depot     f(depot) <- fdepot     dur(depot) <- durDepot     rate(depot) <- rateDepot     d/dt(centr) <- KA * depot - CL * C2 - Q * C2 + Q * C3     d/dt(peri) <- Q * C2 - Q * C3     d/dt(eff) <- Kin - Kout * (1 - C2 / (EC50 + C2)) * eff     eff(0) <- 1   }) }  ev <- et(timeUnits = \"hr\") %>%   et(amt = 10000, ii = 12, until = 24) %>%   et(seq(0, 24, length.out = 100))  s <- rxSolve(m1, ev) ## ℹ parameter labels from comments are typically ignored in non-interactive mode ## ℹ Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"default-rxode2-plot","dir":"Articles","previous_headings":"Plotting in rxode2","what":"Default rxode2 plot","title":"Plotting rxode2 models","text":"default plot rxode2 plot time versus state calculated lhs values:  Things note: First, plots actually ggplot2 plots can modified standard ggplot2 grammar graphics Also note plot method rxSolve objects can currently use arguments default plot method: log character string contains \"x\" x axis logarithmic, \"y\" y axis logarithmic \"xy\" \"yx\" axes logarithmic. available, use xgxr xgx_scale_x_log10() xgx_scale_y_log10() functions. xlab bit different simply supplying x-label ggplot2, retain unit information originally supplied event table. Also note, available, unit information used used meaningful ticks xgx_scale_x_time_units() ylab supplies y label following currently unsupported: . type b. xlim c. ylim d. main e. sub f. ann g. axes","code":"plot(s)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"subsetting-plots","dir":"Articles","previous_headings":"","what":"Subsetting plots","title":"Plotting rxode2 models","text":"interesting, often useful subset plots based values interested ; example, interesting plot eff C2. , simply specify interesting items plot function. instance:","code":"plot(s, C2, eff)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"semi-log-plots","dir":"Articles","previous_headings":"","what":"Semi-log plots","title":"Plotting rxode2 models","text":"Semi-log plots PK concentrations common; simply need use log=\"y\"  uses xgx_scale_y_log10() available clearly show semi-log nature plot.","code":"plot(s, C2, log=\"y\", ylab=\"Concentration\") ## Warning in ggplot2::scale_y_log10(..., breaks = breaks, minor_breaks = ## minor_breaks, : log-10 transformation introduced infinite ## values."},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"plots-with-multi-subject-plots","dir":"Articles","previous_headings":"","what":"Plots with multi-subject plots","title":"Plotting rxode2 models","text":"multi-subject plots can easily plot applying principles . illustrate plot, lets expand event table include plot 4 subjects lognormal random variability subjects; complete, may plot method:  Notice colored individual labeled legend. interested concentration, produces similar plot:  Notice plot individual labeled attached id let know individual comes . done ggrepel available, otherwise legend retained.","code":"# Setup the new problem m2 <- function() {   ini({     KA <- 2.94E-01     TCL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200     ## Added modeled bioavaiblity, duration and rate     fdepot <- 1     durDepot <- 8     rateDepot <- 1250     eta.Cl ~ 0.4^2       })   model({     CL <- TCL * exp(eta.Cl)     C2 <- centr / V2     C3 <- peri / V3     d/dt(depot) <- -KA * depot     f(depot) <- fdepot     dur(depot) <- durDepot     rate(depot) <- rateDepot     d/dt(centr) <- KA * depot - CL * C2 - Q * C2 + Q * C3     d/dt(peri) <- Q * C2 - Q * C3     d/dt(eff) <- Kin - Kout * (1 - C2 / (EC50 + C2)) * eff     eff(0) <- 1   }) }  # Create the event table ev <- et(timeUnits = \"hr\") %>%   et(amt = 10000, until = units::set_units(3, days), ii = 12) %>% # loading doses   et(seq(0, 48, length.out = 200)) %>%   et(id = 1:4)  s <- rxSolve(m2, ev) ## ℹ parameter labels from comments are typically ignored in non-interactive mode ## ℹ Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ plot(s, C2, eff) plot(s, C2, log=\"y\", ylab=\"Concentration\") ## Warning in ggplot2::scale_y_log10(..., breaks = breaks, minor_breaks = ## minor_breaks, : log-10 transformation introduced infinite ## values."},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-plot.html","id":"multi-subject-plots-with-large-number-of-subjects","dir":"Articles","previous_headings":"Plots with multi-subject plots","what":"Multi-subject plots with large number of subjects","title":"Plotting rxode2 models","text":"can get bit much many subjects solved (example lets simulate 100)  case, individuals put plot transparent grayscale plot pane. allows places subjects present darker. number individuals plots switch legend grayscale controlled changing options rxode2.spaghetti. ie. options(rxode2.spaghetti=7). 7 individuals default value plotting changes individual grayscale spaghetti plots. can also create confidence interval simulations confint: plot plot","code":"ev <- et(timeUnits = \"hr\") %>%   et(amt = 10000, until = units::set_units(3, days), ii = 12) %>% # loading doses   et(seq(0, 48, length.out = 200)) %>%   et(id = 1:100) # 100 subjects  s <- rxSolve(m2, ev) ## ℹ parameter labels from comments are typically ignored in non-interactive mode ## ℹ Need to run with the source intact to parse comments plot(s, C2, log=\"y\", ylab=\"Concentration\") ## Warning in ggplot2::scale_y_log10(..., breaks = breaks, minor_breaks = ## minor_breaks, : log-10 transformation introduced infinite ## values. s2 <- confint(s, parm=\"C2\") ## ! in order to put confidence bands around the intervals, you need at least 2500 simulations ## summarizing data...done plot(s2)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-prior-data.html","id":"using-prior-data-for-solving","dir":"Articles","previous_headings":"","what":"Using prior data for solving","title":"Using Prior Data for ODE solving","text":"rxode2 can use single subject multiple subjects single event table solve ODEs. Additionally, rxode2 can use arbitrary data frame individualized events. example using nlmixr, use theo_sd data frame","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` library(nlmixr2data)  ## Load data from nlmixr d <- theo_sd  ## Create rxode2 model theo <- function() {   ini({     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     tv <- 3.45    # Log V     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v   })  }  ## Create parameter dataset library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union parsDf <- tribble(   ~ eta.ka, ~ eta.cl, ~ eta.v,    0.105, -0.487, -0.080,   0.221, 0.144, 0.021,   0.368, 0.031, 0.058,  -0.277, -0.015, -0.007,  -0.046, -0.155, -0.142,  -0.382, 0.367, 0.203,  -0.791, 0.160, 0.047,  -0.181, 0.168, 0.096,   1.420, 0.042, 0.012,  -0.738, -0.391, -0.170,   0.790, 0.281, 0.146,  -0.527, -0.126, -0.198) %>%     mutate(tka = 0.451, tcl = 1.017, tv = 3.449)  ## Now solve the dataset solveData <- rxSolve(theo, parsDf, d) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  plot(solveData, cp) print(solveData) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #> # A tibble: 12 × 7 #>    id      tka   tcl    tv eta.ka eta.cl  eta.v #>    <fct> <dbl> <dbl> <dbl>  <dbl>  <dbl>  <dbl> #>  1 1     0.451  1.02  3.45  0.105 -0.487 -0.08  #>  2 2     0.451  1.02  3.45  0.221  0.144  0.021 #>  3 3     0.451  1.02  3.45  0.368  0.031  0.058 #>  4 4     0.451  1.02  3.45 -0.277 -0.015 -0.007 #>  5 5     0.451  1.02  3.45 -0.046 -0.155 -0.142 #>  6 6     0.451  1.02  3.45 -0.382  0.367  0.203 #>  7 7     0.451  1.02  3.45 -0.791  0.16   0.047 #>  8 8     0.451  1.02  3.45 -0.181  0.168  0.096 #>  9 9     0.451  1.02  3.45  1.42   0.042  0.012 #> 10 10    0.451  1.02  3.45 -0.738 -0.391 -0.17  #> 11 11    0.451  1.02  3.45  0.79   0.281  0.146 #> 12 12    0.451  1.02  3.45 -0.527 -0.126 -0.198 #> ── Initial Conditions ($inits): ── #>  depot center  #>      0      0  #> ── First part of data (object): ── #> # A tibble: 132 × 8 #>      id  time    ka    cl     v    cp   depot center #>   <int> <dbl> <dbl> <dbl> <dbl> <dbl>   <dbl>  <dbl> #> 1     1  0     1.74  1.70  29.0  0    320.        0  #> 2     1  0.25  1.74  1.70  29.0  3.86 207.      112. #> 3     1  0.57  1.74  1.70  29.0  6.81 118.      198. #> 4     1  1.12  1.74  1.70  29.0  9.06  45.4     263. #> 5     1  2.02  1.74  1.70  29.0  9.79   9.45    284. #> 6     1  3.82  1.74  1.70  29.0  9.10   0.410   264. #> # ℹ 126 more rows  ## Of course the fasest way to solve if you don't care about the rxode2 extra parameters is  solveData <- rxSolve(theo, parsDf, d, returnType=\"data.frame\") #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  ## solved data dplyr::as_tibble(solveData) #> # A tibble: 132 × 8 #>       id  time    ka    cl     v    cp         depot center #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl>         <dbl>  <dbl> #>  1     1  0     1.74  1.70  29.0  0    320.              0  #>  2     1  0.25  1.74  1.70  29.0  3.86 207.            112. #>  3     1  0.57  1.74  1.70  29.0  6.81 118.            198. #>  4     1  1.12  1.74  1.70  29.0  9.06  45.4           263. #>  5     1  2.02  1.74  1.70  29.0  9.79   9.45          284. #>  6     1  3.82  1.74  1.70  29.0  9.10   0.410         264. #>  7     1  5.1   1.74  1.70  29.0  8.46   0.0440        246. #>  8     1  7.03  1.74  1.70  29.0  7.56   0.00152       219. #>  9     1  9.05  1.74  1.70  29.0  6.71   0.0000449     195. #> 10     1 12.1   1.74  1.70  29.0  5.61   0.000000212   163. #> # ℹ 122 more rows  data.table::data.table(solveData) #>         id  time        ka       cl        v       cp        depot    center #>      <int> <num>     <num>    <num>    <num>    <num>        <num>     <num> #>   1:     1  0.00 1.7436838 1.698932 29.04946 0.000000 3.199920e+02   0.00000 #>   2:     1  0.25 1.7436838 1.698932 29.04946 3.861730 2.069289e+02 112.18117 #>   3:     1  0.57 1.7436838 1.698932 29.04946 6.805372 1.184389e+02 197.69240 #>   4:     1  1.12 1.7436838 1.698932 29.04946 9.058196 4.539354e+01 263.13572 #>   5:     1  2.02 1.7436838 1.698932 29.04946 9.791088 9.450361e+00 284.42585 #>  ---                                                                         #> 128:    12  5.07 0.9268162 2.437566 25.81614 8.442535 2.919432e+00 217.95370 #> 129:    12  7.07 0.9268162 2.437566 25.81614 7.074251 4.573778e-01 182.62989 #> 130:    12  9.03 0.9268162 2.437566 25.81614 5.892253 7.436222e-02 152.11524 #> 131:    12 12.05 0.9268162 2.437566 25.81614 4.432614 4.526550e-03 114.43300 #> 132:    12 24.15 0.9268162 2.437566 25.81614 1.414179 6.154773e-08  36.50865"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-rxUse.html","id":"using-pre-compiled-models-in-your-packages","dir":"Articles","previous_headings":"","what":"Using Pre-compiled models in your packages","title":"Compiled rxode2 models in Packages","text":"package like include pre-compiled rxode2 models package easy create package. simple make package rxPkg() command. : Add model package; can use package data idr package loads Add right package requirements DESCRIPTION file. want update describe package modify authors, license etc. Create skeleton model documentation files can add package documentation. case file idr-doc.R R directory Create configure configure.win script removes regenerates src directory based whatever version rxode2 compiled . modified plan compiled code, though suggested. can write R code package interacts rxode2 object can distribute shiny apps similar things package context. present can add models package rxUse(). Simply compile rxode2 model package add model rxUse() Now model idr model library. also create model-doc.R R directory can document model. can use devtools methods install/test model","code":"library(rxode2); ## Now Create a model idr <- rxode2({     C2 = centr/V2;     C3 = peri/V3;     d/dt(depot) =-KA*depot;     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3;     d/dt(peri)  =                    Q*C2 - Q*C3;     d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff; })  ## You can specify as many models as you want to add  rxPkg(idr, package=\"myPackage\"); ## Add the idr model to your package rxUse(model) devtools::load_all() # Load all the functions in the package devtools::document() # Create package documentation devtools::install() # Install package devtools::check() # Check the package devtools::build() # build the package so you can submit it to places like CRAN"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-rxUse.html","id":"using-models-in-a-already-present-package","dir":"Articles","previous_headings":"","what":"Using Models in a already present package","title":"Compiled rxode2 models in Packages","text":"illustrate, lets start blank package rxUse() : - Create rxode2 sources move package’s src/ directory. R source package, also finish directory library-init.c registers rxode2 models package use R. - Create stub R documentation models including package. able see R documentation loading package standard ? interface. still need : - Export least one function. function wish export, can add re-export rxode2 using roxygen follows: want use Suggests instead Depends package, way want export rxode2’s normal routines also need instruct R load model library models included model’s dll. done : R package rxode2 models intend add compiled sources (recommended), can add following configure scripts Depending check may need dummy autoconf script, want integrate sources Rcpp C/Fortan based packages, need include rxModels-compiled.h : - Add define macro compiledModelCall list registered .Call functions. - Register C interface allow model solving R_init0_rxModels_rxode2_models() (rxModels replaced package name). complete, can compile/document standard methods: load package new version rxode2, models recompiled used. However, want models recompiled recent version rxode2, simply need call rxUse() project directory followed standard methods install/create package. Note include rxode2 code required generate model regenerate rxode2 c-code src directory. rxode2 objects, summary show one way recreate model. example compiled models package can found rxModels repository.","code":"library(rxode2) library(usethis) pkgPath  <- file.path(rxTempDir(),\"MyRxModel\") create_package(pkgPath); use_gpl3_license(\"Matt\") use_package(\"rxode2\", \"LinkingTo\") use_package(\"rxode2\", \"Depends\") ##  library(rxode2) on load; Can use imports instead. use_roxygen_md() ##use_readme_md() library(rxode2); ## Now Create a model idr <- rxode2({     C2 = centr/V2;     C3 = peri/V3;     d/dt(depot) =-KA*depot;     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3;     d/dt(peri)  =                    Q*C2 - Q*C3;     d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff; });  rxUse(idr); ## Add the idr model to your package rxUse(); # Update the compiled rxode2 sources for all of your packages ##' @importFrom rxode2 rxode2 ##' @export rxode2::rxode2 ##' @importFrom rxode2 rxode2 ##' @export rxode2::rxode2  ##' @importFrom rxode2 et ##' @export rxode2::et  ##' @importFrom rxode2 etRep ##' @export rxode2::etRep  ##' @importFrom rxode2 etSeq ##' @export rxode2::etSeq  ##' @importFrom rxode2 as.et ##' @export rxode2::as.et  ##' @importFrom rxode2 eventTable ##' @export rxode2::eventTable  ##' @importFrom rxode2 add.dosing ##' @export rxode2::add.dosing  ##' @importFrom rxode2 add.sampling ##' @export rxode2::add.sampling  ##' @importFrom rxode2 rxSolve ##' @export rxode2::rxSolve  ##' @importFrom rxode2 rxControl ##' @export rxode2::rxControl  ##' @importFrom rxode2 rxClean ##' @export rxode2::rxClean  ##' @importFrom rxode2 rxUse ##' @export rxode2::rxUse  ##' @importFrom rxode2 rxShiny ##' @export rxode2::rxShiny  ##' @importFrom rxode2 genShinyApp.template ##' @export rxode2::genShinyApp.template  ##' @importFrom rxode2 cvPost ##' @export rxode2::cvPost  # This is actually from `magrittr` but allows less imports ##' @importFrom rxode2 %>% ##' @export rxode2::`%>%` # In this case `rxModels` is the package name ##' @useDynLib rxModels, .registration=TRUE #!/bin/sh # This should be used for both configure and configure.win echo \"unlink('src', recursive=TRUE);rxode2::rxUse()\" > build.R ${R_HOME}/bin/Rscript build.R rm build.R ## dummy autoconf script ## It is saved to configure.ac devtools::load_all() devtools::document() devtools::install() devtools::load_all() devtools::document() devtools::install()"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-shiny.html","id":"facilities-for-generating-r-shiny-applications","dir":"Articles","previous_headings":"","what":"Facilities for generating R shiny applications","title":"rxode2 and Shiny","text":"example creating R shiny application interactively explore responses various complex dosing regimens available http://qsp.engr.uga.edu:3838/rxode2/RegimenSimulator. Shiny applications like one may programmatically created experimental function genShinyApp.template(). application includes widgets varying dose, dosing regimen, dose cycle, number cycles. Click go Shiny App","code":"genShinyApp.template(appDir = \"shinyExample\", verbose=TRUE)  library(shiny) runApp(\"shinyExample\")"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-shiny.html","id":"exploring-parameter-fits-graphically-using-shiny","dir":"Articles","previous_headings":"","what":"Exploring parameter fits graphically using shiny","title":"rxode2 and Shiny","text":"rxode2 object can explored rxShiny(obj). rxShiny() also allow try new models see behave.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulation-of-variability-with-rxode2","dir":"Articles","previous_headings":"Population Simulations with rxode2","what":"Simulation of Variability with rxode2","title":"rxode2 Simulation","text":"pharmacometrics nonlinear-mixed effect modeling software (like nlmixr) characterizes -subject variability. subject variability can simulate new subjects. Assuming 2-compartment, indirect response model, can set create rxode2 model describing system :","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"setting-up-the-rxode2-model","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Setting up the rxode2 model","title":"rxode2 Simulation","text":"","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`  set.seed(32) rxSetSeed(32)  mod <- function() {   ini({     KA <- 2.94E-01     TCl <- 1.86E+01     # between subject variability     eta.Cl ~ 0.4^2     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })   model({     C2 <- centr/V2     C3 <- peri/V3     CL <-  TCl*exp(eta.Cl) ## This is coded as a variable in the model     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) <- 1   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulating","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Simulating","title":"rxode2 Simulation","text":"next step simulate create dosing regimen overall simulation: wish, can also add sampling times (though rxode2 can fill ): Note et takes similar arguments seq adding sampling times. methods adding sampling times events make complex dosing regimens (See event vignette). includes ways add variability sampling dosing times). complete can simulate using rxSolve routine: quickly look customize simulation use default plot routine. Since rxode2 object, create ggplot2 object can modify wish. extra parameter plot tells rxode2/R piece information interested plotting. case, interested looking derived parameter C2:","code":"ev <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, cmt=\"centr\") ev <- ev %>% et(0,48, length.out=100) sim  <- rxSolve(mod, ev, nSub=100) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"checking-the-simulation-with-plot","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Checking the simulation with plot","title":"rxode2 Simulation","text":"course additional parameter also state value, like eff:  even look two side--side:  stack patchwork","code":"library(ggplot2) ## The plots from rxode2 are ggplots so they can be modified with ## standard ggplot commands. plot(sim, C2, log=\"y\") +     ylab(\"Central Compartment\") ## They also takes many of the standard plot arguments; See ?plot plot(sim, eff, ylab=\"Effect\") plot(sim, C2, eff) library(patchwork) plot(sim, C2, log=\"y\") / plot(sim, eff)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"processing-the-data-to-create-summary-plots","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Processing the data to create summary plots","title":"rxode2 Simulation","text":"Usually pharmacometric simulations enough simply simulate system. something easier digest, like look central extreme tendencies simulation. Since rxode2 solve object type data frame now straightforward perform calculations generate plots simulated data. can , 5th, 50th, 95th percentiles simulated data plotted.   Note can see parameters simulated example","code":"confint(sim, \"C2\", level=0.95) %>%     plot(ylab=\"Central Concentration\", log=\"y\") #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done confint(sim, \"eff\", level=0.95) %>%     plot(ylab=\"Effect\") #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done head(sim$param) #>   sim.id    KA  TCl   V2    Q  V3 Kin Kout EC50     eta.Cl #> 1      1 0.294 18.6 40.2 10.5 297   1    1  200  0.8067570 #> 2      2 0.294 18.6 40.2 10.5 297   1    1  200  0.0236961 #> 3      3 0.294 18.6 40.2 10.5 297   1    1  200 -0.3340697 #> 4      4 0.294 18.6 40.2 10.5 297   1    1  200 -0.1098197 #> 5      5 0.294 18.6 40.2 10.5 297   1    1  200 -0.2803752 #> 6      6 0.294 18.6 40.2 10.5 297   1    1  200 -0.2114090"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulation-of-unexplained-variability-sigma","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Simulation of unexplained variability (sigma)","title":"rxode2 Simulation","text":"addition conveniently simulating subject variability, can also easily simulate unexplained variability. One way create rxode2 model endpoints defined. Model piping can keeping model intact: can see dataset defined $multipleEndpoint: see endpoints defined eff C2: allows solve system: Since simulated model residual specification included multiple endpoint model, can summarize endpoint simply taking confidence interval \"sim\":  want subset specific endpoint, like eff can create confidence interval endpoint using specification sim.eff, endpoint name separated sim dot:","code":"mod2 <- mod %>%   model(eff ~ add(eff.sd), append=TRUE) %>%   model(C2 ~ prop(prop.sd), append=TRUE) %>%   ini(eff.sd=sqrt(0.1), prop.sd=sqrt(0.1)) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ add residual parameter `eff.sd` and set estimate to 1 #> ℹ add residual parameter `prop.sd` and set estimate to 1 #> ℹ change initial estimate of `eff.sd` to `0.316227766016838` #> ℹ change initial estimate of `prop.sd` to `0.316227766016838` mod2$multipleEndpoint #>   variable                cmt                dvid* #> 1  eff ~ … cmt='eff' or cmt=4 dvid='eff' or dvid=1 #> 2   C2 ~ …  cmt='C2' or cmt=5  dvid='C2' or dvid=2 ev <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, cmt=\"centr\") %>%   et(seq(0,48, length.out=100), cmt=\"eff\") %>%   et(seq(0,48, length.out=100), cmt=\"C2\") sim  <- rxSolve(mod2, ev, nSub=100) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ s <- confint(sim, \"sim\") #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done  plot(s) seff <- confint(sim, \"sim.eff\") #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done  plot(seff)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulation-of-individuals","dir":"Articles","previous_headings":"Population Simulations with rxode2 > Simulation of Variability with rxode2","what":"Simulation of Individuals","title":"rxode2 Simulation","text":"Sometimes may want match dosing observations individuals clinical trial. create data.frame using rxode2 event specification well ID column indicate individual. rxode2 event vignette talks datasets created.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union ev1 <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%     et(amt=10000, cmt=2) %>%     et(0,48,length.out=10)  ev2 <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%     et(amt=5000, cmt=2) %>%     et(0,48,length.out=8)  dat <- rbind(data.frame(ID=1, ev1$get.EventTable()),              data.frame(ID=2, ev2$get.EventTable()))   ## Note the number of subject is not needed since it is determined by the data sim  <- rxSolve(mod, dat) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  sim %>% select(id, time, eff, C2) #>    id          time      eff          C2 #> 1   1  0.000000 [h] 1.000000 248.7562189 #> 2   1  5.333333 [h] 1.062982   5.3970840 #> 3   1 10.666667 [h] 1.013881   2.5901710 #> 4   1 16.000000 [h] 1.011565   2.2550581 #> 5   1 21.333333 [h] 1.010158   1.9820213 #> 6   1 26.666667 [h] 1.008929   1.7422286 #> 7   1 32.000000 [h] 1.007849   1.5314615 #> 8   1 37.333333 [h] 1.006899   1.3461870 #> 9   1 42.666667 [h] 1.006064   1.1833253 #> 10  1 48.000000 [h] 1.005330   1.0401683 #> 11  2  0.000000 [h] 1.000000 124.3781095 #> 12  2  6.857143 [h] 1.005764   0.7047232 #> 13  2 13.714286 [h] 1.002879   0.5592808 #> 14  2 20.571429 [h] 1.002381   0.4630160 #> 15  2 27.428571 [h] 1.001971   0.3833262 #> 16  2 34.285714 [h] 1.001632   0.3173516 #> 17  2 41.142857 [h] 1.001351   0.2627315 #> 18  2 48.000000 [h] 1.001118   0.2175123"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulation-of-clinical-trials","dir":"Articles","previous_headings":"","what":"Simulation of Clinical Trials","title":"rxode2 Simulation","text":"either using simple single event table, data clinical trial described , complete clinical trial simulation can performed. Typically clinical trial simulations want account uncertainty fixed parameter estimates, even uncertainty subject variability well unexplained variability. rxode2 allows account uncertainties simulating multiple virtual “studies,” specified parameter nStud. studies samples realization fixed effect parameters covariance matrices subject variability(omega) unexplained variabilities (sigma). Depending information models, strategies simulating realization omega sigma matrices. first strategy occurs either standard errors standard deviations (related parameters), modeled correlation model simulating . case suggested strategy use inverse Wishart (parameterized scale conjugate prior)/scaled inverse chi distribution. approach uses single parameter inform variability covariance matrix sampled (degrees freedom). second strategy occurs standard errors variance/standard deviation modeled correlations covariance matrix. approach perform separate simulations standard deviations correlation matrix. First simulate variance/standard deviation components thetaMat multivariate normal simulation. simulation transformation standard deviations, correlation matrix simulated using degrees freedom covariance matrix. Combining simulated standard deviation simulated correlation matrix give simulated covariance matrix. smaller dimension covariance matrices (dimension < 10x10) recommended use lkj distribution simulate correlation matrix. higher dimension covariance matrices suggested use inverse wishart distribution (transformed correlation matrix) simulations. covariance/variance prior simulated rxode2s cvPost() function.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulation-from-inverse-wishart-correlations","dir":"Articles","previous_headings":"Simulation of Clinical Trials","what":"Simulation from inverse Wishart correlations","title":"rxode2 Simulation","text":"example simulation :  wish can see omega sigma used virtual study accessing solved data object $omega.list $sigma.list: can also see parameter realizations $params data frame.","code":"## Creating covariance matrix tmp <- matrix(rnorm(8^2), 8, 8) tMat <- tcrossprod(tmp, tmp) / (8 ^ 2) dimnames(tMat) <- list(NULL, names(mod2$theta)[1:8])  sim  <- rxSolve(mod2, ev, nSub=100, thetaMat=tMat, nStud=10,                 dfSub=10, dfObs=100)  s <-sim %>% confint(\"sim\") #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done  plot(s) head(sim$omegaList) #> [[1]] #>           eta.Cl #> eta.Cl 0.1676778 #>  #> [[2]] #>           eta.Cl #> eta.Cl 0.2917085 #>  #> [[3]] #>           eta.Cl #> eta.Cl 0.1776813 #>  #> [[4]] #>           eta.Cl #> eta.Cl 0.1578682 #>  #> [[5]] #>           eta.Cl #> eta.Cl 0.1845614 #>  #> [[6]] #>           eta.Cl #> eta.Cl 0.3282268 head(sim$sigmaList) #> [[1]] #>            rxerr.eff   rxerr.C2 #> rxerr.eff 1.12416983 0.04197039 #> rxerr.C2  0.04197039 0.97293971 #>  #> [[2]] #>             rxerr.eff    rxerr.C2 #> rxerr.eff  0.84311199 -0.06277998 #> rxerr.C2  -0.06277998  1.22140938 #>  #> [[3]] #>           rxerr.eff  rxerr.C2 #> rxerr.eff 0.9834771 0.1060251 #> rxerr.C2  0.1060251 1.0024751 #>  #> [[4]] #>            rxerr.eff   rxerr.C2 #> rxerr.eff 1.25556975 0.07690868 #> rxerr.C2  0.07690868 0.90991261 #>  #> [[5]] #>           rxerr.eff  rxerr.C2 #> rxerr.eff  1.116261 -0.184748 #> rxerr.C2  -0.184748  1.320288 #>  #> [[6]] #>            rxerr.eff   rxerr.C2 #> rxerr.eff 0.93539238 0.07270049 #> rxerr.C2  0.07270049 0.98648424"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulate-using-covariance-inputs","dir":"Articles","previous_headings":"Simulation of Clinical Trials","what":"Simulate using covariance inputs","title":"rxode2 Simulation","text":"Lets assume wish simulate nonmem run included xpose First setup model; Since taking nonmem like use free-form style classic rxode2 model start classic model: Next input estimated parameters: also covariances; , easiest way create named covariance matrix use lotri():","code":"rx1 <- rxode2({   cl <- tcl*(1+crcl.cl*(CLCR-65)) * exp(eta.cl)   v <- tv * WT * exp(eta.v)   ka <- tka * exp(eta.ka)   ipred <- linCmt()   obs <- ipred * (1 + prop.sd) + add.sd }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ theta <- c(tcl=2.63E+01, tv=1.35E+00, tka=4.20E+00, tlag=2.08E-01,            prop.sd=2.05E-01, add.sd=1.06E-02, crcl.cl=7.17E-03,            ## Note that since we are using the separation strategy the ETA variances are here too            eta.cl=7.30E-02,  eta.v=3.80E-02, eta.ka=1.91E+00) thetaMat <- lotri(     tcl + tv + tka + tlag + prop.sd + add.sd + crcl.cl + eta.cl + eta.v + eta.ka ~         c(7.95E-01,           2.05E-02, 1.92E-03,           7.22E-02, -8.30E-03, 6.55E-01,           -3.45E-03, -6.42E-05, 3.22E-03, 2.47E-04,           8.71E-04, 2.53E-04, -4.71E-03, -5.79E-05, 5.04E-04,           6.30E-04, -3.17E-06, -6.52E-04, -1.53E-05, -3.14E-05, 1.34E-05,           -3.30E-04, 5.46E-06, -3.15E-04, 2.46E-06, 3.15E-06, -1.58E-06, 2.88E-06,           -1.29E-03, -7.97E-05, 1.68E-03, -2.75E-05, -8.26E-05, 1.13E-05, -1.66E-06, 1.58E-04,           -1.23E-03, -1.27E-05, -1.33E-03, -1.47E-05, -1.03E-04, 1.02E-05, 1.67E-06, 6.68E-05, 1.56E-04,           7.69E-02, -7.23E-03, 3.74E-01, 1.79E-03, -2.85E-03, 1.18E-05, -2.54E-04, 1.61E-03, -9.03E-04, 3.12E-01))  evw <- et(amount.units=\"mg\", time.units=\"hours\") %>%     et(amt=100) %>%     ## For this problem we will simulate with sampling windows     et(list(c(0, 0.5),        c(0.5, 1),        c(1, 3),        c(3, 6),        c(6, 12))) %>%     et(id=1:1000)  ## From the run we know that: ##   total number of observations is: 476 ##    Total number of individuals:     74 sim  <- rxSolve(rx1, theta, evw,  nSub=100, nStud=10,                 thetaMat=thetaMat,                 ## Match boundaries of problem                 thetaLower=0,                 sigma=c(\"prop.sd\", \"add.sd\"), ## Sigmas are standard deviations                 sigmaXform=\"identity\", # default sigma xform=\"identity\"                 omega=c(\"eta.cl\", \"eta.v\", \"eta.ka\"), ## etas are variances                 omegaXform=\"variance\", # default omega xform=\"variance\"                 iCov=data.frame(WT=rnorm(1000, 70, 15), CLCR=rnorm(1000, 65, 25)),                 dfSub=74, dfObs=476); #> ℹ thetaMat has too many items, ignored: 'tlag' #> [====|====|====|====|====|====|====|====|====|====] 0:00:00  print(sim) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #> # A tibble: 10,000 × 9 #>    sim.id id      tcl crcl.cl  eta.cl    tv    eta.v   tka eta.ka #>     <int> <fct> <dbl>   <dbl>   <dbl> <dbl>    <dbl> <dbl>  <dbl> #>  1      1 1      27.0   0.995  0.489   1.45  0.975    4.51 -0.186 #>  2      1 2      27.0   0.995 -0.770   1.45  0.0294   4.51 -0.116 #>  3      1 3      27.0   0.995 -2.13    1.45  0.187    4.51  0.941 #>  4      1 4      27.0   0.995  0.333   1.45 -0.346    4.51 -0.686 #>  5      1 5      27.0   0.995  1.01    1.45  0.978    4.51  1.69  #>  6      1 6      27.0   0.995 -0.474   1.45  1.06     4.51 -0.641 #>  7      1 7      27.0   0.995 -0.0488  1.45  1.18     4.51  0.395 #>  8      1 8      27.0   0.995  0.267   1.45  0.164    4.51  1.41  #>  9      1 9      27.0   0.995 -1.19    1.45  1.24     4.51 -0.726 #> 10      1 10     27.0   0.995 -0.163   1.45 -0.00741  4.51 -0.799 #> # ℹ 9,990 more rows #> ── Initial Conditions ($inits): ── #>   depot central  #>       0       0  #>  #> Simulation with uncertainty in: #> • parameters ($thetaMat for changes) #> • omega matrix ($omegaList) #> • sigma matrix ($sigmaList) #>  #> ── First part of data (object): ── #> # A tibble: 50,000 × 12 #>   sim.id    id   time    cl     v    ka   ipred    obs   depot central    WT #>    <int> <int>    [h] <dbl> <dbl> <dbl>   <dbl>  <dbl>   <dbl>   <dbl> <dbl> #> 1      1     1 0.151   230. 240.   3.74 0.167   1.21   5.68e+1  39.9    62.2 #> 2      1     1 0.568   230. 240.   3.74 0.258   0.700  1.19e+1  61.9    62.2 #> 3      1     1 1.02    230. 240.   3.74 0.198   0.0443 2.18e+0  47.5    62.2 #> 4      1     1 4.49    230. 240.   3.74 0.00753 0.261  5.01e-6   1.80   62.2 #> 5      1     1 6.19    230. 240.   3.74 0.00148 1.21   8.84e-9   0.355  62.2 #> 6      1     2 0.0833  515.  53.3  4.01 0.358   0.620  7.16e+1  19.1    35.7 #> # ℹ 49,994 more rows #> # ℹ 1 more variable: CLCR <dbl> ## Notice that the simulation time-points change for the individual  ## If you want the same sampling time-points you can do that as well: evw <- et(amount.units=\"mg\", time.units=\"hours\") %>%     et(amt=100) %>%     et(0, 24, length.out=50) %>%     et(id=1:100)  sim  <- rxSolve(rx1, theta, evw,  nSub=100, nStud=10,                 thetaMat=thetaMat,                 ## Match boundaries of problem                 thetaLower=0,                 sigma=c(\"prop.sd\", \"add.sd\"), ## Sigmas are standard deviations                 sigmaXform=\"identity\", # default sigma xform=\"identity\"                 omega=c(\"eta.cl\", \"eta.v\", \"eta.ka\"), ## etas are variances                 omegaXform=\"variance\", # default omega xform=\"variance\"                 iCov=data.frame(WT=rnorm(100, 70, 15), CLCR=rnorm(100, 65, 25)),                 dfSub=74, dfObs=476,                 resample=TRUE) #> ℹ thetaMat has too many items, ignored: 'tlag'  s <-sim %>% confint(c(\"ipred\")) #> summarizing data... #> done plot(s)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-sim-var.html","id":"simulate-without-uncertainty-in-omega-or-sigma-parameters","dir":"Articles","previous_headings":"Simulation of Clinical Trials","what":"Simulate without uncertainty in omega or sigma parameters","title":"rxode2 Simulation","text":"wish sample prior distributions either omega sigma matrices, can turn feature specifying simVariability = FALSE option solving:  Note since realizations omega sigma simulated, $omegaList $sigmaList return NULL.","code":"sim  <- rxSolve(mod2, ev, nSub=100, thetaMat=tMat, nStud=10,                 simVariability=FALSE)  s <-sim %>% confint(c(\"centr\", \"eff\")) #> ! in order to put confidence bands around the intervals, you need at least 2500 simulations #> summarizing data...done  plot(s)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-single-subject.html","id":"single-subject-solving","dir":"Articles","previous_headings":"","what":"Single Subject solving","title":"Single Subject ODE solving -- differences from multiple subject","text":"Originally, rxode2 created solve ODEs one individual. single system without changes individual parameters. course still supported, classic examples found rxode2 intro. article discusses differences multiple subject single subject solving. three differences: Single solving solve ID parallel Single solving lacks id column parameters($params) well actual dataset. Single solving allows parameter exploration easier parameter can modified. multiple subject solves, make sure update individual parameter. first obvious difference speed; multiple subjects can run subject ID parallel. information examples speed gains multiple subject solving see Speeding rxode2 vignette. next difference amount information output final data. Taking 2 compartment indirect response model originally tutorial: Now simple solve  better see differences single solve, can solve 2 individuals  observing two solves, can see: multiple subject solve contains id column data frame data frame parameters subject. last feature obvious, modifying individual parameters. single subject data, can modify rxode2 data frame changing initial conditions parameter values part data frame, described rxode2 Data Frames. multiple subject solving, feature still works, requires care supplying individual’s parameter value, otherwise may change solve drop parameter key individuals.","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`  mod1 <- function() {   ini({     KA=2.94E-01     CL=1.86E+01     V2=4.02E+01     Q=1.05E+01     V3=2.97E+02     Kin=1     Kout=1     EC50=200   })   model({     C2 = centr/V2     C3 = peri/V3     d/dt(depot) =-KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  =                    Q*C2 - Q*C3     d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) = 1   }) }    et <- et(amount.units='mg', time.units='hours') %>%     et(dose=10000, addl=9, ii=12) %>%     et(amt=20000, nbr.doses=5, start.time=120, dosing.interval=24) %>%     et(0:240) # sampling x <- rxSolve(mod1, et) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments x #> ── Solved rxode2 object ── #> ── Parameters (x$params): ── #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> ── Initial Conditions (x$inits): ── #> depot centr  peri   eff  #>     0     0     0     1  #> ── First part of data (object): ── #> # A tibble: 241 × 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # ℹ 235 more rows  print(x) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> ── Initial Conditions ($inits): ── #> depot centr  peri   eff  #>     0     0     0     1  #> ── First part of data (object): ── #> # A tibble: 241 × 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # ℹ 235 more rows  plot(x, C2, eff) x2 <- rxSolve(mod1, et %>% et(id=1:2), params=data.frame(CL=c(18.6, 7.6))) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments print(x2) #> ── Solved rxode2 object ── #> ── Parameters ($params): ── #> # A tibble: 2 × 9 #>   id       KA    CL    V2     Q    V3   Kin  Kout  EC50 #>   <fct> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 1     0.294  18.6  40.2  10.5   297     1     1   200 #> 2 2     0.294   7.6  40.2  10.5   297     1     1   200 #> ── Initial Conditions ($inits): ── #> depot centr  peri   eff  #>     0     0     0     1  #> ── First part of data (object): ── #> # A tibble: 482 × 8 #>      id time    C2    C3  depot centr  peri   eff #>   <int>  [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1     1    0   0   0     10000     0     0   1    #> 2     1    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3     1    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4     1    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5     1    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6     1    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # ℹ 476 more rows  plot(x2, C2, eff)"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"a-note-about-the-speed-of-the-functional-form-for-rxode2","dir":"Articles","previous_headings":"","what":"A note about the speed of the functional form for rxode2","title":"Speeding up rxode2","text":"functional form benefit supported nlmixr2 therefore one interface solving estimating, takes computation time get underlying “classic” simulation code. models form : can also specify end-points simulation/estimation just like nlmixr2: every solve, compile (cached compile) underlying model. wish speed process can use two underlying rxode2 classic models. takes two steps: Parsing/evaluating model Creating simulation model first step can done rxode2(mod1) mod1() (second model ). second step create underlying “classic” rxode2 model, can done two different methods:$simulationModel $simulationIniModel. $simulationModel provide simulation code without initial conditions pre-pended, $simulationIniModel pre-pend values. endpoints specified, simulation code endpoint also output. can see differences : wish speed multiple simualtions rxode2 functions, need pre-calculate care steps : functions can act like normal ui model solved. can convert back UI .rxUi() function .function() needed. increase speed multiple simulations model use lower level simulation model (ie $simulationModel $simulationIniModel depending need)","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()`  mod1 <- function() {   ini({     KA   <- 0.3     CL   <- 7     V2   <- 40     Q    <- 10     V3   <- 300     Kin  <- 0.2     Kout <- 0.2     EC50 <- 8   })   model({     C2 = centr/V2     C3 = peri/V3     d/dt(depot) = -KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri) = Q*C2 - Q*C3     d/dt(eff) = Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) = 1   }) } mod2f <- function() {   ini({     TKA   <- 0.3     TCL   <- 7     TV2   <- 40     TQ    <- 10     TV3   <- 300     TKin  <- 0.2     TKout <- 0.2     TEC50 <- 8     eta.cl + eta.v ~ c(0.09,                        0.08, 0.25)     c2.prop.sd <- 0.1     eff.add.sd <- 0.1   })   model({     KA <- TKA     CL <- TCL*exp(eta.cl)     V2  <- TV2*exp(eta.v)     Q   <- TQ     V3  <- TV3     Kin  <- TKin     Kout <- TKout     EC50 <- TEC50     C2 = centr/V2     C3 = peri/V3     d/dt(depot) = -KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri) = Q*C2 - Q*C3     d/dt(eff) = Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) = 1     C2 ~ prop(c2.prop.sd)     eff ~ add(eff.add.sd)   }) } mod1 <- mod1() mod2f <- rxode2(mod2f) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments summary(mod1$simulationModel) #> rxode2 4.0.0 model named rx_b93d36c2f7b408356cb40c2f24c5faf0 model (✔ ready).  #> DLL: /tmp/RtmpG60pcR/rxode2/rx_b93d36c2f7b408356cb40c2f24c5faf0__.rxd/rx_b93d36c2f7b408356cb40c2f24c5faf0_.so #> NULL #>  #> Calculated Variables: #> [1] \"C2\" \"C3\" #> ── rxode2 Model Syntax ── #> rxode2({ #>     param(KA, CL, V2, Q, V3, Kin, Kout, EC50) #>     C2 = centr/V2 #>     C3 = peri/V3 #>     d/dt(depot) = -KA * depot #>     d/dt(centr) = KA * depot - CL * C2 - Q * C2 + Q * C3 #>     d/dt(peri) = Q * C2 - Q * C3 #>     d/dt(eff) = Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>     eff(0) = 1 #> }) summary(mod1$simulationIniModel) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> rxode2 4.0.0 model named rx_ef025770652954d50c4f1051c49a6704 model (✔ ready).  #> DLL: /tmp/RtmpG60pcR/rxode2/rx_ef025770652954d50c4f1051c49a6704__.rxd/rx_ef025770652954d50c4f1051c49a6704_.so #> NULL #>  #> Calculated Variables: #> [1] \"C2\" \"C3\" #> ── rxode2 Model Syntax ── #> rxode2({ #>     param(KA, CL, V2, Q, V3, Kin, Kout, EC50) #>     KA = 0.3 #>     CL = 7 #>     V2 = 40 #>     Q = 10 #>     V3 = 300 #>     Kin = 0.2 #>     Kout = 0.2 #>     EC50 = 8 #>     C2 = centr/V2 #>     C3 = peri/V3 #>     d/dt(depot) = -KA * depot #>     d/dt(centr) = KA * depot - CL * C2 - Q * C2 + Q * C3 #>     d/dt(peri) = Q * C2 - Q * C3 #>     d/dt(eff) = Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>     eff(0) = 1 #> }) summary(mod2f$simulationModel) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> rxode2 4.0.0 model named rx_b55ab7e0261d756febd09b7d8266bb5b model (✔ ready).  #> DLL: /tmp/RtmpG60pcR/rxode2/rx_b55ab7e0261d756febd09b7d8266bb5b__.rxd/rx_b55ab7e0261d756febd09b7d8266bb5b_.so #> NULL #>  #> Calculated Variables: #>  [1] \"KA\"       \"CL\"       \"V2\"       \"Q\"        \"V3\"       \"Kin\"      #>  [7] \"Kout\"     \"EC50\"     \"C2\"       \"C3\"       \"ipredSim\" \"sim\"      #> ── rxode2 Model Syntax ── #> rxode2({ #>     param(TKA, TCL, TV2, TQ, TV3, TKin, TKout, TEC50, c2.prop.sd,  #>         eff.add.sd, eta.cl, eta.v) #>     KA = TKA #>     CL = TCL * exp(eta.cl) #>     V2 = TV2 * exp(eta.v) #>     Q = TQ #>     V3 = TV3 #>     Kin = TKin #>     Kout = TKout #>     EC50 = TEC50 #>     C2 = centr/V2 #>     C3 = peri/V3 #>     d/dt(depot) = -KA * depot #>     d/dt(centr) = KA * depot - CL * C2 - Q * C2 + Q * C3 #>     d/dt(peri) = Q * C2 - Q * C3 #>     d/dt(eff) = Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>     eff(0) = 1 #>     if (CMT == 5) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ C2 #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (rx_pred_f_ * c2.prop.sd)^2 #>         ipredSim = rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim = rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.C2, rx_lambda_,  #>             rx_yj_, rx_low_, rx_hi_) #>     } #>     if (CMT == 4) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ eff #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (eff.add.sd)^2 #>         ipredSim = rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim = rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.eff, rx_lambda_,  #>             rx_yj_, rx_low_, rx_hi_) #>     } #>     cmt(C2) #>     dvid(5, 4) #> }) summary(mod2f$simulationIniModel) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> rxode2 4.0.0 model named rx_e253c454cf9aab59175a702a0cdcbdea model (✔ ready).  #> DLL: /tmp/RtmpG60pcR/rxode2/rx_e253c454cf9aab59175a702a0cdcbdea__.rxd/rx_e253c454cf9aab59175a702a0cdcbdea_.so #> NULL #>  #> Calculated Variables: #>  [1] \"KA\"       \"CL\"       \"V2\"       \"Q\"        \"V3\"       \"Kin\"      #>  [7] \"Kout\"     \"EC50\"     \"C2\"       \"C3\"       \"ipredSim\" \"sim\"      #> ── rxode2 Model Syntax ── #> rxode2({ #>     param(TKA, TCL, TV2, TQ, TV3, TKin, TKout, TEC50, c2.prop.sd,  #>         eff.add.sd, eta.cl, eta.v) #>     rxerr.C2 = 1 #>     rxerr.eff = 1 #>     TKA = 0.3 #>     TCL = 7 #>     TV2 = 40 #>     TQ = 10 #>     TV3 = 300 #>     TKin = 0.2 #>     TKout = 0.2 #>     TEC50 = 8 #>     c2.prop.sd = 0.1 #>     eff.add.sd = 0.1 #>     eta.cl = 0 #>     eta.v = 0 #>     KA = TKA #>     CL = TCL * exp(eta.cl) #>     V2 = TV2 * exp(eta.v) #>     Q = TQ #>     V3 = TV3 #>     Kin = TKin #>     Kout = TKout #>     EC50 = TEC50 #>     C2 = centr/V2 #>     C3 = peri/V3 #>     d/dt(depot) = -KA * depot #>     d/dt(centr) = KA * depot - CL * C2 - Q * C2 + Q * C3 #>     d/dt(peri) = Q * C2 - Q * C3 #>     d/dt(eff) = Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>     eff(0) = 1 #>     if (CMT == 5) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ C2 #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (rx_pred_f_ * c2.prop.sd)^2 #>         ipredSim = rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim = rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.C2, rx_lambda_,  #>             rx_yj_, rx_low_, rx_hi_) #>     } #>     if (CMT == 4) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ eff #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (eff.add.sd)^2 #>         ipredSim = rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim = rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.eff, rx_lambda_,  #>             rx_yj_, rx_low_, rx_hi_) #>     } #>     cmt(C2) #>     dvid(5, 4) #> }) mod1 <- mod1$simulationModel  mod2 <- mod2f$simulationModel"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"increasing-rxode2-speed-by-multi-subject-parallel-solving","dir":"Articles","previous_headings":"","what":"Increasing rxode2 speed by multi-subject parallel solving","title":"Speeding up rxode2","text":"Using classic rxode2 model specification (can convert functional/ui model style) continue discussion rxode2 speed enhancements. rxode2 originally developed ODE solver allowed ODE solve single subject. flexibility still supported. original code rxode2 tutorial :","code":"library(rxode2)  library(microbenchmark) library(ggplot2)  mod1 <- rxode2({     C2 = centr/V2     C3 = peri/V3     d/dt(depot) = -KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri) = Q*C2 - Q*C3     d/dt(eff) = Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0) = 1 }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  ## Create an event table  ev <- et() %>%     et(amt=10000, addl=9,ii=12) %>%     et(time=120, amt=20000, addl=4, ii=24) %>%     et(0:240) ## Add Sampling  nsub <- 100 # 100 sub-problems sigma <- matrix(c(0.09,0.08,0.08,0.25),2,2) # IIV covariance matrix mv <- rxRmvn(n=nsub, rep(0,2), sigma) # Sample from covariance matrix CL <- 7*exp(mv[,1]) V2 <- 40*exp(mv[,2]) params.all <- cbind(KA=0.3, CL=CL, V2=V2, Q=10, V3=300,                     Kin=0.2, Kout=0.2, EC50=8)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"for-loop","dir":"Articles","previous_headings":"Increasing rxode2 speed by multi-subject parallel solving","what":"For Loop","title":"Speeding up rxode2","text":"slowest way code use loop. example enclose function compare timing.","code":"runFor <- function(){     res <- NULL     for (i in 1:nsub) {         params <- params.all[i,]         x <- mod1$solve(params, ev)         ##Store results for effect compartment         res <- cbind(res, x[, \"eff\"])     }     return(res) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"running-with-apply","dir":"Articles","previous_headings":"Increasing rxode2 speed by multi-subject parallel solving","what":"Running with apply","title":"Speeding up rxode2","text":"general R, apply types functions perform better loop, tutorial also suggests speed enhancement","code":"runSapply <- function(){     res <- apply(params.all, 1, function(theta)         mod1$run(theta, ev)[, \"eff\"]) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"run-using-a-single-threaded-solve","dir":"Articles","previous_headings":"Increasing rxode2 speed by multi-subject parallel solving","what":"Run using a single-threaded solve","title":"Speeding up rxode2","text":"can also rxode2 solve subject simultaneously without collecting results R, using single threaded solve. data output slightly different , still gives information:","code":"runSingleThread <- function(){   solve(mod1, params.all, ev, cores=1)[,c(\"sim.id\", \"time\", \"eff\")] }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"run-a-2-threaded-solve","dir":"Articles","previous_headings":"Increasing rxode2 speed by multi-subject parallel solving","what":"Run a 2 threaded solve","title":"Speeding up rxode2","text":"rxode2 supports multi-threaded solves, another option 2 threads (called cores solve options, can see options rxControl() rxSolve()).","code":"run2Thread <- function(){   solve(mod1, params.all, ev, cores=2)[,c(\"sim.id\", \"time\", \"eff\")] }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"compare-the-times-between-all-the-methods","dir":"Articles","previous_headings":"Increasing rxode2 speed by multi-subject parallel solving","what":"Compare the times between all the methods","title":"Speeding up rxode2","text":"Now moment truth, timings:  clear largest jump performance using solve method providing parameters rxode2 solve without looping subject either sapply. number cores/threads applied solve also plays role solving. can explore number threads following code:  can suite spot speed vs number cores. system type (mac, linux, windows /processor), complexity ODE solving number subjects may affect arbitrary number threads. 4 threads good number use without prior knowledge systems days least 4 threads (2 processors 4 threads).","code":"bench <- microbenchmark(runFor(), runSapply(), runSingleThread(),run2Thread()) print(bench) #> Unit: milliseconds #>               expr       min        lq      mean    median        uq       max #>           runFor() 418.51459 424.31513 433.53419 428.09444 432.12806 558.34948 #>        runSapply() 422.11127 427.06943 434.67782 430.47337 434.00959 555.12417 #>  runSingleThread()  32.06948  32.19434  32.69674  32.28352  32.53713  37.84987 #>       run2Thread()  20.55715  20.82316  21.82889  21.04126  21.47693  33.00517 #>  neval #>    100 #>    100 #>    100 #>    100 autoplot(bench) runThread <- function(n){     solve(mod1, params.all, ev, cores=n)[,c(\"sim.id\", \"time\", \"eff\")] }  bench <- eval(parse(text=sprintf(\"microbenchmark(%s)\",                                      paste(paste0(\"runThread(\", seq(1, 2 * rxCores()),\")\"),                                            collapse=\",\")))) print(bench) #> Unit: milliseconds #>          expr      min       lq     mean   median       uq      max neval #>  runThread(1) 32.07742 32.21341 32.75557 32.31367 32.45475 43.78705   100 #>  runThread(2) 20.61442 20.96926 22.41053 21.16925 22.05858 32.51423   100 #>  runThread(3) 22.28305 22.60272 23.70563 22.82156 25.54256 29.58011   100 #>  runThread(4) 22.34977 22.58850 22.98695 22.79710 23.01758 27.05105   100 autoplot(bench)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"increasing-speed-with-compiler-options","dir":"Articles","previous_headings":"","what":"Increasing speed with compiler options","title":"Speeding up rxode2","text":"One way allows faster ODE solving make approximations make math operators like exp() faster technically accurate enough follow IEEE standard math functions values (implications cover ). optimizations opt-Julia since compile everything session, CRAN conservative approach since individuals compile R function running . Still, rxode2 models can compiled option without disturbing CRAN policies. key set option. example:  Note compiler settings can tricky setup system wide Makevars may interact setting. example use ccache compile may produced options since cached options. example, github runner (generates page), advantage \"fast\" compile. However, development laptop minimal speed increase. probably check using . disabled default since minimum increase speed.","code":"# Using the first example subset to PK mod2f <- function() {   ini({     TKA   <- 0.3     TCL   <- 7     TV2   <- 40     TQ    <- 10     TV3   <- 300     TKin  <- 0.2     TKout <- 0.2     TEC50 <- 8     eta.cl + eta.v ~ c(0.09,                        0.08, 0.25)     c2.prop.sd <- 0.1   })   model({     KA <- TKA     CL <- TCL*exp(eta.cl)     V2  <- TV2*exp(eta.v)     Q   <- TQ     V3  <- TV3     Kin  <- TKin     Kout <- TKout     EC50 <- TEC50     C2 = centr/V2     C3 = peri/V3     d/dt(depot) = -KA*depot     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri) = Q*C2 - Q*C3     C2 ~ prop(c2.prop.sd)   }) }  mod2f <- mod2f()  mod2s <- mod2f$simulationIniModel #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  ev  <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, addl=9,ii=12,cmt=\"depot\") %>%   et(time=120, amt=2000, addl=4, ii=14, cmt=\"depot\") %>%   et(0:240) # Add sampling  bench1 <- microbenchmark(standardCompile=rxSolve(mod2s, ev, nSub=1000))  # Now clear the cache of models so we can change the compile options for the same model rxClean()  # Use withr to preserve the options withr::with_options(list(rxode2.compile.O=\"fast\"), {   mod2s <- mod2f$simulationIniModel }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  bench2 <- microbenchmark(fastCompile=rxSolve(mod2s, ev, nSub=1000))  bench <- rbind(bench1, bench2)  print(bench) #> Unit: milliseconds #>             expr      min       lq     mean   median       uq      max neval #>  standardCompile 337.1561 348.3376 415.6402 470.2739 479.8594 495.2299   100 #>      fastCompile 335.9027 348.9974 413.9555 468.9017 476.5653 483.9098   100  autoplot(bench)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"a-real-life-example","dir":"Articles","previous_headings":"","what":"A real life example","title":"Speeding up rxode2","text":"cBefore parallel solving implemented, fastest way run rxode2 lapply. Rik Schoemaker created data-set nlmixr comparisons, reduced run faster automatic building pkgdown website. applying new parallel solving concepts can simply run simulation less code faster: can see striking time difference two methods; things keep mind: rxode2 use thread-safe sitmo threefry routines simulation eta values. Therefore results expected different (also random samples taken different order different) prior simulation run R 3.5, different random number generator results simulation different actual nlmixr comparison using slower simulation. speed comparison used data.table. rxode2 uses data.table internally (available) try speed sorting, different installations data.table installed. can force rxode2 use order() sorting using forderForceBase(TRUE). case little difference two, though examples data.table’s presence leads speed increase (less likely lead slowdown).","code":"library(rxode2) library(data.table) #Define the rxode2 model   ode1 <- \"   d/dt(abs)    = -KA*abs;   d/dt(centr)  =  KA*abs-(CL/V)*centr;   C2=centr/V;   \"  #Create the rxode2 simulation object mod1 <- rxode2(model = ode1) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  #Population parameter values on log-scale   paramsl <- c(CL = log(4),                V = log(70),                KA = log(1)) #make 10,000 subjects to sample from:   nsubg <- 300 # subjects per dose   doses <- c(10, 30, 60, 120)   nsub <- nsubg * length(doses) #IIV of 30% for each parameter   omega <- diag(c(0.09, 0.09, 0.09))# IIV covariance matrix   sigma <- 0.2 #Sample from the multivariate normal   set.seed(98176247)   rxSetSeed(98176247)   library(MASS)   mv <-     mvrnorm(nsub, rep(0, dim(omega)[1]), omega) # Sample from covariance matrix #Combine population parameters with IIV   params.all <-     data.table(       \"ID\" = seq(1:nsub),       \"CL\" = exp(paramsl['CL'] + mv[, 1]),       \"V\" = exp(paramsl['V'] + mv[, 2]),       \"KA\" = exp(paramsl['KA'] + mv[, 3])     ) #set the doses (looping through the 4 doses) params.all[, AMT := rep(100 * doses,nsubg)]  Startlapply <- Sys.time()  #Run the simulations using lapply for speed   s = lapply(1:nsub, function(i) { #selects the parameters associated with the subject to be simulated     params <- params.all[i] #creates an eventTable with 7 doses every 24 hours     ev <- eventTable()     ev$add.dosing(       dose = params$AMT,       nbr.doses = 1,       dosing.to = 1,       rate = NULL,       start.time = 0     ) #generates 4 random samples in a 24 hour period     ev$add.sampling(c(0, sort(round(sample(runif(600, 0, 1440), 4) / 60, 2)))) #runs the rxode2 simulation     x <- as.data.table(mod1$run(params, ev)) #merges the parameters and ID number to the simulation output     x[, names(params) := params]   })  #runs the entire sequence of 100 subjects and binds the results to the object res   res = as.data.table(do.call(\"rbind\", s))  Stoplapply <- Sys.time()  print(Stoplapply - Startlapply) #> Time difference of 13.66193 secs rx <- rxode2({     CL =  log(4)     V = log(70)     KA = log(1)     CL = exp(CL + eta.CL)     V = exp(V + eta.V)     KA = exp(KA + eta.KA)     d/dt(abs)    = -KA*abs;     d/dt(centr)  =  KA*abs-(CL/V)*centr;     C2=centr/V; }) #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  omega <- lotri(eta.CL ~ 0.09,                eta.V ~ 0.09,                eta.KA ~ 0.09)  doses <- c(10, 30, 60, 120)   startParallel <- Sys.time() ev <- do.call(\"rbind\",         lapply(seq_along(doses), function(i){             et() %>%                 et(amt=doses[i]) %>% # Add single dose                 et(0) %>% # Add 0 observation                 ## Generate 4 samples in 24 hour period                 et(lapply(1:4, function(...){c(0, 24)})) %>%                 et(id=seq(1, nsubg) + (i - 1) * nsubg) %>%                 ## Convert to data frame to skip sorting the data                 ## When binding the data together                 as.data.frame         })) ## To better compare, use the same output, that is data.table res <- rxSolve(rx, ev, omega=omega, returnType=\"data.table\") endParallel <- Sys.time() print(endParallel - startParallel) #> Time difference of 0.1192756 secs"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"want-more-ways-to-run-multi-subject-simulations","dir":"Articles","previous_headings":"A real life example","what":"Want more ways to run multi-subject simulations","title":"Speeding up rxode2","text":"version since tutorial even ways run multi-subject simulations, including adding variability sampling dosing times et() (see rxode2 events information), ability supply omega sigma matrix well adding thetaMat R simulate uncertainty omega, sigma theta matrices; see rxode2 simulation vignette.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-speed.html","id":"session-information","dir":"Articles","previous_headings":"A real life example","what":"Session Information","title":"Speeding up rxode2","text":"session information:","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] MASS_7.3-65          data.table_1.17.8    ggplot2_3.5.2        #> [4] microbenchmark_1.5.0 rxode2_4.0.0         #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.10         generics_0.1.4      lattice_0.22-7      #>  [4] digest_0.6.37       magrittr_2.0.3      evaluate_1.0.4      #>  [7] grid_4.5.1          RColorBrewer_1.1-3  fastmap_1.2.0       #> [10] lotri_1.0.0.9000    jsonlite_2.0.0      rxode2ll_2.0.13     #> [13] backports_1.5.0     scales_1.4.0        lazyeval_0.2.2      #> [16] textshaping_1.0.1   jquerylib_0.1.4     RApiSerialize_0.1.4 #> [19] cli_3.6.5           rlang_1.1.6         symengine_0.2.10    #> [22] crayon_1.5.3        units_0.8-7         withr_3.0.2         #> [25] cachem_1.1.0        yaml_2.3.10         tools_4.5.1         #> [28] qs_0.27.3           memoise_2.0.1       checkmate_2.3.2     #> [31] dplyr_1.1.4         vctrs_0.6.5         R6_2.6.1            #> [34] lifecycle_1.0.4     fs_1.6.6            stringfish_0.16.0   #> [37] htmlwidgets_1.6.4   ragg_1.4.0          PreciseSums_0.7     #> [40] pkgconfig_2.0.3     desc_1.4.3          pkgdown_2.1.3       #> [43] RcppParallel_5.1.10 rex_1.2.1           pillar_1.11.0       #> [46] bslib_0.9.0         gtable_0.3.6        glue_1.8.0          #> [49] Rcpp_1.1.0          systemfonts_1.2.3   xfun_0.52           #> [52] tibble_3.3.0        tidyselect_1.2.1    sys_3.4.3           #> [55] knitr_1.50          farver_2.1.2        dparser_1.3.1-13    #> [58] htmltools_0.5.8.1   nlme_3.1-168        labeling_0.4.3      #> [61] rmarkdown_2.29      compiler_4.5.1"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-stiff.html","id":"stiff-odes-with-jacobian-specification","dir":"Articles","previous_headings":"","what":"Stiff ODEs with Jacobian Specification","title":"rxode2 Jacobian specification and Stiff Systems","text":"Occasionally, may come across stiff differential equation, differential equation numerically unstable small variations parameters cause different solutions ODEs. One way tackle choose stiff-solver, hybrid stiff solver (like default LSODA). Typically enough. However exact Jacobian solutions may increase stability ODE. (Note Jacobian derivative ODE specification respect variable). rxode2 can specify Jacobian df(state)/dy(variable)= statement. classic ODE stiff properties various conditions Van der Pol differential equations. rxode2 can specified following: stiff mu=1, mu=1000 stiff system easy enough , bit tedious. rxode2 setup appropriately, can use computer algebra system sympy calculate Jacobian automatically. done rxode2 option calcJac option:","code":"library(rxode2) ## rxode2 4.0.0 using 2 threads (see ?getRxThreads) ##   no cache: create with `rxCreateCache()` Vtpol2 <- function() {   ini({     mu <- 1 ## nonstiff; 10 moderately stiff; 1000 stiff   })   model({     d/dt(y)       <- dy     d/dt(dy)      <- mu*(1-y^2)*dy - y     ## Jacobian     df(y)/dy(dy)  <- 1     df(dy)/dy(y)  <- -2*dy*mu*y - 1     df(dy)/dy(dy) <- mu*(1-y^2)     ## Initial conditions     y(0)          <- 2     dy(0)         <- 0   }) }  et <- et(0, 10, length.out=200) %>%   et(amt=0)  s1 <- Vtpol2 %>%  solve(et, method=\"lsoda\") ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ print(s1) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ## mu  ##  1  ## -- Initial Conditions ($inits): -- ##  y dy  ##  2  0  ## -- First part of data (object): -- ## # A tibble: 200 x 3 ##     time     y      dy ##    <dbl> <dbl>   <dbl> ## 1 0       2     0      ## 2 0.0503  2.00 -0.0933 ## 3 0.101   1.99 -0.173  ## 4 0.151   1.98 -0.242  ## 5 0.201   1.97 -0.302  ## 6 0.251   1.95 -0.353  ## # i 194 more rows s2 <- Vtpol2 %>%  solve(c(mu=1000), et) ## i parameter labels from comments are typically ignored in non-interactive mode ## i Need to run with the source intact to parse comments ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ print(s2) ## -- Solved rxode2 object -- ## -- Parameters ($params): -- ##   mu  ## 1000  ## -- Initial Conditions ($inits): -- ##  y dy  ##  2  0  ## -- First part of data (object): -- ## # A tibble: 200 x 3 ##     time     y        dy ##    <dbl> <dbl>     <dbl> ## 1 0       2     0        ## 2 0.0503  2.00 -0.000667 ## 3 0.101   2.00 -0.000667 ## 4 0.151   2.00 -0.000667 ## 5 0.201   2.00 -0.000667 ## 6 0.251   2.00 -0.000667 ## # i 194 more rows Vtpol <- function() {   ini({     mu <- 1 ## nonstiff; 10 moderately stiff; 1000 stiff   })   model({     d/dt(y)       <- dy     d/dt(dy)      <- mu*(1-y^2)*dy - y     y(0)          <- 2     dy(0)         <- 0   }) }  Vtpol <- Vtpol()  # you can also use $symengineModelPrune if there is if/else blocks # that need to be converted: Vtpol <- rxode2(Vtpol$symengineModelNoPrune,  calcJac=TRUE) ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ ## > pruning branches (`if`/`else`)... ## v done ## > loading into symengine environment... ## v done ## > calculate jacobian ## [====|====|====|====|====|====|====|====|====|====] 0:00:00 ## using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ summary(Vtpol) ## rxode2 4.0.0 model named rx_b4738d962226b255b55b9570ae051150 model (ready).  ## DLL: /tmp/RtmpG60pcR/rxode2/rx_b4738d962226b255b55b9570ae051150__.rxd/rx_b4738d962226b255b55b9570ae051150_.so ## NULL ## -- rxode2 Model Syntax -- ## rxode2({ ##     cmt(y) ##     cmt(dy) ##     d/dt(y) = dy ##     d/dt(dy) = -y + mu * dy * (1 - Rx_pow_di(y, 2)) ##     y(0) = 2 ##     dy(0) = 0 ##     df(y)/dy(y) = 0 ##     df(dy)/dy(y) = -1 - 2 * y * mu * dy ##     df(y)/dy(dy) = 1 ##     df(dy)/dy(dy) = mu * (1 - Rx_pow_di(y, 2)) ##     df(y)/dy(mu) = 0 ##     df(dy)/dy(mu) = dy * (1 - Rx_pow_di(y, 2)) ## })"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"rxode2 ODE solving syntax","text":"briefly describes syntax used define models rxode2 translate R-callable compiled code. also describes communication variables R rxode2 modeling specification.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"creating-rxode2-models","dir":"Articles","previous_headings":"","what":"Creating rxode2 models","title":"rxode2 ODE solving syntax","text":"ODE-based model specification may coded inside four places: Inside rxode2({}) block statements: Inside rxode2(\"\") string statement: file name loaded rxode2: model function can parsed rxode2: block statement, character string text file internal rxode2 compilation manager translates ODE system C, compiles loads R session. call rxode2 produces object class rxode2 consists list-like structure (environment) various member functions. last type model (model function), call rxode2 creates parsed rxode2 ui can translated rxode2 compilation model. type function required nlmixr2 estimation can extended modified model piping. reason focused documentation.","code":"library(rxode2) mod <- rxode2({   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; }) mod <- rxode2(\"   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; \") writeLines(\"   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; \", \"modelFile.rxode2\") mod <- rxode2(filename='modelFile.rxode2') unlink(\"modelFile.rxode2\") mod <- function() {   model({     # simple assignment     C2 <- centr/V2      # time-derivative assignment     d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3;   }) }  mod <- rxode2(mod) # or simply mod() if the model is at the end of the function  # These model functions often have residual components and initial # (`ini({})`) conditions attached as well. For example the # theophylline model can be written as:  one.compartment <- function() {   ini({     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     tv <- 3.45    # Log V     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  # after parsing the model mod <- one.compartment() mod$simulationModel  # or mod$simulationIniModel"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"syntax","dir":"Articles","previous_headings":"","what":"Syntax","title":"rxode2 ODE solving syntax","text":"basic model specification consists one statements optionally terminated semi-colons ; optional comments (comments delimited # end--line). block statements set statements delimited curly braces, { ... }. Statements can either assignments, conditional /else /else, loops (can exited break), special statements, printing statements (debugging/testing). Assignment statements can : simple assignments, left hand identifier (.e., variable). includes string assignments special time-derivative assignments, left hand specifies change amount corresponding state variable (compartment) respect time e.g., d/dt(depot): special initial-condition assignments left hand specifies compartment initial condition specified, e.g. depot(0) = 0 special model event changes including bioavailability (f(depot)=1), lag time (alag(depot)=0), modeled rate (rate(depot)=2) modeled duration (dur(depot)=2). example model features event specification modeled infusions rxode2 data specification found rxode2 events vignette. special change point syntax, model times. model times specified mtime(var)=time special Jacobian-derivative assignments, left hand specifies change compartment ode respect variable. example, d/dt(y) = dy, Jacobian compartment can specified df(y)/dy(dy) = 1. may advantage obtaining solution specifying Jacobian stiff ODE systems. However, stiff systems tried LSODA, actually slightly slowed solving. Special string value declarations tell values string variable take within rxode2 solving structure. values cause factor created variable solving rxode2 model. , declared much way R, : labels() <- c(\"a1\", \"a2\"). Note assignment can done =, <- ~. assigning ~ operator, simple assignments time-derivative assignments output. Note rxode2 model functions assignment ~ can also overloaded residual distribution specification. Special statements can : Compartment declaration statements, can change default dosing compartment assumed compartment number(s) well add extra compartment names end (useful multiple-endpoint nlmixr models); specified cmt(compartmentName) Parameter declaration statements, can make sure input parameters certain order instead ordering parameters order parsed. useful keeping parameter order using 2 different ODE models. specified param(par1, par2,...) Variable interpolation statements, tells interpolation specific covariates. include locf(cov1,     cov2, ...) last observation carried forward, nocb(cov1,     cov2, ...) next observation carried backward, linear(cov1,     cov2, ...) linear interpolation midpoint(cov1, cov2,     ...) midpoint interpolation. example model shown : Expressions assignment statements can numeric logical. Numeric expressions can include following numeric operators +, -, *, /, ^ mathematical functions defined C R math libraries (e.g., fabs, exp, log, sin, abs). may also access R’s functions R math libraries, like lgammafn log gamma function. rxode2 syntax case-sensitive, .e., ABC different abc, Abc, ABc, etc.","code":"# simple assignment    C2 <- centr/V2     # time-derivative assignment    d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3;"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"identifiers","dir":"Articles","previous_headings":"Syntax","what":"Identifiers","title":"rxode2 ODE solving syntax","text":"Like R, Identifiers (variable names) may consist one alphanumeric, underscore _ period . characters, first character digit underscore _. Identifiers model specification can refer : State variables dynamic system (e.g., compartments pharmacokinetics model). Implied input variable, t (time), tlast (last time point), podo (oral dose, undocumented case absorption transit models). Special constants like pi R’s predefined constants. Model parameters (e.g., ka rate absorption, CL clearance, etc.) Others, created assignments part model specification; referred LHS (left-hand side) variable. Currently, rxode2 modeling language recognizes system state variables “parameters”, thus, values need passed R ODE model (e.g., age) either passed params argument integrator function rxSolve() supplied event data-set. certain variable names rxode2 event tables. avoid confusion, following event table-related items assigned, used state can accessed rxode2 code: cmt dvid addl ss amt dur rate Rprintf print printf id However following variables used model specification: evid ii Sometimes rxode2 generates variables fed back rxode2. Similarly, nlmixr2 generates variables used nlmixr estimation simulation. variables start either rx nlmixr prefixes. avoid problems, suggested use variables starting either rx nlmixr prefixes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"logical-operators","dir":"Articles","previous_headings":"","what":"Logical Operators","title":"rxode2 ODE solving syntax","text":"Logical operators support standard R operators ==, != >= <= > <. Like R can () () statements, ifelse() expressions. Additionally can standard assignment. instance, following valid: Notice can also use character expressions comparisons. convenience comes cost since character comparisons slower numeric expressions. Unlike R, .numeric .integer logical statements needed, cause syntax error try use function.","code":"cov1 = covm*(sexf == \"female\") + covm*(sexf != \"female\")"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"supported-functions","dir":"Articles","previous_headings":"","what":"Supported functions","title":"rxode2 ODE solving syntax","text":"supported functions rxode2 can seen rxSupportedFuns(). brief description built-functions following table: Note lag(cmt) = equivalent alag(cmt) = = lag(wt)","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"reserved-keywords","dir":"Articles","previous_headings":"","what":"Reserved keywords","title":"rxode2 ODE solving syntax","text":"reserved keywords rxode2 model. following table: Note rxFlag always output 11 calc_lhs since final variables calculated, though can tweak test certain parts rxode2 using flag.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"residual-functions-when-using-rxode2-functions","dir":"Articles","previous_headings":"","what":"Residual functions when using rxode2 functions","title":"rxode2 ODE solving syntax","text":"addition ~ hiding output certain types output, also used specify residual output endpoint input rxode2 model function (includes residual model({}) block). specifications form: Indicating variable var variable represents individual central tendencies model also represents compartment specification data-set. can also change compartment name using | syntax, : case var represents central tendency cmt represents compartment dvid specification.","code":"var ~ add(add.sd) var ~ add(add.sd) | cmt"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"transformations","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"Transformations","title":"rxode2 ODE solving syntax","text":"normal related distributions, can apply transformation sides using keywords/functions apply transformations. default likelihood transformations calculated untransformed scale. bounded variables like logit-normal probit-normal low high values defaulted 0 1 missing. models wish proportional model one transformation can replace standard deviation NA allow transformations, lnorm(), probitNorm() logitNorm() can combined variance stabilizing yeoJohnson() transformation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"normal-and-t-related-distributions","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"Normal and t-related distributions","title":"rxode2 ODE solving syntax","text":"normal t-related distributions, wanted keep ability use skewed distributions additive proportional t/cauchy-space, distributions specified differently comparison supported distributions within nlmixr2: Note normal t-related distributions nlmixr2 calculate cwres npde normal assumption help assess goodness fit model. Also note +dnorm() mostly testing purposes slow estimation procedure nlmixr2. suggest adding (except explicit testing). multiple endpoint models mix non-normal normal distributions, whole problem shifted log-likelihood method estimation nlmixr2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"notes-on-additive-proportional-models","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"Notes on additive + proportional models","title":"rxode2 ODE solving syntax","text":"two different ways specify additive proportional models, call combined1 combined2, way Monolix calls two distributions (avoid software differences naming). first, combined1, assumes additive proportional differences standard deviation scale, : y=f+(+b* f^c)*err second, combined2, assumes additive proportional differences combined variance scale: y=f+sqrt(a2+b2*f(2c))sqrt(^2+b^2 *f^(2c))*err default nlmixr2/rxode2 otherwise specified combined2 since mirrors adding 2 normal distributions statistics add variances (standard deviations). However, combined1 can describe data possibly even better combined2 possible options rxode2/nlmixr2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"distributions-of-known-likelihoods","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"Distributions of known likelihoods","title":"rxode2 ODE solving syntax","text":"residuals related normal, t-distribution cauchy, often residual specification form: compartment specification left handed side specification. generalized likelihood can specify:","code":"cmt ~ dbeta(alpha, beta) ll(cmt) ~ llik specification"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"ordinal-likelihoods","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"Ordinal likelihoods","title":"rxode2 ODE solving syntax","text":"Finally, ordinal likelihoods/simulations can specified 2 ways. first : err represents compartment p0 probability specific category: model ensure sum p values less 1. Additionally can write arbitrary number categories ordinal model described . seems little p0 probability category 1 sometimes scores non-whole numbers. can modeled follows: numeric categories specified explicitly, probabilities remain :","code":"err ~ c(p0, p1, p2) err ~ c(p0=0, p1=1, p2=2, 3)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"general-table-of-supported-residual-distributions","dir":"Articles","previous_headings":"Residual functions when using rxode2 functions","what":"General table of supported residual distributions","title":"rxode2 ODE solving syntax","text":"general supported following table (available rxode2::rxResidualError)","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"note-on-strings-in-rxode2","dir":"Articles","previous_headings":"","what":"Note on strings in rxode2","title":"rxode2 ODE solving syntax","text":"Strings converted double values inside rxode2, hence can refer integer corresponding string value string value . covariates calculated fly based data likely try , though aware. strings defined model, fixed used. example: also replaced : Since \"Med\" already defined wanted can pre-declare levels (order) give better control : can see number changed since declaration change numbers variable tAPGAR. levels() statements need declared variable occurs ensure numbering consistent declared.","code":"if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- \"High\"   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- \"Low\"   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- \"Med\"   } else {     tAPGAR<- \"Med\"   } if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- \"High\"   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- \"Low\"   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- \"Med\"   } else {     tAPGAR<- 3   } levels(tAPGAR) <- c(\"Med\", \"Low\", \"High\") if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- 3   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- 2   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- 1   } else {     tAPGAR<- 1   }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"bugs-andor-deficiencies","dir":"Articles","previous_headings":"Note on strings in rxode2","what":"Bugs and/or deficiencies","title":"rxode2 ODE solving syntax","text":"modulo operator %% currently unsupported.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"note","dir":"Articles","previous_headings":"Note on strings in rxode2","what":"Note","title":"rxode2 ODE solving syntax","text":"ODE specification mini-language parsed help open source tool , Plevyak (2015).","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"example-model","dir":"Articles","previous_headings":"Note on strings in rxode2","what":"Example model","title":"rxode2 ODE solving syntax","text":"commented example quickly show capabilities rxode2 syntax.","code":""},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"example","dir":"Articles","previous_headings":"Note on strings in rxode2","what":"Example","title":"rxode2 ODE solving syntax","text":"","code":"f <- function() {   ini({    })   model({     # An rxode2 model specification (this line is a comment).      if(comed==0) {  # concomitant medication (con-med)?       F <- 1.0     # full bioavailability w.o. con-med     } else {       F <- 0.80    # 20% reduced bioavailability     }      C2 <- centr/V2  # concentration in the central compartment     C3 <- peri/V3   # concentration in the peripheral compartment      # ODE describing the PK and PD      d/dt(depot) <- -KA*depot     d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                      Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff     eff(0)      <- 1   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-syntax.html","id":"interface-and-data-handling-between-r-and-the-generated-c-code","dir":"Articles","previous_headings":"Note on strings in rxode2","what":"Interface and data handling between R and the generated C code","title":"rxode2 ODE solving syntax","text":"Users specify variables dynamic system’s state variables via d/dt(identifier) operator part model specification, model parameters via params= argument rxode2 solve() method: values variables pre-specified time points saved model fitting/integration returned part fitted values (see function et(), define set time points capture values variables) returned part modeling output. ODE specification mini-language parsed help open source tool DParser, Plevyak (2015).","code":"m1 <- rxode2(model = ode, modName = \"m1\")  # model parameters -- a named vector is required theta <-    c(KA=0.29, CL=18.6, V2=40.2, Q=10.5, V3=297, Kin=1, Kout=1, EC50=200)  # state variables and their amounts at time 0 (the use of names is # encouraged, but not required) inits <- c(depot=0, centr=0, peri=0, eff=1)  # qd1 is an eventTable specification with a set of dosing and sampling # records (code not shown here)  solve(theta, event = qd1, inits = inits)"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-tutorials.html","id":"interactive-tutorials","dir":"Articles","previous_headings":"","what":"Interactive tutorials","title":"Interactive Tutorials","text":"rxode2 comes interactive tutorials can run R session; built Rstudio 1.3 can run R session :","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` ## rxode2 Syntax learnr::run_tutorial(\"rxode2-00-syntax\", \"rxode2\")  ## rxode2 event tables   learnr::run_tutorial(\"rxode2-00-events\", \"rxode2\")"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-wt.html","id":"creating-a-2-compartment-model-in-rxode2","dir":"Articles","previous_headings":"","what":"Creating a 2-compartment model in rxode2","title":"Weight Based Dosing in rxode2","text":"","code":"library(rxode2) #> rxode2 4.0.0 using 2 threads (see ?getRxThreads) #>   no cache: create with `rxCreateCache()` ## Note the time covariate is not included in the simulation m1 <- function() {   model({     CL ~ (1-0.2*SEX)*(0.807+0.00514*(CRCL-91.2))*exp(eta.cl)     V1 ~ 4.8*exp(eta.v1)     Q ~ (3.46+0.0593*(WT-75.1))*exp(eta.q);     V2 ~ 1.93*(3.13+0.0458*(WT-75.1))*exp(eta.v2)     A1 ~ centr;     A2 ~ peri;     d/dt(centr) <- - A1*(CL/V1 + Q/V1) + A2*Q/V2;     d/dt(peri) <- A1*Q/V1 - A2*Q/V2;     DV = centr / V1 * (1 + prop.err)   }) }"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-wt.html","id":"simulating-covariates","dir":"Articles","previous_headings":"","what":"Simulating Covariates","title":"Weight Based Dosing in rxode2","text":"simulation correlates age, sex, weight. Since using weight based dosing, needs simulated first","code":"set.seed(42) rxSetSeed(42) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union nsub=30 # Simulate Weight based on age and gender AGE<-round(runif(nsub,min=18,max=70)) SEX<-round(runif(nsub,min=0,max=1)) HTm<-round(rnorm(nsub,176.3,0.17*sqrt(4482)),digits=1) HTf<-round(rnorm(nsub,162.2,0.16*sqrt(4857)),digits=1) WTm<-round(exp(3.28+1.92*log(HTm/100))*exp(rnorm(nsub,0,0.14)),digits=1) WTf<-round(exp(3.49+1.45*log(HTf/100))*exp(rnorm(nsub,0,0.17)),digits=1) WT<-ifelse(SEX==1,WTf,WTm) CRCL<-round(runif(nsub,30,140)) ## id is in lower case to match the event table cov.df <- tibble(id=seq_along(AGE), AGE=AGE, SEX=SEX, WT=WT, CRCL=CRCL) print(cov.df) #> # A tibble: 30 x 5 #>       id   AGE   SEX    WT  CRCL #>    <int> <dbl> <dbl> <dbl> <dbl> #>  1     1    66     1  49.4    83 #>  2     2    67     1  52.5    79 #>  3     3    33     0  97.9    37 #>  4     4    61     1  63.8    66 #>  5     5    51     0  71.8   127 #>  6     6    45     1  69.6   132 #>  7     7    56     0  61      73 #>  8     8    25     0  57.7    47 #>  9     9    52     1  58.7    65 #> 10    10    55     1  73.1    64 #> # i 20 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-wt.html","id":"creating-weight-based-event-table","dir":"Articles","previous_headings":"","what":"Creating weight based event table","title":"Weight Based Dosing in rxode2","text":"","code":"s<-c(0,0.25,0.5,0.75,1,1.5,seq(2,24,by=1)) s <- lapply(s, function(x){.x <- 0.1 * x; c(x - .x, x + .x)})  e <- et() %>%     ## Specify the id and weight based dosing from covariate data.frame     ## This requires rxode2 XXX      et(id=cov.df$id, amt=6*cov.df$WT, rate=6 * cov.df$WT) %>%     ## Sampling is added for each ID     et(s) %>%     as.data.frame %>%     ## Merge the event table with the covarite information     merge(cov.df, by=\"id\") %>%     as_tibble   e #> # A tibble: 900 x 12 #>       id    low  time   high cmt         amt  rate  evid   AGE   SEX    WT  CRCL #>    <int>  <dbl> <dbl>  <dbl> <chr>     <dbl> <dbl> <int> <dbl> <dbl> <dbl> <dbl> #>  1     1  0     0      0     (obs)       NA    NA      0    66     1  49.4    83 #>  2     1 NA     0     NA     (default)  296.  296.     1    66     1  49.4    83 #>  3     1  0.225 0.247  0.275 (obs)       NA    NA      0    66     1  49.4    83 #>  4     1  0.45  0.520  0.55  (obs)       NA    NA      0    66     1  49.4    83 #>  5     1  0.675 0.701  0.825 (obs)       NA    NA      0    66     1  49.4    83 #>  6     1  0.9   0.948  1.1   (obs)       NA    NA      0    66     1  49.4    83 #>  7     1  1.35  1.36   1.65  (obs)       NA    NA      0    66     1  49.4    83 #>  8     1  1.8   1.93   2.2   (obs)       NA    NA      0    66     1  49.4    83 #>  9     1  2.7   2.95   3.3   (obs)       NA    NA      0    66     1  49.4    83 #> 10     1  3.6   3.69   4.4   (obs)       NA    NA      0    66     1  49.4    83 #> # i 890 more rows"},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-wt.html","id":"solving-daptomycin-simulation","dir":"Articles","previous_headings":"","what":"Solving Daptomycin simulation","title":"Weight Based Dosing in rxode2","text":"","code":"data <- rxSolve(m1, e,              ## Lotri uses lower-triangular matrix rep. for named matrix              omega=lotri(eta.cl ~ .306,                           eta.q ~0.0652,                          eta.v1 ~.567,                          eta.v2 ~ .191),              sigma=lotri(prop.err ~ 0.15),              addDosing = TRUE, addCov = TRUE) #> i parameter labels from comments are typically ignored in non-interactive mode #> i Need to run with the source intact to parse comments #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ print(data) #> -- Solved rxode2 object -- #> -- Parameters ($params): -- #> # A tibble: 30 x 5 #>    id    eta.cl  eta.v1      eta.q  eta.v2 #>    <fct>  <dbl>   <dbl>      <dbl>   <dbl> #>  1 1      0.343 -1.25   -0.0936    -0.253  #>  2 2      0.444 -0.0581  0.187      0.233  #>  3 3      0.142  0.203   0.0617     1.03   #>  4 4      0.274 -0.733  -0.0000116 -0.321  #>  5 5      0.505 -0.104  -0.406     -0.518  #>  6 6      0.472  1.48   -0.537      0.210  #>  7 7      0.156 -0.0295  0.112     -0.226  #>  8 8     -0.747  0.519  -0.347      0.476  #>  9 9      0.326 -0.373   0.340      0.470  #> 10 10     0.428 -1.28    0.131     -0.0240 #> # i 20 more rows #> -- Initial Conditions ($inits): -- #> centr  peri  #>     0     0  #> -- First part of data (object): -- #> # A tibble: 900 x 12 #>      id  evid   cmt   amt  rate  time    DV centr  peri   SEX    WT  CRCL #>   <int> <int> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     1     1     1  296.  296. 0       0     0    0        1  49.4    83 #> 2     1     0    NA   NA    NA  0       0     0    0        1  49.4    83 #> 3     1     0    NA   NA    NA  0.247  41.4  58.8  9.50     1  49.4    83 #> 4     1     0    NA   NA    NA  0.520  31.2 101.  34.5      1  49.4    83 #> 5     1     0    NA   NA    NA  0.701  70.6 121.  55.5      1  49.4    83 #> 6     1     0    NA   NA    NA  0.948  83.3 142.  86.7      1  49.4    83 #> # i 894 more rows plot(data, log=\"y\") #> Warning in transformation$transform(x): NaNs produced #> Warning in ggplot2::scale_y_log10(..., breaks = breaks, minor_breaks = #> minor_breaks, : log-10 transformation introduced infinite #> values."},{"path":"https://nlmixr2.github.io/rxode2/articles/rxode2-wt.html","id":"daptomycin-reference","dir":"Articles","previous_headings":"","what":"Daptomycin Reference","title":"Weight Based Dosing in rxode2","text":"weight-based simulation adapted Daptomycin article : Dvorchik B, Arbeit RD, Chung J, Liu S, Knebel W, Kastrissios H. Population pharmacokinetics daptomycin. Antimicrob Agents Che mother 2004; 48: 2799-2807. doi:(10.1128/AAC.48.8.2799-2807.2004)[https://dx.doi.org/10.1128%2FAAC.48.8.2799-2807.2004] simulation example made available work Sherwin Sy modifications Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Matthew L. Fidler (core team/developer/manual) Melissa Hallow (tutorial writer) Wenping Wang (core team/developer)","code":""},{"path":"https://nlmixr2.github.io/rxode2/authors.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Authors","text":"Zufar Mulyukov – Wrote initial version rxShiny() modifications Matthew Fidler Alan Hindmarsh – Lsoda author Awad H. Al-Mohy – Al-Mohy matrix exponential author Ernst Hairer – dop853 author Gerhard Wanner – dop853 author Goro Fuji – Timsort author Hadley Wickham – Author original findLhs RxODE, also original author .s3register (used permission anyone, changed Matthew Fidler) Jack Dongarra – LApack author Linda Petzold – LSODA Martin Maechler – expm author, used routines inductive linearization Morwenn – Timsort author Nicholas J. Higham – Author Al-mohy matrix exponential Roger B. Sidje – expokit matrix exponential author Simon Frost – thread safe C implementation liblsoda Kevin Ushey – Original author fast factor, modified Matthew Filder Yu Feng – thread safe liblsoda Cleve Moler – LApack author David Cooley – Author fast_factor modified now used RxODE quickly create factors IDs without sorting like R Drew Schmidt – Drew Schmidt author edits exponential matrix utility taken R package expm Matt Dowle & Arun Srinivasan – data.table authors openMp framework based upon","code":""},{"path":"https://nlmixr2.github.io/rxode2/authors.html","id":"rxode-acknowledgments","dir":"","previous_headings":"","what":"RxODE acknowledgments:","title":"Authors","text":"Sherwin Sy – Weight based dosing example Justin Wilkins – Documentation updates, logo testing Emma Schwager – R IJK distribution author J Coligne – dop853 fortran author Bill Denney – Documentation updates, manual minor bug fixes Tim Waterhouse – Fixed one bug mac working directories Richard Upton – Helped solving ADVAN linCmt() solutions Dirk Eddelbuettel – Made fixes Rcpp changes require R strict headers Ross Ihaka – R author Robert Gentleman – R author R core team – R authors","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Facilities for Simulating from ODE-Based Models","text":"rxode2 R package solving simulating ode-based models. models convert rxode2 mini-language C create compiled dll fast solving. ODE solving using rxode2 key parts: rxode2() creates C code fast ODE solving based simple syntax related Leibnitz notation. NONMEM deSolve compatible data frame, created et() eventTable() easy simulation events data frame can augmented adding time-varying adding individual covariates (iCov= needed) multiple subject data, may parallelized. single subject output data frame adaptive Covariances metrics uncertanty can used simulate solving","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilities for Simulating from ODE-Based Models","text":"can install released version rxode2 CRAN : fastest way install development version rxode2 use r-universe service. service compiles binaries development version MacOS Windows don’t wait package compilation: doesn’t work install development version rxode2 build models rxode2, need working c compiler. use parallel threaded solving rxode2, c compiler needs support open-mp. can check see R working c compiler can check : toolchain, can set described platform information :","code":"install.packages(\"rxode2\") install.packages(c(\"dparser\", \"rxode2ll\", \"rxode2\"),                  repos=c(nlmixr2=\"https://nlmixr2.r-universe.dev\",                          CRAN=\"https://cloud.r-project.org\")) devtools::install_github(\"nlmixr2/rxode2ll\") devtools::install_github(\"nlmixr2/rxode2\") ## install.packages(\"pkgbuild\") pkgbuild::has_build_tools(debug = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"windows","dir":"","previous_headings":"Installation","what":"Windows","title":"Facilities for Simulating from ODE-Based Models","text":"windows may simply use installr install rtools: Alternatively can download install rtools directly.","code":"install.packages(\"installr\") library(installr) install.rtools()"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"mac-osx","dir":"","previous_headings":"Installation","what":"Mac OSX","title":"Facilities for Simulating from ODE-Based Models","text":"get speed need OpenMP enabled compile rxode2 compiler. various options date discussion likely data.table installation FAQ MacOS. last thing keep mind rxode2 uses code similar original lsoda requires gfortran compiler setup well OpenMP compilers. going using rxode2 nlmixr together older mac computer, suggest trying following: crashes R session binary work Mac machine. able run nlmixr, need compile package manually. proceed assuming homebrew installed system. system terminal need install dependencies compile symengine: installing dependencies, need re-install symengine:","code":"library(symengine) brew install cmake gmp mpfr libmpc install.packages(\"symengine\", type=\"source\") library(symengine)"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"linux","dir":"","previous_headings":"Installation","what":"Linux","title":"Facilities for Simulating from ODE-Based Models","text":"install linux make sure install gcc (openmp support) gfortran using distribution’s package manager. also install system dependencies like udunits symengine dependencies complete installation work linux. also done system packages package manager add appropriate repositories. point r2u project.","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"r-versions-40-and-41","dir":"","previous_headings":"Installation","what":"R versions 4.0 and 4.1","title":"Facilities for Simulating from ODE-Based Models","text":"installation R versions 4.0.x 4.1.x, please see instructions install symengine nlmixr2 installation instructions: https://github.com/nlmixr2/nlmixr2#r-package-installation","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Facilities for Simulating from ODE-Based Models","text":"Since development version rxode2 uses StanHeaders, need make sure compiler setup support C++14, described rstan setup page. R 4.0, believe requires modifying windows toolchain longer (much easier setup). C++ toolchain setup appropriately, can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"nlmixr2/rxode2ll\") devtools::install_github(\"nlmixr2/rxode2\")"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"illustrated-example","dir":"","previous_headings":"","what":"Illustrated Example","title":"Facilities for Simulating from ODE-Based Models","text":"model equations can specified text string, model file R expression. differential algebraic equations permitted. Differential equations specified d/dt(var_name) =. equation can separated semicolon. load rxode2 package compile model: Model parameters may specified ini({}) model block, initial conditions can specified within model cmt(0)= X, like model eff(0) <- 1. may also specify subject variability initial conditions residual error components just like nlmixr2. allows single interface nlmixr2/rxode2 models. Also note, classic rxode2 interface still works just like past (don’t worry breaking code time). fact, can get classic rxode2 model $simulationModel ui object:","code":"library(rxode2) #> rxode2 3.0.4.9000 using 8 threads (see ?getRxThreads)  mod1 <- function() {   ini({     # central      KA=2.94E-01     CL=1.86E+01     V2=4.02E+01     # peripheral     Q=1.05E+01     V3=2.97E+02     # effects     Kin=1     Kout=1     EC50=200    })   model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <- Q*C2 - Q*C3     eff(0) <- 1     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff   }) } mod1 <- mod1() # create the ui object (can also use `rxode2(mod1)`) mod1  summary(mod1$simulationModel)"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"specify-dosing-and-sampling-in-rxode2","dir":"","previous_headings":"","what":"Specify Dosing and sampling in rxode2","title":"Facilities for Simulating from ODE-Based Models","text":"rxode2 provides simple flexible way specify dosing sampling functions generate event table. First, empty event table generated “et()” function. interface similar NONMEM event tables: can see code, can dose compartment named rxode2 model. slight deviation NONMEM can reduce need compartment renumbering. events can also combined expanded (multi-subject events complex regimens) rbind, c, seq, rep. information creating complex dosing regimens using rxode2 see rxode2 events vignette.","code":"ev  <- et(amountUnits=\"mg\", timeUnits=\"hours\") %>%   et(amt=10000, addl=9,ii=12,cmt=\"depot\") %>%   et(time=120, amt=2000, addl=4, ii=14, cmt=\"depot\") %>%   et(0:240) # Add sampling"},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"solving-odes","dir":"","previous_headings":"","what":"Solving ODEs","title":"Facilities for Simulating from ODE-Based Models","text":"ODE can now solved using rxSolve: returns modified data frame. can see compartment values plot :  ,  Note labels automatically labeled units initial event table. rxode2 extracts units label plot (present).","code":"x <- mod1 %>% rxSolve(ev) #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> → creating rxode2 include directory #> → getting R compile options #> → precompiling headers #> ✔ done #> using C compiler: 'gcc.exe (GCC) 14.2.0' x #> ── Solved rxode2 object ── #> ── Parameters (x$params): ── #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #> ── Initial Conditions (x$inits): ── #> depot centr  peri   eff  #>     0     0     0     1  #> ── First part of data (object): ── #> # A tibble: 241 × 7 #>   time    C2    C3  depot centr  peri   eff #>    [h] <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1    0   0   0     10000     0     0   1    #> 2    1  44.4 0.920  7453. 1784.  273.  1.08 #> 3    2  54.9 2.67   5554. 2206.  794.  1.18 #> 4    3  51.9 4.46   4140. 2087. 1324.  1.23 #> 5    4  44.5 5.98   3085. 1789. 1776.  1.23 #> 6    5  36.5 7.18   2299. 1467. 2132.  1.21 #> # ℹ 235 more rows library(ggplot2) plot(x,C2) + ylab(\"Central Concentration\") plot(x,eff)  + ylab(\"Effect\")"},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"ode-solving","dir":"","previous_headings":"","what":"ODE solving","title":"Facilities for Simulating from ODE-Based Models","text":"brief comparison pharmacometric ODE solving R packages rxode2. several R packages differential equations. popular deSolve. However pharmacometrics-specific ODE solving, 2 packages rxode2 released CRAN. uses compiled code faster ODE solving. mrgsolve, uses C++ lsoda solver solve ODE systems. user required write hybrid R/C++ code create mrgsolve model translated C++ solving. contrast, rxode2 R-like mini-language parsed C code solves ODE system. Unlike rxode2, mrgsolve currently support symbolic manipulation ODE systems, like automatic Jacobian calculation forward sensitivity calculation (rxode2 currently supports basis nlmixr2’s FOCEi algorithm) dMod, uses unique syntax create “reactions”. reactions create underlying ODEs created c code compiled deSolve model. contrast rxode2 defines ODE systems lower level. rxode2’s parsing mini-language comes C, whereas dMod’s parsing comes R. Like rxode2, dMod supports symbolic manipulation ODE systems calculates forward sensitivities adjoint sensitivities systems. Unlike rxode2, dMod thread-safe since deSolve yet thread-safe. PKPDsim defines models R-like syntax converts system compiled code. Like mrgsolve, PKPDsim currently support symbolic manipulation ODE systems. PKPDsim thread-safe. open pharmacometrics open source community fairly friendly, rxode2 maintainers positive interactions ODE-solving pharmacometric projects listed.","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"pk-solved-systems","dir":"","previous_headings":"","what":"PK Solved systems","title":"Facilities for Simulating from ODE-Based Models","text":"rxode2 supports 1-3 compartment models gradients (using stan math’s auto-differentiation). currently uses equations PKADVAN allow time-varying covariates. rxode2 can mix ODEs solved systems.","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"the-following-packages-for-solved-pk-systems-are-on-cran","dir":"","previous_headings":"PK Solved systems","what":"The following packages for solved PK systems are on CRAN","title":"Facilities for Simulating from ODE-Based Models","text":"mrgsolve currently 1-2 compartment (poly-exponential models) models built-. solved systems ODEs currently mixed. pmxTools currently 1-3 compartment (super-positioning) models built-. R-implementation. PKPDsim uses 1-3 “ADVAN” solutions using non-superpositioning. PKPDmodels one-compartment model gradients.","code":""},{"path":"https://nlmixr2.github.io/rxode2/index.html","id":"non-cran-libraries","dir":"","previous_headings":"PK Solved systems","what":"Non-CRAN libraries:","title":"Facilities for Simulating from ODE-Based Models","text":"PKADVAN Provides 1-3 compartment models using non-superpositioning. allows time-varying covariates.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":null,"dir":"Reference","previous_headings":"","what":"Exponential Linear Unit (ELU) Activation Function — ELU","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"Exponential Linear Unit (ELU) Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"","code":"ELU(x, alpha = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"x numeric vector. elements must finite non-missing. alpha numeric scalar. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"numeric vector ReLU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exponential Linear Unit (ELU) Activation Function — ELU","text":"","code":"ELU(c(-1, 0, 1, 2), 2) #> [1] -1.264241  0.000000  1.000000  2.000000  # Can also be used in rxode2: x <- rxode2({    r=SELU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> Warning:  #> with negative times, compartments initialize at first negative observed time #> with positive times, compartments initialize at time zero #> use 'rxSetIni0(FALSE)' to initialize at first observed time #> this warning is displayed once per session #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1 -1.11 #> 2     0  0    #> 3     1  1.05 #> 4     2  2.10"},{"path":"https://nlmixr2.github.io/rxode2/reference/GELU.html","id":null,"dir":"Reference","previous_headings":"","what":"GELU activation function — GELU","title":"GELU activation function — GELU","text":"GELU activation function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/GELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GELU activation function — GELU","text":"","code":"GELU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/GELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GELU activation function — GELU","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/GELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GELU activation function — GELU","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/GELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GELU activation function — GELU","text":"","code":"GELU(c(-2, -1, 0, 1, 2)) #> [1] -0.04550026 -0.15865525  0.00000000  0.84134475  1.95449974  # you can use rxode2 as well r <- rxode2({   r = GELU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ et <- et(c(-2, -1, 0, 1, 2)) rxSolve(r, et) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 5 × 2 #>    time       r #>   <dbl>   <dbl> #> 1    -2 -0.0455 #> 2    -1 -0.159  #> 3     0  0      #> 4     1  0.841  #> 5     2  1.95"},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Parametric ReLU Activation Function — PReLU","title":"Parametric ReLU Activation Function — PReLU","text":"Parametric ReLU Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parametric ReLU Activation Function — PReLU","text":"","code":"PReLU(x, alpha = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parametric ReLU Activation Function — PReLU","text":"x numeric vector. elements must finite non-missing. alpha numeric scalar. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parametric ReLU Activation Function — PReLU","text":"numeric vector ReLU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parametric ReLU Activation Function — PReLU","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/PReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parametric ReLU Activation Function — PReLU","text":"","code":"PReLU(c(-1, 0, 1, 2), 2) #> [1] -2  0  1  2  # Can also be used in rxode2: x <- rxode2({    r=PReLU(time, 2) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1    -2 #> 2     0     0 #> 3     1     1 #> 4     2     2"},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Rectified Linear Unit (ReLU) Activation Function — ReLU","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"function applies Rectified Linear Unit (ReLU) activation function input numeric vector. ReLU function defined positive part argument: \\(f(x) = max(0, x)\\).","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"","code":"ReLU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"numeric vector ReLU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rectified Linear Unit (ReLU) Activation Function — ReLU","text":"","code":"ReLU(c(-1, 0, 1, 2)) #> [1] 0 0 1 2  # Can also be used in rxode2: x <- rxode2({    r=ReLU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1     0 #> 2     0     0 #> 3     1     1 #> 4     2     2"},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"Scaled Exponential Linear Unit (SELU) Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"","code":"SELU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"numeric vector ReLU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/SELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaled Exponential Linear Unit (SELU) Activation Function — SELU","text":"","code":"SELU(c(-1, 0, 1, 2)) #> [1] -1.111331  0.000000  1.050701  2.101402  # Can also be used in rxode2: x <- rxode2({    r=SELU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1 -1.11 #> 2     0  0    #> 3     1  1.05 #> 4     2  2.10"},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch Activation Function — Swish","title":"Switch Activation Function — Swish","text":"switch activation function defined :","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch Activation Function — Swish","text":"","code":"Swish(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch Activation Function — Swish","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch Activation Function — Swish","text":"numeric vector ReLU function applied element x.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Switch Activation Function — Swish","text":"$$f(x) = x \\cdot \\text{sigmoid}(x)$$","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Switch Activation Function — Swish","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/Swish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch Activation Function — Swish","text":"","code":"Swish(c(-1, 0, 1, 2)) #> [1] -0.2689414  0.0000000  0.7310586  1.7615942  # Can also be used in rxode2: x <- rxode2({    r<- Swish(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time      r #>   <dbl>  <dbl> #> 1    -1 -0.269 #> 2     0  0     #> 3     1  0.731 #> 4     2  1.76"},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":null,"dir":"Reference","previous_headings":"","what":"Add dosing to eventTable — add.dosing","title":"Add dosing to eventTable — add.dosing","text":"adds dosing event event table.  provided piping syntax magrittr.  can also accessed eventTable$add.dosing(...)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add dosing to eventTable — add.dosing","text":"","code":"add.dosing(   eventTable,   dose,   nbr.doses = 1L,   dosing.interval = 24,   dosing.to = 1L,   rate = NULL,   amount.units = NA_character_,   start.time = 0,   do.sampling = FALSE,   time.units = NA_character_,   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add dosing to eventTable — add.dosing","text":"eventTable eventTable object; accessed object eventTable$ dose numeric scalar, dose amount amount.units; nbr.doses integer, number doses; dosing.interval required numeric scalar, time doses time.units, defaults 24 time.units=\"hours\"; dosing.integer, compartment dose goes (first compartment default); rate infusions, rate infusion (default NULL, bolus dosing; amount.units optional string indicating dosing units. Defaults NA indicate per original EventTable definition. start.time required dosing start time; .sampling logical, observation sampling records added dosing times? Defaults FALSE. time.units optional string indicating time units. Defaults \"hours\" indicate per original EventTable definition. ... parameters passed et().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add dosing to eventTable — add.dosing","text":"eventTable updated dosing (note event table updated anyway)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add dosing to eventTable — add.dosing","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add dosing to eventTable — add.dosing","text":"Matthew L. Fidler Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.dosing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add dosing to eventTable — add.dosing","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sampling to eventTable — add.sampling","title":"Add sampling to eventTable — add.sampling","text":"adds dosing event event table.  provided piping syntax magrittr.  can also accessed eventTable$add.sampling()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sampling to eventTable — add.sampling","text":"","code":"add.sampling(eventTable, time, time.units = NA)"},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sampling to eventTable — add.sampling","text":"eventTable eventTable object. accessed object eventTable$ time vector time values (time.units). time.units optional string specifying time units. Defaults units specified EventTable initialized.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sampling to eventTable — add.sampling","text":"eventTable updated sampling.  (Note event table updated even reassign eventTable)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add sampling to eventTable — add.sampling","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add sampling to eventTable — add.sampling","text":"Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/add.sampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sampling to eventTable — add.sampling","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.et.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce object to data.frame — as.et","title":"Coerce object to data.frame — as.et","text":"Coerce object data.frame","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.et.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce object to data.frame — as.et","text":"","code":"as.et(x, ...)  # Default S3 method as.et(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.et.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce object to data.frame — as.et","text":"x Object coerce et. ... parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.et.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce object to data.frame — as.et","text":"event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn into an ini block for initialization — as.ini","title":"Turn into an ini block for initialization — as.ini","text":"Turn ini block initialization","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn into an ini block for initialization — as.ini","text":"","code":"as.ini(x)  # S3 method for class 'character' as.ini(x)  # S3 method for class 'data.frame' as.ini(x)  # S3 method for class 'call' as.ini(x)  # S3 method for class 'lotriFix' as.ini(x)  # S3 method for class 'matrix' as.ini(x)  # Default S3 method as.ini(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn into an ini block for initialization — as.ini","text":"x Item convert rxode2/nlmixr2 ui ini expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn into an ini block for initialization — as.ini","text":"rxode2 ini expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turn into an ini block for initialization — as.ini","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.ini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn into an ini block for initialization — as.ini","text":"","code":"ini <- quote(ini({   tka <- log(1.57)   tcl <- log(2.72)   tv <- log(31.5)   eta.ka ~ 0.6   eta.cl ~ 0.3   eta.v ~ 0.1   add.sd <- 0.7 }))  as.ini(ini) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- 0.7 #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  l <- quote(lotri({   tka <- log(1.57)   tcl <- log(2.72)   tv <- log(31.5)   eta.ka ~ 0.6   eta.cl ~ 0.3   eta.v ~ 0.1   add.sd <- 0.7  }))  as.ini(l) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- 0.7 #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  m <- lotri({    eta.ka ~ 0.6    eta.cl ~ 0.3    eta.v ~ 0.1 })  as.ini(m) #> ini({ #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  one.compartment <- function() {   ini({     tka <- log(1.57)     tcl <- log(2.72)     tv <- log(31.5)     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  as.ini(one.compartment) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- c(0, 0.7) #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  ui <- one.compartment()  as.ini(ui) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- c(0, 0.7) #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  ui$iniDf #>   ntheta neta1 neta2   name lower       est upper   fix label backTransform #> 1      1    NA    NA    tka  -Inf 0.4510756   Inf FALSE  <NA>          <NA> #> 2      2    NA    NA    tcl  -Inf 1.0006319   Inf FALSE  <NA>          <NA> #> 3      3    NA    NA     tv  -Inf 3.4499875   Inf FALSE  <NA>          <NA> #> 4      4    NA    NA add.sd     0 0.7000000   Inf FALSE  <NA>          <NA> #> 5     NA     1     1 eta.ka  -Inf 0.6000000   Inf FALSE  <NA>          <NA> #> 6     NA     2     2 eta.cl  -Inf 0.3000000   Inf FALSE  <NA>          <NA> #> 7     NA     3     3  eta.v  -Inf 0.1000000   Inf FALSE  <NA>          <NA> #>   condition  err #> 1      <NA> <NA> #> 2      <NA> <NA> #> 3      <NA> <NA> #> 4        cp  add #> 5        id <NA> #> 6        id <NA> #> 7        id <NA>  as.ini(ui$iniDf) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- c(0, 0.7) #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  ini <- c(\"ini({\",           \"tka <- log(1.57)\",           \"tcl <- log(2.72)\",           \"tv <- log(31.5)\",           \"eta.ka ~ 0.6\",           \"eta.cl ~ 0.3\",           \"eta.v ~ 0.1\",           \"add.sd <- 0.7\",           \"})\")  as.ini(ini) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- 0.7 #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })  ini <- paste(ini, collapse=\"\\n\")  as.ini(ini) #> ini({ #>     tka <- 0.451075619360217 #>     tcl <- 1.00063188030791 #>     tv <- 3.44998754583159 #>     add.sd <- 0.7 #>     eta.ka ~ 0.6 #>     eta.cl ~ 0.3 #>     eta.v ~ 0.1 #> })"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn into a model expression — as.model","title":"Turn into a model expression — as.model","text":"Turn model expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn into a model expression — as.model","text":"","code":"as.model(x)  # S3 method for class 'character' as.model(x)  # S3 method for class 'call' as.model(x)  # S3 method for class 'list' as.model(x)  # Default S3 method as.model(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn into a model expression — as.model","text":"x item convert model({}) expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn into a model expression — as.model","text":"model expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turn into a model expression — as.model","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn into a model expression — as.model","text":"","code":"model <- quote(model({   ka <- exp(tka + eta.ka)   cl <- exp(tcl + eta.cl)   v <- exp(tv + eta.v)   d/dt(depot) = -ka * depot   d/dt(center) = ka * depot - cl / v * center   cp = center / v   cp ~ add(add.sd) }))   as.model(model) #> model({ #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     d/dt(depot) = -ka * depot #>     d/dt(center) = ka * depot - cl/v * center #>     cp = center/v #>     cp ~ add(add.sd) #> })  one.compartment <- function() {   ini({     tka <- log(1.57)     tcl <- log(2.72)     tv <- log(31.5)     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  as.model(one.compartment) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> model({ #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     d/dt(depot) = -ka * depot #>     d/dt(center) = ka * depot - cl/v * center #>     cp = center/v #>     cp ~ add(add.sd) #> })   ui <- one.compartment()  as.model(ui) #> model({ #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     d/dt(depot) = -ka * depot #>     d/dt(center) = ka * depot - cl/v * center #>     cp = center/v #>     cp ~ add(add.sd) #> })  model <- c(\"model({\",            \"ka <- exp(tka + eta.ka)\",            \"cl <- exp(tcl + eta.cl)\",            \"v <- exp(tv + eta.v)\",            \"d/dt(depot) = -ka * depot\",            \"d/dt(center) = ka * depot - cl / v * center\",            \"cp = center / v\",            \"cp ~ add(add.sd)\",            \"})\")  as.model(model) #> model({ #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     d/dt(depot) = -ka * depot #>     d/dt(center) = ka * depot - cl/v * center #>     cp = center/v #>     cp ~ add(add.sd) #> })  model <- paste(model, collapse=\"\\n\")  as.model(model) #> model({ #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> })"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":null,"dir":"Reference","previous_headings":"","what":"As rxode2 ui — as.rxUi","title":"As rxode2 ui — as.rxUi","text":"rxode2 ui","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As rxode2 ui — as.rxUi","text":"","code":"as.rxUi(x)  # S3 method for class 'rxode2' as.rxUi(x)  # S3 method for class 'rxode2tos' as.rxUi(x)  # S3 method for class 'rxModelVars' as.rxUi(x)  # S3 method for class '`function`' as.rxUi(x)  # S3 method for class 'rxUi' as.rxUi(x)  # Default S3 method as.rxUi(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As rxode2 ui — as.rxUi","text":"x Object convert rxUi object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"As rxode2 ui — as.rxUi","text":"rxUi object (error converted)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"As rxode2 ui — as.rxUi","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/as.rxUi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"As rxode2 ui — as.rxUi","text":"","code":"mod1 <- function() {  ini({    # central     KA=2.94E-01    CL=1.86E+01    V2=4.02E+01    # peripheral    Q=1.05E+01    V3=2.97E+02    # effects    Kin=1    Kout=1    EC50=200   })  model({    C2 <- centr/V2    C3 <- peri/V3    d/dt(depot) <- -KA*depot    d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3    d/dt(peri)  <- Q*C2 - Q*C3    eff(0) <- 1    d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  as.rxUi(mod1) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 4-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2            centr #> 3                  3             peri #> 4                  4              eff #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         KA <- 0.294 #>         CL <- 18.6 #>         V2 <- 40.2 #>         Q <- 10.5 #>         V3 <- 297 #>         Kin <- 1 #>         Kout <- 1 #>         EC50 <- 200 #>     }) #>     model({ #>         C2 <- centr/V2 #>         C3 <- peri/V3 #>         d/dt(depot) <- -KA * depot #>         d/dt(centr) <- KA * depot - CL * C2 - Q * C2 + Q * C3 #>         d/dt(peri) <- Q * C2 - Q * C3 #>         eff(0) <- 1 #>         d/dt(eff) <- Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that the compartment exists in a model — assertCompartmentExists","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"Verify compartment exists model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"","code":"assertCompartmentExists(ui, x)  testCompartmentExists(ui, x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"ui model test x value test (can vector strings)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"value compartment exists; vector returns first item matches","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"testCompartmentExists(): Test compartment exists","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentExists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify that the compartment exists in a model — assertCompartmentExists","text":"Matthew Fidler & Bill Denney","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"Verify value valid nlmixr2 compartment name","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"","code":"assertCompartmentName(x)  assertVariableName(x)  assertParameterValue(x)  assertExists(ui, x)  testExists(ui, x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"x value test ui needed, rxode2/nlmixr2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"value error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"assertVariableName(): Verify value valid nlmixr2 variable name assertParameterValue(): Verify value valid nlmixr2 parameter value assertExists(): Assert compartment/variable exists testExists(): Test compartment/variable exists","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify that a value is a valid nlmixr2 compartment name — assertCompartmentName","text":"Bill Denney","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentNew.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a compartment would be new to the model — assertCompartmentNew","title":"Verify that a compartment would be new to the model — assertCompartmentNew","text":"Verify compartment new model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentNew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a compartment would be new to the model — assertCompartmentNew","text":"","code":"assertCompartmentNew(ui, x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentNew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a compartment would be new to the model — assertCompartmentNew","text":"ui model test model paramet exists x value test","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentNew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a compartment would be new to the model — assertCompartmentNew","text":"value error","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertCompartmentNew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify that a compartment would be new to the model — assertCompartmentNew","text":"Matthew Fidler & Bill Denney","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert properties of the rxUi models — assertRxUi","title":"Assert properties of the rxUi models — assertRxUi","text":"Assert properties rxUi models","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert properties of the rxUi models — assertRxUi","text":"","code":"assertRxUi(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiPrediction(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiSingleEndpoint(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiTransformNormal(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiNormal(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiMuRefOnly(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiEstimatedResiduals(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiPopulationOnly(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiMixedOnly(ui, extra = \"\", .var.name = .vname(ui))  assertRxUiRandomOnIdOnly(ui, extra = \"\", .var.name = .vname(ui))"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert properties of the rxUi models — assertRxUi","text":"ui Model check extra Extra text append error message (like \"focei\") .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert properties of the rxUi models — assertRxUi","text":"rxUi model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assert properties of the rxUi models — assertRxUi","text":"functions different types assertions assertRxUi – Make sure proper rxode2 model (throw error) assertRxUiSingleEndpoint – Make sure rxode2 model single endpoint model (throw error) assertRxUiTransformNormal – Make sure model residual distribution normal transformably normal assertRxUiNormal – Make sure model residual distribution normal assertRxUiEstimatedResiduals – Make sure residual error parameters estimated (modeled). assertRxUiPopulationOnly – Make sure model population model (mixed effects) assertRxUiMixedOnly – Make sure model mixed effect model (population effect, ) assertRxUiPrediction – Make sure model predictions assertRxUiMuRefOnly – Make sure parameters mu-referenced assertRxUiRandomOnIdOnly – Make sure random effects ID level","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assert properties of the rxUi models — assertRxUi","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertRxUi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert properties of the rxUi models — assertRxUi","text":"","code":"# \\donttest{ one.cmt <- function() {  ini({    tka <- 0.45; label(\"Ka\")    tcl <- log(c(0, 2.7, 100)); label(\"Cl\")    tv <- 3.45; label(\"V\")    eta.ka ~ 0.6    eta.cl ~ 0.3    eta.v ~ 0.1    add.sd <- 0.7  })  model({    ka <- exp(tka + eta.ka)    cl <- exp(tcl + eta.cl)    v <- exp(tv + eta.v)    linCmt() ~ add(add.sd)  }) }  assertRxUi(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments # assertRxUi(rnorm) # will fail  assertRxUiSingleEndpoint(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert a variable exists in the model — assertVariableExists","title":"Assert a variable exists in the model — assertVariableExists","text":"Assert variable exists model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert a variable exists in the model — assertVariableExists","text":"","code":"assertVariableExists(ui, x)  testVariableExists(ui, x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert a variable exists in the model — assertVariableExists","text":"ui rxode2 ui model x x variable exist model.  vector variable check see exists, must valid nlmixr2 variable names","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert a variable exists in the model — assertVariableExists","text":"variable matches, case multiple variables, first matches.  nothing matches return error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Assert a variable exists in the model — assertVariableExists","text":"testVariableExists(): Test variable exists","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableExists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assert a variable exists in the model — assertVariableExists","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableNew.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert a variable would be new to the model — assertVariableNew","title":"Assert a variable would be new to the model — assertVariableNew","text":"Assert variable new model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableNew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert a variable would be new to the model — assertVariableNew","text":"","code":"assertVariableNew(ui, x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableNew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert a variable would be new to the model — assertVariableNew","text":"ui rxode2 ui model x variable x variable new model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableNew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert a variable would be new to the model — assertVariableNew","text":"nothing, error x new","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/assertVariableNew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assert a variable would be new to the model — assertVariableNew","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"meant perform way quantile() can drop replacement code using quantile() using distributional assumptions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"","code":"binomProbs(x, ...)  # Default S3 method binomProbs(   x,   probs = c(0.025, 0.05, 0.5, 0.95, 0.975),   na.rm = FALSE,   names = TRUE,   onlyProbs = TRUE,   n = 0L,   m = 0L,   pred = FALSE,   piMethod = c(\"lim\"),   M = 5e+05,   tol = .Machine$double.eps^0.25,   ciMethod = c(\"wilson\", \"wilsonCorrect\", \"agrestiCoull\", \"wald\", \"wc\", \"ac\"),   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"x numeric vector whose mean probability based confidence values wanted, NA NaN values allowed numeric vectors unless na.rm TRUE. ... Arguments passed default method, allows many different methods applied. probs numeric vector probabilities values interval 0 1, inclusive. 0, represents maximum observed, 1, represents maximum observed. 0.5 represents expected probability (mean). na.rm logical; true, NA NaN's removed x quantiles computed. names logical; true, result names attribute. onlyProbs logical; true, return probability based confidence interval/prediction interval estimates, otherwise return extra statistics. n integer/integerish; n used calculate prediction confidence interval.  n=0 (default) use number non-NA observations.  calculating prediction interval, represents number observations used input (\"true\") distribution. m integer.  using prediction interval represents number samples observed future prediction interval. pred Use prediction interval instead confidence interval.  default FALSE. piMethod gives prediction interval method (currently lim) Lu 2020 M number simulations run LIM PI. tol tolerance root finding LIM prediction interval ciMethod gives method calculating confidence interval. Can : \"argestiCoull\" \"ac\" – Agresti-Coull method. 95\\ interval, method use concept   \"adding 2 successes 2 failures,\" rather uses formulas explicitly described following link: https://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval#Agresti-Coull_Interval. \"wilson\" – Wilson Method \"wilsonCorrect\" \"wc\" – Wilson method continuity correction \"wald\" – Wald confidence interval standard z approximation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"default return probabilities names (named) points expected distribution located given sampling mean standard deviation. onlyProbs=FALSE prepend mean, variance, standard deviation, minimum, maximum number non-NA observations.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"used confidence intervals rxode2 solved objects using confint(mean=\"binom\")","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"Newcombe, R. G. (1998). \"Two-sided confidence intervals single proportion: comparison seven methods\". Statistics Medicine. 17 (8): 857–872. doi:10.1002/(SICI)1097-0258(19980430)17:8<857::AID-SIM777>3.0.CO;2-E. PMID 9595616. Hezhi Lu, Hua Jin, new prediction interval binomial random variable based inferential models, Journal Statistical Planning Inference, Volume 205, 2020, Pages 156-174, ISSN 0378-3758, https://doi.org/10.1016/j.jspi.2019.07.001.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/binomProbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate expected confidence bands with binomial sampling distribution — binomProbs","text":"","code":"x<- rbinom(7001, p=0.375, size=1) binomProbs(x) #>      2.5%        5%       50%       95%     97.5%  #> 0.3721935 0.3740047 0.3835166 0.3931186 0.3949675   # you can also use the prediction interval # \\donttest{ binomProbs(x, pred=TRUE) #>      2.5%        5%       50%       95%     97.5%  #> 0.3675189 0.3700900 0.3835166 0.3970861 0.3996572  # }  # Can get some extra statistics if you request onlyProbs=FALSE binomProbs(x, onlyProbs=FALSE) #>         mean          var           sd            n         2.5%           5%  #>    0.3835166    0.2364316    0.4862424 7001.0000000    0.3721935    0.3740047  #>          50%          95%        97.5%  #>    0.3835166    0.3931186    0.3949675   x[2] <- NA_real_  binomProbs(x, onlyProbs=FALSE) #>  mean   var    sd     n  2.5%    5%   50%   95% 97.5%  #>    NA    NA    NA    NA    NA    NA    NA    NA    NA   binomProbs(x, na.rm=TRUE) #>      2.5%        5%       50%       95%     97.5%  #> 0.3722472 0.3740585 0.3835714 0.3931743 0.3950234"},{"path":"https://nlmixr2.github.io/rxode2/reference/boxCox.html","id":null,"dir":"Reference","previous_headings":"","what":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","title":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","text":"boxCox/yeoJohnson inverse boxCox/yeoJohnson functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/boxCox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","text":"","code":"boxCox(x, lambda = 1)  boxCoxInv(x, lambda = 1)  yeoJohnson(x, lambda = 1)  yeoJohnsonInv(x, lambda = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/boxCox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","text":"x input value(s) transform lambda lambda value transformation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/boxCox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","text":"values boxCox boxCoxInv","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/boxCox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"boxCox/yeoJohnson and inverse boxCox/yeoJohnson functions — boxCox","text":"","code":"boxCox(10, 0.5) #> [1] 4.324555  boxCoxInv(4.32, 0.5) #> [1] 9.9856  yeoJohnson(10, 0.5) #> [1] 4.63325  yeoJohnsonInv(4.32, 0.5) #> [1] 8.9856"},{"path":"https://nlmixr2.github.io/rxode2/reference/coef.rxode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the rxode2 coefficients — coef.rxode2","title":"Return the rxode2 coefficients — coef.rxode2","text":"returns parameters , state variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/coef.rxode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the rxode2 coefficients — coef.rxode2","text":"","code":"# S3 method for class 'rxode2' coef(object, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/coef.rxode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the rxode2 coefficients — coef.rxode2","text":"object rxode2 object ... ignored arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/coef.rxode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the rxode2 coefficients — coef.rxode2","text":"rxCoef object following params  list strings parameters rxode2 object state list strings names state rxode2 object. ini model specified default values parameters. rxode2 referring rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/coef.rxode2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the rxode2 coefficients — coef.rxode2","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"Note Inverse wishart rescaled match original scale covariance matrix.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"","code":"cvPost(   nu,   omega,   n = 1L,   omegaIsChol = FALSE,   returnChol = FALSE,   type = c(\"invWishart\", \"lkj\", \"separation\"),   diagXformType = c(\"log\", \"identity\", \"variance\", \"nlmixrSqrt\", \"nlmixrLog\",     \"nlmixrIdentity\") )"},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"nu Degrees Freedom (Number Observations) covariance matrix simulation. omega Either estimate covariance matrix estimated standard deviations matrix form row forming standard deviation simulated values n Number Matrices sample.  default 1. useful omega matrix.  Otherwise determined number rows input omega matrix standard deviations omegaIsChol indicator omega matrix Cholesky decomposition. used type=\"invWishart\" returnChol Return Cholesky decomposition covariance matrix sample. used type=\"invWishart\" type type covariance posterior simulated.  can : invWishart posterior inverse wishart; allows correlations parameters modeled.  uncertainty parameter captured degrees freedom parameter. lkj posterior separates standard deviation estimates (modeled outside provided omega argument) correlation estimates. correlation estimate simulated rLKJ1().  simulation uses relationship eta=(nu-1)/2.  relationship based proof relationship restricted LKJ-distribution inverse wishart distribution (XXXXXX).  correlation posterior calculated, estimated standard deviations combined simulated correlation matrix create covariance matrix. separation Like lkj option, separates estimation correlation standard deviation.  Instead using LKJ distribution simulate correlation, simulates inverse wishart identity matrix converts result correlation matrix.  correlation matrix used standard deviation calculate simulated covariance matrix. diagXformType Diagonal transformation type.  : log standard deviations log transformed, actual standard deviations exp(omega) identity standard deviations transformed. standard deviations transformed;  positive. variance variances specified omega matrix; transformed standard deviations. nlmixrSqrt standard deviations come nlmixr omega matrix diag(chol(inv(omega))) = x^2 nlmixrLog standard deviations come nlmixr omega matrix omega matrix diag(chol(solve(omega))) = exp(x) nlmixrIdentity standard deviations come nlmixr omega matrix omega matrix diag(chol(solve(omega))) = x nlmixr transformations make sense -diagonal correlations modeled.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"matrix (n=1) list matrices  (n > 1)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"covariance matrix 1x1 matrix, uses scaled inverse chi-squared equivalent Inverse Wishart distribution uni-directional case. general, separation strategy preferred diagonal matrices.  dimension matrix 10, lkj numerically faster separation method.  However, lkj method densities close zero (XXXX) dimension 10.  case, though computationally expensive separation method performs better. matrices modeled covariances, easiest method use inverse Wishart allows simulation correlation matrices (XXXX).  method well suited well behaved matrices, variance components low high.  modeling nonlinear mixed effects modeling matrices high low variances considered sub-optimal describing system.  rules mind, reasonable use inverse Wishart.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"Alvarez , Niemi J Simpson M. (2014) Bayesian Inference Covariance Matrix. Conference Applied Statistics Agriculture. Wang1 Z, Wu Y, Chu H. (2018) Equivalence LKJ distribution restricted Wishart distribution. <doi:10.48550/arXiv.1809.047463","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"Matthew L.Fidler & Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/cvPost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample a covariance Matrix from the Posterior Inverse Wishart distribution. — cvPost","text":"","code":"## Sample a single covariance. draw1 <- cvPost(3, matrix(c(1, .3, .3, 1), 2, 2))  ## Sample 3 covariances set.seed(42) draw3 <- cvPost(3, matrix(c(1, .3, .3, 1), 2, 2), n = 3)  ## Sample 3 covariances, but return the cholesky decomposition set.seed(42) draw3c <- cvPost(3, matrix(c(1, .3, .3, 1), 2, 2), n = 3, returnChol = TRUE)  ## Sample 3 covariances with lognormal standard deviations via LKJ ## correlation sample cvPost(3, sapply(1:3, function(...) {   rnorm(10) }), type = \"lkj\") #> [[1]] #>           [,1]      [,2]      [,3] #> [1,] 96.862339 0.7748630 -4.626203 #> [2,]  0.774863 0.0283645  0.119055 #> [3,] -4.626203 0.1190550  4.094623 #>  #> [[2]] #>             [,1]       [,2]       [,3] #> [1,]  0.06218003 0.05815138 -0.5246680 #> [2,]  0.05815138 0.70904612  0.3915278 #> [3,] -0.52466798 0.39152780  7.9264641 #>  #> [[3]] #>            [,1]       [,2]       [,3] #> [1,]  0.5725945 -0.7039115  0.3184467 #> [2,] -0.7039115 11.3514944 -0.9360070 #> [3,]  0.3184467 -0.9360070  0.2958648 #>  #> [[4]] #>            [,1]      [,2]       [,3] #> [1,]  0.7659467 -2.803861  0.3011139 #> [2,] -2.8038607 44.273527 -9.4665546 #> [3,]  0.3011139 -9.466555  2.7453546 #>  #> [[5]] #>            [,1]        [,2]        [,3] #> [1,] 3.56762745  0.07176028  0.13656513 #> [2,] 0.07176028  0.42276523 -0.02050365 #> [3,] 0.13656513 -0.02050365  0.03225709 #>  #> [[6]] #>           [,1]      [,2]      [,3] #> [1,] 0.5663711 0.0340262 0.1454173 #> [2,] 0.0340262 0.5977762 0.3269646 #> [3,] 0.1454173 0.3269646 0.2082704 #>  #> [[7]] #>              [,1]         [,2]         [,3] #> [1,]  0.004927562 -0.002843181  0.005520158 #> [2,] -0.002843181  0.029412775 -0.013463952 #> [3,]  0.005520158 -0.013463952  0.182352220 #>  #> [[8]] #>              [,1]        [,2]         [,3] #> [1,]  0.007589923 -0.06216448  0.002859140 #> [2,] -0.062164482  2.50977902 -0.118417072 #> [3,]  0.002859140 -0.11841707  0.007999188 #>  #> [[9]] #>            [,1]       [,2]       [,3] #> [1,] 14.0163806  1.2051675  0.8401261 #> [2,]  1.2051675  0.2780401 -0.1994978 #> [3,]  0.8401261 -0.1994978  1.0749189 #>  #> [[10]] #>            [,1]       [,2]       [,3] #> [1,]  0.5415731 -0.7109454  0.4040513 #> [2,] -0.7109454  2.4865600 -0.4319643 #> [3,]  0.4040513 -0.4319643  1.5098302 #>   ## or return cholesky decomposition cvPost(3, sapply(1:3, function(...) {   rnorm(10) }), type = \"lkj\", returnChol = TRUE ) #> [[1]] #>         [,1]      [,2]       [,3] #> [1,] 1.86548 0.9644577 -1.1377549 #> [2,] 0.00000 0.5131372  0.7633548 #> [3,] 0.00000 0.0000000  1.3396488 #>  #> [[2]] #>           [,1]       [,2]      [,3] #> [1,] 0.3853808 -0.2396288 0.2759888 #> [2,] 0.0000000  0.8531100 0.3904699 #> [3,] 0.0000000  0.0000000 3.9907672 #>  #> [[3]] #>           [,1]       [,2]        [,3] #> [1,] 0.5811021 0.02348261 0.040235833 #> [2,] 0.0000000 0.30199556 0.006542798 #> [3,] 0.0000000 0.00000000 0.326766208 #>  #> [[4]] #>          [,1]       [,2]       [,3] #> [1,] 1.787819 -0.5701632 0.02973627 #> [2,] 0.000000  1.7537550 0.16276115 #> [3,] 0.000000  0.0000000 0.38911063 #>  #> [[5]] #>          [,1]       [,2]        [,3] #> [1,] 2.155836 -0.1976721 -0.27043101 #> [2,] 0.000000  0.7801646  0.06882305 #> [3,] 0.000000  0.0000000  0.16161284 #>  #> [[6]] #>          [,1]       [,2]        [,3] #> [1,] 1.590053 0.07434835 -0.17317880 #> [2,] 0.000000 0.82964610  0.13403995 #> [3,] 0.000000 0.00000000  0.07785199 #>  #> [[7]] #>           [,1]      [,2]       [,3] #> [1,] 0.4123939 0.2062854 -0.8475394 #> [2,] 0.0000000 2.5346241  0.4594744 #> [3,] 0.0000000 0.0000000  0.4939941 #>  #> [[8]] #>          [,1]       [,2]         [,3] #> [1,] 0.332944 -0.6235242 -0.002281778 #> [2,] 0.000000  2.1873959  0.885067020 #> [3,] 0.000000  0.0000000  1.705736993 #>  #> [[9]] #>          [,1]      [,2]      [,3] #> [1,] 4.539001 0.4690774 -2.300368 #> [2,] 0.000000 3.9959179 -1.030652 #> [3,] 0.000000 0.0000000  2.165767 #>  #> [[10]] #>          [,1]         [,2]      [,3] #> [1,] 1.294237 2.545228e-05 -0.891757 #> [2,] 0.000000 6.211554e-01 -1.993399 #> [3,] 0.000000 0.000000e+00  1.819896 #>   ## Sample 3 covariances with lognormal standard deviations via separation ## strategy using inverse Wishart correlation sample cvPost(3, sapply(1:3, function(...) {   rnorm(10) }), type = \"separation\") #> [[1]] #>            [,1]       [,2]        [,3] #> [1,] 17.8091343 0.73461953 -1.39358522 #> [2,]  0.7346195 0.43703688  0.08246014 #> [3,] -1.3935852 0.08246014  0.39231482 #>  #> [[2]] #>             [,1]       [,2]        [,3] #> [1,]  0.11144462  0.2079765 -0.08551474 #> [2,]  0.20797652  9.2698949 -0.16544961 #> [3,] -0.08551474 -0.1654496  0.08403645 #>  #> [[3]] #>            [,1]       [,2]       [,3] #> [1,]  0.7908562 -0.5415399 -0.8590748 #> [2,] -0.5415399  0.3821333  0.5923616 #> [3,] -0.8590748  0.5923616  0.9845958 #>  #> [[4]] #>            [,1]        [,2]        [,3] #> [1,] 11.0562602  0.33123520  1.27030624 #> [2,]  0.3312352  0.42048853 -0.01175715 #> [3,]  1.2703062 -0.01175715  0.20178261 #>  #> [[5]] #>           [,1]     [,2]      [,3] #> [1,] 0.3908392 1.232200 0.3605851 #> [2,] 1.2321999 4.029834 1.1549621 #> [3,] 0.3605851 1.154962 0.3440444 #>  #> [[6]] #>           [,1]      [,2]       [,3] #> [1,] 0.9003795 0.2147410  3.1855956 #> [2,] 0.2147410 0.1209066  0.7990146 #> [3,] 3.1855956 0.7990146 13.1359204 #>  #> [[7]] #>            [,1]       [,2]       [,3] #> [1,]  0.8417985 -0.8216620 -0.7381474 #> [2,] -0.8216620  0.9218277  0.7890609 #> [3,] -0.7381474  0.7890609  0.7039473 #>  #> [[8]] #>             [,1]        [,2]        [,3] #> [1,]  0.16942278  0.01244557 -0.01024524 #> [2,]  0.01244557  0.04491023 -0.07210998 #> [3,] -0.01024524 -0.07210998  0.11723618 #>  #> [[9]] #>            [,1]      [,2]       [,3] #> [1,]  0.4109154 -1.842263 -0.7241764 #> [2,] -1.8422630 10.322635  3.4070393 #> [3,] -0.7241764  3.407039  1.3859887 #>  #> [[10]] #>            [,1]       [,2]       [,3] #> [1,]  0.9428107 -0.7354081  0.6621306 #> [2,] -0.7354081  0.5785147 -0.5232715 #> [3,]  0.6621306 -0.5232715  0.4840937 #>   ## or returning the cholesky decomposition cvPost(3, sapply(1:3, function(...) {   rnorm(10) }), type = \"separation\", returnChol = TRUE ) #> [[1]] #>           [,1]       [,2]       [,3] #> [1,] 0.5361344 -0.5646490 -1.2157714 #> [2,] 0.0000000  0.2706145  0.7833376 #> [3,] 0.0000000  0.0000000  1.4143150 #>  #> [[2]] #>           [,1]       [,2]       [,3] #> [1,] 0.4763222 -0.1686305 -0.2638639 #> [2,] 0.0000000  0.3953129  0.2370631 #> [3,] 0.0000000  0.0000000  0.2553825 #>  #> [[3]] #>          [,1]       [,2]        [,3] #> [1,] 1.457362 -0.1565739 0.003957496 #> [2,] 0.000000  0.2969488 0.004259446 #> [3,] 0.000000  0.0000000 0.034623292 #>  #> [[4]] #>           [,1]      [,2]       [,3] #> [1,] 0.2697727 0.1901255  0.1775689 #> [2,] 0.0000000 0.1863785 -0.4415488 #> [3,] 0.0000000 0.0000000  1.3256841 #>  #> [[5]] #>          [,1]       [,2]       [,3] #> [1,] 1.081252 -0.2458460 0.05591077 #> [2,] 0.000000  0.4958417 0.11182166 #> [3,] 0.000000  0.0000000 0.07342814 #>  #> [[6]] #>           [,1]      [,2]       [,3] #> [1,] 0.4513931 -1.555660  0.9059502 #> [2,] 0.0000000  1.430568 -0.3169197 #> [3,] 0.0000000  0.000000  0.7111382 #>  #> [[7]] #>          [,1]      [,2]       [,3] #> [1,] 5.850312 0.3103629 -3.1410818 #> [2,] 0.000000 0.3115511  0.2156489 #> [3,] 0.000000 0.0000000  2.5678462 #>  #> [[8]] #>           [,1]        [,2]        [,3] #> [1,] 0.3920281 -0.17091427  1.44657948 #> [2,] 0.0000000  0.01081568 -0.09688330 #> [3,] 0.0000000  0.00000000  0.08276372 #>  #> [[9]] #>          [,1]       [,2]       [,3] #> [1,] 2.021659 -0.6427884  0.8126606 #> [2,] 0.000000  0.2158093 -0.3291584 #> [3,] 0.000000  0.0000000  0.3722985 #>  #> [[10]] #>           [,1]      [,2]      [,3] #> [1,] 0.4696165 0.1467044 -1.908483 #> [2,] 0.0000000 0.4906213  3.952318 #> [3,] 0.0000000 0.0000000 10.894538 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"Derivatives Exponential Linear Unit (ELU) Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"","code":"dELU(x, alpha = 1)  d2ELU(x, alpha = 1)  d2aELU(x, alpha = 1)  dELUa(x, alpha = 1)  d2ELUa(x, alpha = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"x numeric vector. elements must finite non-missing. alpha numeric scalar. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"numeric vector derivative(s) ELU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivatives of the Exponential Linear Unit (ELU) Activation Function — dELU","text":"","code":"dELU(c(-1, 0, 1, 2), 2) #> [1] 0.7357589 2.0000000 1.0000000 1.0000000 d2ELU(c(-1, 0, 1, 2), 2) #> [1] 0.7357589 2.0000000 0.0000000 0.0000000 d2aELU(c(-1, 0, 1, 2), 2) #> [1] 0.3678794 1.0000000 0.0000000 0.0000000 dELUa(c(-1, 0, 1, 2), 2) #> [1] -0.6321206  0.0000000  0.0000000  0.0000000 d2ELUa(c(-1, 0, 1, 2), 2) #> [1] 0.3678794 1.0000000 0.0000000 0.0000000  # Can also be used in rxode2: r <- rxode2({   r1=dELU(time, 2)   r2=d2ELU(time, 2)   r2a=d2aELU(time, 2)   ra=dELUa(time, 2)   r2a=d2ELUa(time, 2) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2)) rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 5 #>    time    r1    r2   r2a     ra #>   <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1    -1 0.736 0.736 0.368 -0.632 #> 2     0 2     2     1      0     #> 3     1 1     0     0      0     #> 4     2 1     0     0      0"},{"path":"https://nlmixr2.github.io/rxode2/reference/dGELU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives of GELU — dGELU","title":"Derivatives of GELU — dGELU","text":"Derivatives GELU","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dGELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives of GELU — dGELU","text":"","code":"dGELU(x)  d2GELU(x)  d3GELU(x)  d4GELU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dGELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives of GELU — dGELU","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dGELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives of GELU — dGELU","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dGELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivatives of GELU — dGELU","text":"","code":"dGELU(c(-2, -1, 0, 1, 2)) #> [1] -0.08523180 -0.08331547  0.50000000  1.08331547  1.08523180 d2GELU(c(-2, -1, 0, 1, 2)) #> [1] -0.1079819  0.2419707  0.7978846  0.2419707 -0.1079819 d3GELU(c(-2, -1, 0, 1, 2)) #> [1]  0.0000000  0.7259122  0.0000000 -0.7259122  0.0000000 d4GELU(c(-2, -1, 0, 1, 2)) #> [1]  0.4319277  0.4839414 -1.5957691  0.4839414  0.4319277 # you can use rxode2 as well r <- rxode2({    r1 <- dGELU(time)    r2 <- d2GELU(time)    r3 <- d3GELU(time)    r4 <- d4GELU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ et <- et(c(-2, -1, 0, 1, 2)) rxSolve(r, et) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 5 × 5 #>    time      r1     r2     r3     r4 #>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl> #> 1    -2 -0.0852 -0.108  0      0.432 #> 2    -1 -0.0833  0.242  0.726  0.484 #> 3     0  0.5     0.798  0     -1.60  #> 4     1  1.08    0.242 -0.726  0.484 #> 5     2  1.09   -0.108  0      0.432"},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivatives Parametric ReLU Activation Function — dPReLU","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"Derivatives Parametric ReLU Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"","code":"dPReLU(x, alpha = 1)  dPReLUa(x, alpha = 1)  dPReLUa1(x, alpha = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"x numeric vector. elements must finite non-missing. alpha numeric scalar. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"numeric vector derivative(s) ELU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dPReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivatives Parametric ReLU Activation Function — dPReLU","text":"","code":"dPReLU(c(-1, 0, 1, 2), 2) #> [1] 2 2 1 1 dPReLUa(c(-1, 0, 1, 2), 2) #> [1] -1  0  0  0 dPReLUa1(c(-1, 0, 1, 2), 2) #> [1] 1 1 0 0   # Can also be used in rxode2: r <- rxode2({   r1=dPReLU(time, 2)   r2a=dPReLUa(time, 2)   ra=dPReLUa1(time, 2) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2)) rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 4 #>    time    r1   r2a    ra #>   <dbl> <dbl> <dbl> <dbl> #> 1    -1     2    -1     1 #> 2     0     2     0     1 #> 3     1     1     0     0 #> 4     2     1     0     0"},{"path":"https://nlmixr2.github.io/rxode2/reference/dReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","title":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","text":"function applies derivative Rectified Linear Unit (ReLU) activation function input numeric vector.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","text":"","code":"dReLU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","text":"numeric vector derivative ReLU function","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivative of the Rectified Linear Unit (ReLU) Activation Function — dReLU","text":"","code":"dReLU(c(-1, 0, 1, 2)) #> [1] 0 0 1 1  # Can also be used in rxode2: x <- rxode2({    r=dReLU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1     0 #> 2     0     0 #> 3     1     1 #> 4     2     1"},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"Derivative Scaled Exponential Linear Unit (SELU) Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"","code":"dSELU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"numeric vector derivative SELU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSELU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivative of the Scaled Exponential Linear Unit (SELU) Activation Function — dSELU","text":"","code":"dSELU(c(-1, 0, 1, 2)) #> [1] 0.6467686 1.7580993 1.0507010 1.0507010 # Can also be used in rxode2: x <- rxode2({   r=dSELU(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ e <- et(c(-1, 0, 1, 2)) rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1 0.647 #> 2     0 1.76  #> 3     1 1.05  #> 4     2 1.05"},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivative of the Swish Activation Function — dSwish","title":"Derivative of the Swish Activation Function — dSwish","text":"Derivative Swish Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivative of the Swish Activation Function — dSwish","text":"","code":"dSwish(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivative of the Swish Activation Function — dSwish","text":"x numeric vector. elements must finite non-missing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivative of the Swish Activation Function — dSwish","text":"numeric vector derivative SELU function applied element x.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derivative of the Swish Activation Function — dSwish","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dSwish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivative of the Swish Activation Function — dSwish","text":"","code":"dSwish(c(-1, 0, 1, 2)) #> [1] 0.07232949 0.50000000 0.92767051 1.09078425  # Can also be used in rxode2: x <- rxode2({   r <- dSwish(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ e <- et(c(-1, 0, 1, 2)) rxSolve(x, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time      r #>   <dbl>  <dbl> #> 1    -1 0.0723 #> 2     0 0.5    #> 3     1 0.928  #> 4     2 1.09"},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":null,"dir":"Reference","previous_headings":"","what":"This uses simulations to match the rse — dfWishart","title":"This uses simulations to match the rse — dfWishart","text":"uses simulations match rse","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This uses simulations to match the rse — dfWishart","text":"","code":"dfWishart(omega, n, rse, upper, totN = 1000, diag = TRUE, seed = 1234)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This uses simulations to match the rse — dfWishart","text":"omega represents matrix simulation n represents number subjects/samples comes (used calculate rse).  present assumes rse= sqrt(2)/sqrt(n) rse rse try match, specified, derived n upper upper boundary root finding terms degrees freedom.  specified, n*200 totN represents total number simulated inverse wishart deviates diag TRUE, represents rse match diagonals, otherwise total matrix. seed make simulation reproducible, represents seed used simulating inverse Wishart distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This uses simulations to match the rse — dfWishart","text":"output uniroot() find right estimate","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This uses simulations to match the rse — dfWishart","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dfWishart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This uses simulations to match the rse — dfWishart","text":"","code":"dfWishart(lotri::lotri(a+b~c(1, 0.5, 1)), 100) #> $root #> [1] 164.9818 #>  #> $f.root #> [1] 0.0005180792 #>  #> $iter #> [1] 28 #>  #> $init.it #> [1] NA #>  #> $estim.prec #> [1] 7.882673e-05 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dlReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivative of Leaky ReLU activation function — dlReLU","title":"Derivative of Leaky ReLU activation function — dlReLU","text":"Derivative Leaky ReLU activation function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dlReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivative of Leaky ReLU activation function — dlReLU","text":"","code":"dlReLU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dlReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivative of Leaky ReLU activation function — dlReLU","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dlReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivative of Leaky ReLU activation function — dlReLU","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dlReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivative of Leaky ReLU activation function — dlReLU","text":"","code":"dlReLU(c(-1, 0, 1)) #> [1] 0.01 0.01 1.00  # Can use in rxode2 as well  r <- rxode2({r <- dlReLU(time)}) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ e <- et(c(-1, 0, 1)) rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 3 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1  0.01 #> 2     0  0.01 #> 3     1  1"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-assertRenameErrorModelLine.html","id":null,"dir":"Reference","previous_headings":"","what":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","title":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","text":"returns new expression, old expression, new variable old variable","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-assertRenameErrorModelLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","text":"","code":".assertRenameErrorModelLine(line, vars)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-assertRenameErrorModelLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","text":"line quoted call information line vars Variables contained within mdel","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-assertRenameErrorModelLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","text":"list(new, old, newChar, oldChar)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-assertRenameErrorModelLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function asserts the requested rename makes sense — .assertRenameErrorModelLine","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-cbindOme.html","id":null,"dir":"Reference","previous_headings":"","what":"cbind Ome — .cbindOme","title":"cbind Ome — .cbindOme","text":"cbind Ome","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-cbindOme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cbind Ome — .cbindOme","text":"","code":".cbindOme(et, mat, n)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-cbindOme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cbind Ome — .cbindOme","text":"et theta data frame mat full matrix simulation omegas n number subject simulated","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-cbindOme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cbind Ome — .cbindOme","text":"data frame et combined simulated omega matrix values","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-cbindOme.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cbind Ome — .cbindOme","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-clearPipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear/Set pipeline — .clearPipe","title":"Clear/Set pipeline — .clearPipe","text":"Clear/Set pipeline","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-clearPipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear/Set pipeline — .clearPipe","text":"","code":".clearPipe(   rx = NULL,   inits = NULL,   events = NULL,   params = NULL,   iCov = NULL,   keep = NULL,   thetaMat = NULL,   omega = NULL,   sigma = NULL,   dfObs = NULL,   dfSub = NULL,   nSub = NULL,   nStud = NULL )"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-clearPipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear/Set pipeline — .clearPipe","text":"rx rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-clearPipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear/Set pipeline — .clearPipe","text":"None, clears rxode2 pipeline","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-collectWarnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect warnings and just warn once. — .collectWarnings","title":"Collect warnings and just warn once. — .collectWarnings","text":"Collect warnings just warn .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-collectWarnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect warnings and just warn once. — .collectWarnings","text":"","code":".collectWarnings(expr, lst = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-collectWarnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect warnings and just warn once. — .collectWarnings","text":"expr R expression lst TRUE return list list(object,warnings) instead issuing warnings. Otherwise, FALSE issue warnings return object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-collectWarnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect warnings and just warn once. — .collectWarnings","text":"value expression list value expression list warning messages","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-collectWarnings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collect warnings and just warn once. — .collectWarnings","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a factor/char to an id — .convertId","title":"Convert a factor/char to an id — .convertId","text":"Convert factor/char id","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a factor/char to an id — .convertId","text":"","code":".convertId(a)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a factor/char to an id — .convertId","text":"value convert id","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a factor/char to an id — .convertId","text":"id factor","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a factor/char to an id — .convertId","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-convertId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a factor/char to an id — .convertId","text":"","code":".convertId(\"a\") #> [1] a #> Levels: a"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-copyUi.html","id":null,"dir":"Reference","previous_headings":"","what":"This copies the rxode2 UI object so it can be modified — .copyUi","title":"This copies the rxode2 UI object so it can be modified — .copyUi","text":"copies rxode2 UI object can modified","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-copyUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This copies the rxode2 UI object so it can be modified — .copyUi","text":"","code":".copyUi(ui)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-copyUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This copies the rxode2 UI object so it can be modified — .copyUi","text":"ui Original UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-copyUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This copies the rxode2 UI object so it can be modified — .copyUi","text":"Copied UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-copyUi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This copies the rxode2 UI object so it can be modified — .copyUi","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-expandPars.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand parameters — .expandPars","title":"Expand parameters — .expandPars","text":"Expand parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-expandPars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand parameters — .expandPars","text":"","code":".expandPars(object, params, events, control)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-expandPars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand parameters — .expandPars","text":"object rxode2 model variables object params parameters expand events event table help expansion control control structure help parameter generation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-expandPars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand parameters — .expandPars","text":"Expanded parameters simulation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-expandPars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand parameters — .expandPars","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraC.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate extraC information for rxode2 models — .extraC","title":"Generate extraC information for rxode2 models — .extraC","text":"Generate extraC information rxode2 models","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate extraC information for rxode2 models — .extraC","text":"","code":".extraC(extraC = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate extraC information for rxode2 models — .extraC","text":"extraC Additional extraC rxode2 compile optioioins","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate extraC information for rxode2 models — .extraC","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate extraC information for rxode2 models — .extraC","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraCnow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the extraCnow for compiling — .extraCnow","title":"Get the extraCnow for compiling — .extraCnow","text":"Get extraCnow compiling","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraCnow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the extraCnow for compiling — .extraCnow","text":"","code":".extraCnow()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraCnow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the extraCnow for compiling — .extraCnow","text":"string extraC information","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-extraCnow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the extraCnow for compiling — .extraCnow","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getLastIdLvl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the last idLvl — .getLastIdLvl","title":"Get the last idLvl — .getLastIdLvl","text":"Get last idLvl","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getLastIdLvl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the last idLvl — .getLastIdLvl","text":"","code":".getLastIdLvl()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getLastIdLvl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the last idLvl — .getLastIdLvl","text":"Last idLvl","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getLastIdLvl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the last idLvl — .getLastIdLvl","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getLastIdLvl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the last idLvl — .getLastIdLvl","text":"","code":".getLastIdLvl() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the internal breakdown of an evid — .getWh","title":"Get the internal breakdown of an evid — .getWh","text":"Get internal breakdown evid","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the internal breakdown of an evid — .getWh","text":"","code":".getWh(i)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the internal breakdown of an evid — .getWh","text":"evid breakdown","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the internal breakdown of an evid — .getWh","text":"named evid integer vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the internal breakdown of an evid — .getWh","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-getWh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the internal breakdown of an evid — .getWh","text":"","code":".getWh(1001) #>    wh   cmt wh100   whI   wh0  #> 11001     9     0     0     1  .getWh(10401) #>    wh   cmt wh100   whI   wh0  #> 10401     3     0     1     1"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-handleSingleErrTypeNormOrTFoceiBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","title":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","text":"Handle single error normal t distributions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-handleSingleErrTypeNormOrTFoceiBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","text":"","code":".handleSingleErrTypeNormOrTFoceiBase(   env,   pred1,   errNum = 1L,   rxPredLlik = TRUE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-handleSingleErrTypeNormOrTFoceiBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","text":"env Environment parsed model pred1 data.frame current error errNum number error specification nlmixr2 model rxPredLlik boolean indicating log likelihood calculated non-normal distributions.  default TRUE.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-handleSingleErrTypeNormOrTFoceiBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","text":"list lines added.  lines contain rx_yj_ integer corresponds transformation type. rx_lambda_ transformation lambda rx_low_ lower boundary transformation rx_hi_ upper boundary transformation rx_pred_f_ prediction function rx_pred_ transformed prediction function rx_r_ transformed variance","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-handleSingleErrTypeNormOrTFoceiBase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handle the single error for normal or t distributions — .handleSingleErrTypeNormOrTFoceiBase","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniGetAppendArg.html","id":null,"dir":"Reference","previous_headings":"","what":"This gets the append arg for the ini() piping — .iniGetAppendArg","title":"This gets the append arg for the ini() piping — .iniGetAppendArg","text":"gets append arg ini() piping","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniGetAppendArg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This gets the append arg for the ini() piping — .iniGetAppendArg","text":"","code":".iniGetAppendArg(f, s)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniGetAppendArg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This gets the append arg for the ini() piping — .iniGetAppendArg","text":"f try(force(append)) argument, s .character(substitute(append)) argument","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniGetAppendArg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This gets the append arg for the ini() piping — .iniGetAppendArg","text":"corrected ini piping argument exported creating new ini methods requirements piping","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniGetAppendArg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This gets the append arg for the ini() piping — .iniGetAppendArg","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleAppend.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder rows in iniDf — .iniHandleAppend","title":"Reorder rows in iniDf — .iniHandleAppend","text":"Reorder rows iniDf","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleAppend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder rows in iniDf — .iniHandleAppend","text":"","code":".iniHandleAppend(expr, rxui, envir, append)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleAppend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder rows in iniDf — .iniHandleAppend","text":"expr Expression parsing rxui User interface function envir Environment parsing append Reorder theta parameters.  NULL means change parameter order.  parameter name (character string) means put new parameter named parameter.  number less equal zero means put parameter beginning list.  number greater last parameter number means put parameter end list.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleAppend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder rows in iniDf — .iniHandleAppend","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the iniDf of a model — .iniHandleLine","title":"Update the iniDf of a model — .iniHandleLine","text":"Update iniDf model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the iniDf of a model — .iniHandleLine","text":"","code":".iniHandleLine(expr, rxui, envir = parent.frame(), append = NULL)  .iniHandleFixOrUnfix(expr, rxui, envir = parent.frame(), append = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the iniDf of a model — .iniHandleLine","text":"expr Expression parsing rxui User interface function envir Environment parsing append Reorder theta parameters.  NULL means change parameter order.  parameter name (character string) means put new parameter named parameter.  number less equal zero means put parameter beginning list.  number greater last parameter number means put parameter end list.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the iniDf of a model — .iniHandleLine","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-iniHandleLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update the iniDf of a model — .iniHandleLine","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-matchesLangTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a language object matches a template language object — .matchesLangTemplate","title":"Check if a language object matches a template language object — .matchesLangTemplate","text":"template == str2lang(\".\"), match anything. template == str2lang(\".name\"), match name. template == str2lang(\".call()\"), match call.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-matchesLangTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a language object matches a template language object — .matchesLangTemplate","text":"","code":".matchesLangTemplate(x, template)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-matchesLangTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a language object matches a template language object — .matchesLangTemplate","text":"x object check template template object match","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-matchesLangTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a language object matches a template language object — .matchesLangTemplate","text":"TRUE matches, FALSE, otherwise","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-matchesLangTemplate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a language object matches a template language object — .matchesLangTemplate","text":"","code":".matchesLangTemplate(str2lang(\"d/dt(foo)\"), str2lang(\"d/dt(.name)\")) #> [1] TRUE .matchesLangTemplate(str2lang(\"d/dt(foo)\"), str2lang(\"d/foo(.name)\")) #> [1] FALSE .matchesLangTemplate(str2lang(\"d/dt(foo)\"), str2lang(\"d/.\")) #> [1] TRUE"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-minfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal messaging statements — .minfo","title":"Internal messaging statements — .minfo","text":"Internal messaging statements","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-minfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal messaging statements — .minfo","text":"","code":".minfo(text, ..., .envir = parent.frame())  .malert(text, ..., .envir = parent.frame())  .mwarn(text, ..., .envir = parent.frame())  .msuccess(text, ..., .envir = parent.frame())"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-minfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal messaging statements — .minfo","text":"text Text ... arguments .envir Environment evaluate ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-minfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal messaging statements — .minfo","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-minfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal messaging statements — .minfo","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-modelHandleModelLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle model lines — .modelHandleModelLines","title":"Handle model lines — .modelHandleModelLines","text":"Handle model lines","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-modelHandleModelLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle model lines — .modelHandleModelLines","text":"","code":".modelHandleModelLines(   modelLines,   rxui,   modifyIni = FALSE,   append = NULL,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir )"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-modelHandleModelLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle model lines — .modelHandleModelLines","text":"modelLines model lines considered rxui rxode2 UI object modifyIni ini() considered append boolean determine lines appended piping.  possible values : TRUE lines appended model instead replaced FALSE lines replaced model (default) NA lines pre-pended model instead replaced lhs expression, append lines last observed line expression lhs auto boolean tells piping automatically selects parameters characterized population parameter, subject variability, covariate.  TRUE automatic selection occurs.  FALSE automatic selection turned everything added covariate (can promoted parameter ini statement). default TRUE, can changed options(rxode2.autoVarPiping=FALSE). cov character vector variables assumed covariates.  override automatic promotion population parameter estimate (eta) envir Environment evaluation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-modelHandleModelLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle model lines — .modelHandleModelLines","text":"New UI","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-modelHandleModelLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handle model lines — .modelHandleModelLines","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-pipeRx.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign in the rxode2 pipeline — .pipeRx","title":"Assign in the rxode2 pipeline — .pipeRx","text":"Assign rxode2 pipeline","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-pipeRx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign in the rxode2 pipeline — .pipeRx","text":"","code":".pipeRx(obj)  .pipeInits(obj)  .pipeEvents(obj)  .pipeParams(obj)  .pipeKeep(obj)  .pipeThetaMat(obj)  .pipeOmega(obj)  .pipeSigma(obj)  .pipeDfObs(obj)  .pipeDfSub(obj)  .pipeNSub(obj)  .pipeNStud(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-pipeRx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign in the rxode2 pipeline — .pipeRx","text":"obj Object assign.  NA return value.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-pipeRx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign in the rxode2 pipeline — .pipeRx","text":"pipeline object (invisibly)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-pipeRx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign in the rxode2 pipeline — .pipeRx","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-quoteCallInfoLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns quoted call information — .quoteCallInfoLines","title":"Returns quoted call information — .quoteCallInfoLines","text":"Returns quoted call information","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-quoteCallInfoLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns quoted call information — .quoteCallInfoLines","text":"","code":".quoteCallInfoLines(callInfo, envir = parent.frame(), iniDf = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-quoteCallInfoLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns quoted call information — .quoteCallInfoLines","text":"callInfo Call information envir Environment evaluation (needed) iniDf parent model iniDf piping ini block (NULL otherwise)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-quoteCallInfoLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns quoted call information — .quoteCallInfoLines","text":"Quote call information.  name=expression, change name<-expression quoted call list. expressions within brackets ie {}, unlist brackets called one single sequence.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-quoteCallInfoLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns quoted call information — .quoteCallInfoLines","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"Get blank, theta1, eta1 initialization block iniDf","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"","code":".rxBlankIni(type = c(\"empty\", \"theta\", \"eta\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"type type initialization block return","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"data.frame appropriate number/type columns. type=\"empty\", data.frame 0 rows correct types. type=\"theta\", data.frame 1 row correct types default values.  \"name\" \"est\" likely need updated. type=\"eta\", data.frame 1 row correct types default values single eta added.  \"name\" \"est\" likely need updated.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxBlankIni.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a blank, theta1, or eta1 initialization block for iniDf — .rxBlankIni","text":"","code":".rxBlankIni(\"empty\") #>  [1] ntheta neta1  neta2  name   lower  est    upper  fix    err    label  #> <0 rows> (or 0-length row.names)  .rxBlankIni(\"theta\") #>   ntheta neta1 neta2 name lower est upper   fix  err label #> 1      1    NA    NA <NA>  -Inf   0   Inf FALSE <NA>  <NA>  .rxBlankIni(\"eta\") #>   ntheta neta1 neta2 name lower est upper   fix  err label #> 1     NA     1     1 <NA>     0 0.1   Inf FALSE <NA>  <NA>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxC.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the C code of an internal function — .rxC","title":"Return the C code of an internal function — .rxC","text":"Return C code internal function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the C code of an internal function — .rxC","text":"","code":".rxC(fun)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the C code of an internal function — .rxC","text":"fun string function wish get C code ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the C code of an internal function — .rxC","text":"C code found (string) NULL found","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the C code of an internal function — .rxC","text":"Matthew Fider","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Print out a table in the documentation — .rxDocTable","title":"Print out a table in the documentation — .rxDocTable","text":"Print table documentation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print out a table in the documentation — .rxDocTable","text":"","code":".rxDocTable(table, caption = \"none\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print out a table in the documentation — .rxDocTable","text":"table data frame caption character vector representing caption latex table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print out a table in the documentation — .rxDocTable","text":"based knitr context: output kableExtra::kbl latex output output DT::datatable html output otherwise output knitr::kable","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print out a table in the documentation — .rxDocTable","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxDocTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print out a table in the documentation — .rxDocTable","text":"","code":".rxDocTable(rxReservedKeywords) #>  #>  #> |Reserved Name  |Meaning                                                                                                                                                                           |Alias  | #> |:--------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------| #> |time           |solver time                                                                                                                                                                       |t      | #> |podo           |In Transit compartment models, last dose amount                                                                                                                                   |       | #> |tlast          |Time of Last dose                                                                                                                                                                 |       | #> |M_E            |Exp(1)                                                                                                                                                                            |       | #> |M_LOG2E        |log2(e)                                                                                                                                                                           |       | #> |M_LOG10E       |log10(e)                                                                                                                                                                          |       | #> |M_LN2          |log(2)                                                                                                                                                                            |       | #> |M_LN10         |log(10)                                                                                                                                                                           |       | #> |M_PI           |pi                                                                                                                                                                                |       | #> |M_PI_2         |pi/2                                                                                                                                                                              |       | #> |M_PI_4         |pi/4                                                                                                                                                                              |       | #> |M_1_PI         |1/pi                                                                                                                                                                              |       | #> |M_2_PI         |2/pi                                                                                                                                                                              |       | #> |M_2_SQRTPI     |2/sqrt(pi)                                                                                                                                                                        |       | #> |M_SQRT2        |sqrt(2)                                                                                                                                                                           |       | #> |M_SQRT1_2      |1/sqrt(2)                                                                                                                                                                         |       | #> |M_SQRT_3       |sqrt(3)                                                                                                                                                                           |       | #> |M_SQRT_32      |sqrt(32)                                                                                                                                                                          |       | #> |M_LOG10_2      |Log10(2)                                                                                                                                                                          |       | #> |M_2PI          |2*pi                                                                                                                                                                              |       | #> |M_SQRT_PI      |sqrt(pi)                                                                                                                                                                          |       | #> |M_1_SQRT_2PI   |1/(sqrt(2*pi))                                                                                                                                                                    |       | #> |M_LN_SQRT_PI   |log(sqrt(pi))                                                                                                                                                                     |       | #> |M_LN_SQRT_2PI  |log(sqrt(2*pi))                                                                                                                                                                   |       | #> |M_LN_SQRT_PId2 |log(sqrt(pi/2))                                                                                                                                                                   |       | #> |pi             |pi                                                                                                                                                                                |       | #> |NA             |R's NA value                                                                                                                                                                      |       | #> |NaN            |Not a Number Value                                                                                                                                                                |       | #> |Inf            |Infinite Value                                                                                                                                                                    |       | #> |newind         |1: First record of individual; 2: Subsequent record of individual                                                                                                                 |NEWIND | #> |rxFlag         |Flag for what part of the rxode2 model is being run; 1: ddt; 2: jac; 3: ini; 4: F; 5: lag; 6: rate; 7: dur; 8: mtime; 9: matrix exponential; 10: inductive linearization; 11: lhs |       |"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetHiBoundaryPred1AndIni.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","title":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","text":"Get upper boundary condition transformation ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetHiBoundaryPred1AndIni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","text":"","code":".rxGetHiBoundaryPred1AndIni(env, pred1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetHiBoundaryPred1AndIni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","text":"env Environment parsed model pred1 data.frame current error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetHiBoundaryPred1AndIni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","text":"Upper Boundary","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetHiBoundaryPred1AndIni.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the upper boundary condition when the transformation it — .rxGetHiBoundaryPred1AndIni","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLambdaFromPred1AndIni.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","title":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","text":"Get lambda value based pred information","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLambdaFromPred1AndIni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","text":"","code":".rxGetLambdaFromPred1AndIni(env, pred1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLambdaFromPred1AndIni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","text":"env Environment environment pred1 Single error data frame","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLambdaFromPred1AndIni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","text":"Lambda expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLambdaFromPred1AndIni.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the lambda value based on the pred information — .rxGetLambdaFromPred1AndIni","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLowBoundaryPred1AndIni.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","title":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","text":"Get lower boundary condition transformation requires ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLowBoundaryPred1AndIni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","text":"","code":".rxGetLowBoundaryPred1AndIni(env, pred1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLowBoundaryPred1AndIni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","text":"env Environment parsed model pred1 data.frame current error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLowBoundaryPred1AndIni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","text":"Lower Boundary","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetLowBoundaryPred1AndIni.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the lower boundary condition when the transformation requires it — .rxGetLowBoundaryPred1AndIni","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionDVTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Observation transformation — .rxGetPredictionDVTransform","title":"Get the Observation transformation — .rxGetPredictionDVTransform","text":"Get Observation transformation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionDVTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Observation transformation — .rxGetPredictionDVTransform","text":"","code":".rxGetPredictionDVTransform(env, pred1, yj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionDVTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Observation transformation — .rxGetPredictionDVTransform","text":"env Environment parsed model pred1 data.frame current error yj transformation number current error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionDVTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Observation transformation — .rxGetPredictionDVTransform","text":"transformation expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionDVTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the Observation transformation — .rxGetPredictionDVTransform","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionF.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the prediction name — .rxGetPredictionF","title":"Get the prediction name — .rxGetPredictionF","text":"Get prediction name","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the prediction name — .rxGetPredictionF","text":"","code":".rxGetPredictionF(env, pred1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the prediction name — .rxGetPredictionF","text":"env Environment parsed model pred1 data.frame current error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the prediction name — .rxGetPredictionF","text":"prediction symbol","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the prediction name — .rxGetPredictionF","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionFTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the prediction transformation — .rxGetPredictionFTransform","title":"Get the prediction transformation — .rxGetPredictionFTransform","text":"Get prediction transformation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionFTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the prediction transformation — .rxGetPredictionFTransform","text":"","code":".rxGetPredictionFTransform(env, pred1, yj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionFTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the prediction transformation — .rxGetPredictionFTransform","text":"env Environment parsed model pred1 data.frame current error yj transformation number current error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionFTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the prediction transformation — .rxGetPredictionFTransform","text":"transformation expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetPredictionFTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the prediction transformation — .rxGetPredictionFTransform","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetVarianceForErrorType.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Variance for error type — .rxGetVarianceForErrorType","title":"Get Variance for error type — .rxGetVarianceForErrorType","text":"Get Variance error type","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetVarianceForErrorType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Variance for error type — .rxGetVarianceForErrorType","text":"","code":".rxGetVarianceForErrorType(env, pred1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetVarianceForErrorType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Variance for error type — .rxGetVarianceForErrorType","text":"env Environment pred1 Pred one end-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetVarianceForErrorType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Variance for error type — .rxGetVarianceForErrorType","text":"Variance error type","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxGetVarianceForErrorType.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Variance for error type — .rxGetVarianceForErrorType","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxIsLinCmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to tell if the linCmt() is the model variables — .rxIsLinCmt","title":"Internal function to tell if the linCmt() is the model variables — .rxIsLinCmt","text":"Internal function tell linCmt() model variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxIsLinCmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to tell if the linCmt() is the model variables — .rxIsLinCmt","text":"","code":".rxIsLinCmt()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxIsLinCmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to tell if the linCmt() is the model variables — .rxIsLinCmt","text":"0 1","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxIsLinCmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function to tell if the linCmt() is the model variables — .rxIsLinCmt","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxJacobian.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for calculating the Jacobian — .rxJacobian","title":"Internal function for calculating the Jacobian — .rxJacobian","text":"Internal function calculating Jacobian","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxJacobian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for calculating the Jacobian — .rxJacobian","text":"","code":".rxJacobian(model, vars = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxJacobian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for calculating the Jacobian — .rxJacobian","text":"model symengine environment vars Variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxJacobian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for calculating the Jacobian — .rxJacobian","text":"Jacobian information","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxJacobian.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function for calculating the Jacobian — .rxJacobian","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the linear compartment model states — .rxLinCmt","title":"Get the linear compartment model states — .rxLinCmt","text":"Get linear compartment model states","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the linear compartment model states — .rxLinCmt","text":"","code":".rxLinCmt(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the linear compartment model states — .rxLinCmt","text":"obj rxode2 type object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the linear compartment model states — .rxLinCmt","text":"compartment names","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the linear compartment model states — .rxLinCmt","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmtGen.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","title":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","text":"Internal function generate model variables linCmt() model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmtGen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","text":"","code":".rxLinCmtGen(lenState, vars)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmtGen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","text":"lenState Length state vars Variables model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmtGen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","text":"Model variables expanded linCmt model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinCmtGen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal function to generate the model variables for a linCmt() model — .rxLinCmtGen","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinNcmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of linear compartments — .rxLinNcmt","title":"Get the number of linear compartments — .rxLinNcmt","text":"Get number linear compartments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinNcmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of linear compartments — .rxLinNcmt","text":"","code":".rxLinNcmt(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinNcmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of linear compartments — .rxLinNcmt","text":"obj rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinNcmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of linear compartments — .rxLinNcmt","text":"named integer vector number linear compartments (numLin, numLinSens depotLin)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxLinNcmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the number of linear compartments — .rxLinNcmt","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxPrune.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Pruning function — .rxPrune","title":"Internal Pruning function — .rxPrune","text":"Internal Pruning function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxPrune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Pruning function — .rxPrune","text":"","code":".rxPrune(x, envir = parent.frame(), strAssign = list())"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxPrune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Pruning function — .rxPrune","text":"x List quoted lines envir Environment information stored strAssign string assignment list  model variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxPrune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Pruning function — .rxPrune","text":"Pruned model code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxPrune.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal Pruning function — .rxPrune","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSEeqUsr.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the equivalents symengine user functions from C — .rxSEeqUsr","title":"Return the equivalents symengine user functions from C — .rxSEeqUsr","text":"Return equivalents symengine user functions C","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSEeqUsr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the equivalents symengine user functions from C — .rxSEeqUsr","text":"","code":".rxSEeqUsr()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSEeqUsr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the equivalents symengine user functions from C — .rxSEeqUsr","text":"equivalent symengine user functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSEeqUsr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the equivalents symengine user functions from C — .rxSEeqUsr","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSens.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity for model — .rxSens","title":"Sensitivity for model — .rxSens","text":"Sensitivity model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity for model — .rxSens","text":"","code":".rxSens(model, vars, vars2)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity for model — .rxSens","text":"model symengine model environment vars Variables single sensitivity vars2 present, 2 parameter sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity for model — .rxSens","text":"Sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxSens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sensitivity for model — .rxSens","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"Get information rxode2 derived parameter transformation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"","code":".rxTransInfo(...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"... Parameters translated, unquoted assigned anything.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"Translation information; list contains: $str named string parameters seen underlying C/C++ code. parameters NA used linear compartment model calculations. $ncmt number compartments model $trans rxode2 translation number parameterization contains linCmt() translation number, number compartments parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the information about the rxode2 derived parameter transformation — .rxTransInfo","text":"","code":".rxTransInfo(cl, v , Vp, vp2, q, q2) #> $str #>      p1      v1      p2      p3      p4      p5      ka  #>      NA      NA    \"cl\"     \"v\"     \"q\"    \"Vp\" \"rate1\"  #>  #> $ncmt #> [1] 3 #>  #> $trans #> [1] 1 #>   .rxTransInfo(k12, k21, k13, k31, kel, v) #> $str #>      p1      v1      p2      p3      p4      p5      ka  #>      NA      NA   \"kel\"     \"v\"   \"k12\"   \"k21\" \"rate1\"  #>  #> $ncmt #> [1] 3 #>  #> $trans #> [1] 2 #>   .rxTransInfo(k12, k21, k13, k31, kel, v, ka) #> $str #>      p1      v1      p2      p3      p4      p5      ka  #>      NA      NA   \"kel\"     \"v\"   \"k12\"   \"k21\" \"rate1\"  #>  #> $ncmt #> [1] 3 #>  #> $trans #> [1] 2 #>   .rxTransInfo(CL, V) #> $str #>      p1      v1      p2      p3      p4      p5      ka  #>      NA      NA    \"CL\"     \"V\"      NA      NA \"rate1\"  #>  #> $ncmt #> [1] 1 #>  #> $trans #> [1] 1 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"rxode2 general transformation function — .rxTransform","title":"rxode2 general transformation function — .rxTransform","text":"rxode2 general transformation function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxode2 general transformation function — .rxTransform","text":"","code":".rxTransform(   x,   lambda = 1,   low = 0,   high = 1,   transform = c(\"boxCox\", \"yeoJohnson\", \"untransformed\", \"lnorm\", \"logit\",     \"logit + yeoJohnson\", \"probit\", \"probit + yeoJohnson\", \"logit + boxCox\",     \"probit + boxCox\"),   inverse = FALSE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxode2 general transformation function — .rxTransform","text":"x value transformed lambda lambda value transformation low lower bound transformation high upper bound transformation transform transformation use (can integer string matching supported transformations) inverse boolean inverse transformation performed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxode2 general transformation function — .rxTransform","text":"transformed value","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxode2 general transformation function — .rxTransform","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rxode2 general transformation function — .rxTransform","text":"","code":"logit(0.25) #> [1] -1.098612  .rxTransform(0.25, transform=\"logit\") #> [1] -1.098612  expit(-1.09) #> [1] 0.2516183  .rxTransform(-1.09, transform=\"logit\", inverse=TRUE) #> [1] 0.2516183"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily set options then restore them while running code — .rxWithOptions","title":"Temporarily set options then restore them while running code — .rxWithOptions","text":"Temporarily set options restore running code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily set options then restore them while running code — .rxWithOptions","text":"","code":".rxWithOptions(ops, code)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily set options then restore them while running code — .rxWithOptions","text":"ops list options temporarily set code code code run sink","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily set options then restore them while running code — .rxWithOptions","text":"value code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithOptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporarily set options then restore them while running code — .rxWithOptions","text":"","code":".rxWithOptions(list(digits = 21), {   print(pi) }) #> [1] 3.141592653589793116  print(pi) #> [1] 3.141593"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":null,"dir":"Reference","previous_headings":"","what":"With one sink, then release — .rxWithSink","title":"With one sink, then release — .rxWithSink","text":"one sink, release","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"With one sink, then release — .rxWithSink","text":"","code":".rxWithSink(file, code)  .rxWithSinkBoth(file, code)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"With one sink, then release — .rxWithSink","text":"file path file sink running code code code run sink","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"With one sink, then release — .rxWithSink","text":"return results code section","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"With one sink, then release — .rxWithSink","text":".rxWithSink captures output cat .rxWithSinkBoth captures output cat message","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"With one sink, then release — .rxWithSink","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithSink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"With one sink, then release — .rxWithSink","text":"","code":"t <- tempfile() .rxWithSink(t, cat(\"message\\n\")) cat(\"cat2\\n\") # now you can see the cat2 #> cat2 lines <- readLines(t) unlink(t)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithWd.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily set options then restore them while running code — .rxWithWd","title":"Temporarily set options then restore them while running code — .rxWithWd","text":"Temporarily set options restore running code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithWd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily set options then restore them while running code — .rxWithWd","text":"","code":".rxWithWd(wd, code)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithWd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily set options then restore them while running code — .rxWithWd","text":"wd working directory temporarily set system evaluating code code code run sink","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithWd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily set options then restore them while running code — .rxWithWd","text":"value code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxWithWd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporarily set options then restore them while running code — .rxWithWd","text":"","code":".rxWithWd(tempdir(), {   getwd() }) #> [1] \"/tmp/RtmpG60pcR\"  getwd() #> [1] \"/home/runner/work/rxode2/rxode2/docs/reference\""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxode2ptrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the rxode2 function pointers — .rxode2ptrs","title":"Get the rxode2 function pointers — .rxode2ptrs","text":"function used get function pointers rxode2.  used allow rxode2 binary linkage nlmixr2est.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxode2ptrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the rxode2 function pointers — .rxode2ptrs","text":"","code":".rxode2ptrs()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxode2ptrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the rxode2 function pointers — .rxode2ptrs","text":"list function pointers","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxode2ptrs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the rxode2 function pointers — .rxode2ptrs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-rxode2ptrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the rxode2 function pointers — .rxode2ptrs","text":"","code":".rxode2ptrs() #> $rxode2rxRmvnSEXP #> <pointer: 0x7f4d5b0ec370> #>  #> $rxode2rxParProgress #> <pointer: 0x7f4d5b2e2cd0> #>  #> $rxode2getRxSolve_ #> <pointer: 0x7f4d5b2e3ee0> #>  #> $rxode2indSolve #> <pointer: 0x7f4d5b2f4a00> #>  #> $rxode2getTime #> <pointer: 0x7f4d5b2e3f10> #>  #> $rxode2isRstudio #> <pointer: 0x7f4d5b2ff5c0> #>  #> $rxode2iniSubjectE #> <pointer: 0x7f4d5b2eb920> #>  #> $rxode2sortIds #> <pointer: 0x7f4d5b30b4e0> #>  #> $getSolvingOptionsInd #> <pointer: 0x7f4d5b2fc750> #>  #> $rxode2getUpdateInis #> <pointer: 0x7f4d5b2fc760> #>  #> $rxode2_rxode2_rxModelVars_ #> <pointer: 0x7f4d5b0e7050> #>  #> $rxode2_par_solve #> <pointer: 0x7f4d5b2f37c0> #>  #> $rxode2rxGetId #> <pointer: 0x7f4d5b2e1dd0> #>  #> $rxode2getIndLambda #> <pointer: 0x7f4d5b2fc7a0> #>  #> $rxode2getIndLambdaYj #> <pointer: 0x7f4d5b2fc7b0> #>  #> $rxode2getIndLogitLow #> <pointer: 0x7f4d5b2fc7c0> #>  #> $rxode2getIndLogitHi #> <pointer: 0x7f4d5b2fc7d0> #>  #> $rxode2setIndParPtr #> <pointer: 0x7f4d5b2fc7e0> #>  #> $rxode2getIndParPtr #> <pointer: 0x7f4d5b2fc840> #>  #> $rxode2getIndNallTimes #> <pointer: 0x7f4d5b2fc890> #>  #> $rxode2setIndIdx #> <pointer: 0x7f4d5b2fc8a0> #>  #> $rxode2getIndIx #> <pointer: 0x7f4d5b2fc8b0> #>  #> $rxode2getIndEvid #> <pointer: 0x7f4d5b2fc8e0> #>  #> $rxode2getIndLhs #> <pointer: 0x7f4d5b2fc910> #>  #> $rxode2getIndNdoses #> <pointer: 0x7f4d5b2fc920> #>  #> $rxode2getIndNevid2 #> <pointer: 0x7f4d5b2fc930> #>  #> $rxode2setIndSolve #> <pointer: 0x7f4d5b2fc940> #>  #> $rxode2getIndSolve #> <pointer: 0x7f4d5b2fc950> #>  #> $rxode2getIndDv #> <pointer: 0x7f4d5b2fc960> #>  #> $rxode2getIndYj #> <pointer: 0x7f4d5b2fc9a0> #>  #> $rxode2getIndLimit #> <pointer: 0x7f4d5b2fc9b0> #>  #> $rxode2getIndCens #> <pointer: 0x7f4d5b2fc9f0> #>  #> $rxode2getIndIdx #> <pointer: 0x7f4d5b2fca20> #>  #> $rxode2getOpNeq #> <pointer: 0x7f4d5b2fca30> #>  #> $rxode2setOpNeq #> <pointer: 0x7f4d5b2fca40> #>  #> $rxode2hasOpBadSolve #> <pointer: 0x7f4d5b2fca50> #>  #> $rxode2getOpNlin #> <pointer: 0x7f4d5b2fca60> #>  #> $rxode2getOpCores #> <pointer: 0x7f4d5b2fca70> #>  #> $rxode2getOpNlhs #> <pointer: 0x7f4d5b2fca80> #>  #> $rxode2getOpStiff #> <pointer: 0x7f4d5b2fca90> #>  #> $rxode2resetOpBadSolve #> <pointer: 0x7f4d5b2fcaa0> #>  #> $rxode2getRxNsub #> <pointer: 0x7f4d5b2fcab0> #>  #> $rxode2hasRxLimit #> <pointer: 0x7f4d5b2fcac0> #>  #> $rxode2hasRxCens #> <pointer: 0x7f4d5b2fcad0> #>  #> $rxode2getRxNall #> <pointer: 0x7f4d5b2fcae0> #>  #> $rxode2getRxNobs #> <pointer: 0x7f4d5b2fcaf0> #>  #> $rxode2getRxNobs2 #> <pointer: 0x7f4d5b2fcb00> #>  #> $rxode2getOpIndSolve #> <pointer: 0x7f4d5b2fcb20> #>  #> $rxode2getRxNpars #> <pointer: 0x7f4d5b2fcb10> #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a method for a suggested dependency — .s3register","title":"Register a method for a suggested dependency — .s3register","text":"Generally, recommend way register S3 method use S3Method() namespace directive (often generated automatically @export roxygen2 tag). However, technique requires generic imported package, sometimes want suggest package, provide method package loaded. s3_register() can called package's .onLoad() dynamically register method generic's package loaded. (avoid taking dependency vctrs one function, please feel free copy paste function source package.)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a method for a suggested dependency — .s3register","text":"","code":".s3register(generic, class, method = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a method for a suggested dependency — .s3register","text":"generic Name generic form pkg::generic. class Name class method Optionally, implementation method. default, found looking function called generic.class package environment. Note providing method can dangerous use devtools. namespace method reloaded devtools::load_all(), function keep inheriting old namespace. might cause crashes dangling .Call() pointers.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a method for a suggested dependency — .s3register","text":"nothing; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a method for a suggested dependency — .s3register","text":"R 3.5.0 later, s3_register() also useful demonstrating class creation vignette, since method lookup longer always involves lexical scope. R 3.6.0 later, can achieve similar effect using \"delayed method registration\", .e. placing following NAMESPACE file:","code":"if (getRversion() >= \"3.6.0\") {   S3method(package::generic, class) }"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-s3register.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a method for a suggested dependency — .s3register","text":"","code":"# A typical use case is to dynamically register tibble/pillar methods # for your class. That way you avoid creating a hard dependency on packages # that are not essential, while still providing finer control over # printing when they are used.  .onLoad <- function(...) {   .s3Register(\"pillar::pillar_shaft\", \"vctrs_vctr\")   .s3Register(\"tibble::type_sum\", \"vctrs_vctr\") }"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"Calculate lambdas coefficients two compartment model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"","code":".solComp2(k10, k12, k21)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"k10 elimination rate k12 rate central peripheral compartment k21 rate peripheral central compartment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"List L vector matrices C1 C2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"Matthew L. Fidler based wnl package/paper, implemented C/C++","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the lambdas and coefficients of the two compartment model — .solComp2","text":"","code":".solComp2(k10=0.1, k12=3, k21=1) #> $L #> [1] 4.07546291 0.02453709 #>  #> $C1 #>            [,1]      [,2] #> [1,]  0.7592000 0.2408000 #> [2,] -0.7405714 0.7405714 #>  #> $C2 #>            [,1]      [,2] #> [1,] -0.2468571 0.2468571 #> [2,]  0.2408000 0.7592000 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"Calculate lambdas coefficients three compartment model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"","code":".solComp3(k10, k12, k21, k13, k31)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"k10 elimination rate k12 rate central peripheral compartment k21 rate peripheral central compartment k13 rate central peripheral compartment #2 k31 rate peripheral compartment #2 central","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"List L vector matrices C1, C2 C3","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-solComp3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the lambdas and coefficients of the three compartment model — .solComp3","text":"","code":".solComp3(k10=0.1, k12=3, k21=1, k13=2, k31=0.5) #> $L #> [1] 5.89778324 0.01228788 0.68992888 #>  #> $C1 #>            [,1]      [,2]       [,3] #> [1,]  0.8625279 0.1207845  0.0166876 #> [2,] -0.5283173 0.3668615  0.1614558 #> [3,] -0.3195860 0.4953107 -0.1757247 #>  #> $C2 #>             [,1]      [,2]        [,3] #> [1,] -0.17610577 0.1222872  0.05381861 #> [2,]  0.10786866 0.3714255  0.52070584 #> [3,]  0.06525115 0.5014727 -0.56672385 #>  #> $C3 #>             [,1]      [,2]        [,3] #> [1,] -0.07989649 0.1238277 -0.04393117 #> [2,]  0.04893836 0.3761045 -0.42504289 #> [3,]  0.02960345 0.5077900  0.46260657 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-symengineFs.html","id":null,"dir":"Reference","previous_headings":"","what":"Return symengineFs from user functions — .symengineFs","title":"Return symengineFs from user functions — .symengineFs","text":"Return symengineFs user functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-symengineFs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return symengineFs from user functions — .symengineFs","text":"","code":".symengineFs()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-symengineFs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return symengineFs from user functions — .symengineFs","text":"symengineFs user functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-symengineFs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return symengineFs from user functions — .symengineFs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":null,"dir":"Reference","previous_headings":"","what":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"converts NONMEM-style EVIDs classic RxODE events","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"","code":".toClassicEvid(cmt = 1L, amt = 0, rate = 0, dur = 0, ii = 0, evid = 0L, ss = 0)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"cmt compartment flag amt dose amount rate dose rate dur dose duration ii inter-dose interval evid event id ss steady state","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"classic evids, excluding evids added (need add manually) simply use etTran.  mostly testing really used directly.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-toClassicEvid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This converts NONMEM-style EVIDs to classic RxODE events — .toClassicEvid","text":"","code":".toClassicEvid(cmt=10, amt=3, evid=1) #> [1] 1001 .toClassicEvid(cmt=10, amt=3, rate=2, evid=1) #> [1] 11001 .toClassicEvid(cmt=10, amt=3, rate=-1, evid=1) #> [1] 91001 .toClassicEvid(cmt=10, amt=3, rate=-2, evid=1) #> [1] 81001 .toClassicEvid(cmt=10, amt=3, dur=2, evid=1) #> [1] 21001 .toClassicEvid(cmt=304, amt=3, dur=2, evid=1) #> [1] 320401 .toClassicEvid(cmt=7, amt=0, rate=2, evid=1, ss=1) #> [1] 10740 .toClassicEvid(cmt=-10, amt=3, evid=1) #> [1] 1030 .toClassicEvid(cmt=10, amt=3, evid=5) #> [1] 41001 .toClassicEvid(cmt=6, amt=3, evid=6) #> [1] 50601 .toClassicEvid(cmt=6, amt=3, evid=7) #> [1] 650 .toClassicEvid(evid=2) #> [1] 2 .toClassicEvid(evid=4) #> [1] 101"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfCallFunArg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the function name with the current arguments as a string — .udfCallFunArg","title":"Get the function name with the current arguments as a string — .udfCallFunArg","text":"Get function name current arguments string","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfCallFunArg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the function name with the current arguments as a string — .udfCallFunArg","text":"","code":".udfCallFunArg(fun, args)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfCallFunArg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the function name with the current arguments as a string — .udfCallFunArg","text":"fun function name args arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfCallFunArg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the function name with the current arguments as a string — .udfCallFunArg","text":"string form 'fun(arg1, arg2)':","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfCallFunArg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the function name with the current arguments as a string — .udfCallFunArg","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvReset.html","id":null,"dir":"Reference","previous_headings":"","what":"Lock/Unlock environment for getting R user functions — .udfEnvReset","title":"Lock/Unlock environment for getting R user functions — .udfEnvReset","text":"Lock/Unlock environment getting R user functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvReset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lock/Unlock environment for getting R user functions — .udfEnvReset","text":"","code":".udfEnvReset(lock = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvReset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lock/Unlock environment for getting R user functions — .udfEnvReset","text":"lock logical see environment look user defined functions locked.  locked environments assigned.  NULL returns lock status","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvReset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lock/Unlock environment for getting R user functions — .udfEnvReset","text":"lock status","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvReset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lock/Unlock environment for getting R user functions — .udfEnvReset","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","title":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","text":"Setup UDF environment (querying user defined funtions)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","text":"","code":".udfEnvSet(env)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","text":"env environment user defined functions queried. NULL return current environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","text":"environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Setup the UDF environment (for querying user defined funtions) — .udfEnvSet","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSetUdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","title":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","text":"Use udf model variable information get environment functions exists","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSetUdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","text":"","code":".udfEnvSetUdf(udf)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSetUdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","text":"udf modelVars$udf, integer vector NA_integer_ address environment functions exist","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSetUdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","text":"nothing called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfEnvSetUdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use the udf model variable information to get the environment where the functions exists — .udfEnvSetUdf","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfExists.html","id":null,"dir":"Reference","previous_headings":"","what":"See if the UI function exists in given environment. — .udfExists","title":"See if the UI function exists in given environment. — .udfExists","text":"functions declared, make sure exist .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfExists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See if the UI function exists in given environment. — .udfExists","text":"","code":".udfExists(fun, nargs, envir, doList = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfExists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See if the UI function exists in given environment. — .udfExists","text":"fun Function check nargs Number args check envir Environment check doList boolean see functions .udfEnv$fun checked .  default TRUE, called recursively function (set FALSE)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfExists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See if the UI function exists in given environment. — .udfExists","text":"logical declaring udf function exists environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfExists.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"See if the UI function exists in given environment. — .udfExists","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfMd5Info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the udf strings for creating model md5 — .udfMd5Info","title":"Get the udf strings for creating model md5 — .udfMd5Info","text":"Get udf strings creating model md5","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfMd5Info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the udf strings for creating model md5 — .udfMd5Info","text":"","code":".udfMd5Info()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfMd5Info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the udf strings for creating model md5 — .udfMd5Info","text":"string vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-udfMd5Info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the udf strings for creating model md5 — .udfMd5Info","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle arguments for ui functions — .uiArg","title":"Handle arguments for ui functions — .uiArg","text":"Note internal function exported case useful.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle arguments for ui functions — .uiArg","text":"","code":".uiArg(char, f, dp)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle arguments for ui functions — .uiArg","text":"char character equivalent argument f forced equivalent argument dp deparsed expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle arguments for ui functions — .uiArg","text":"character representing underlying rxode2 code argument","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handle arguments for ui functions — .uiArg","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-uiArg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle arguments for ui functions — .uiArg","text":"","code":".uiArg(\"1.0\", 1.0, \"1.0\") #> [1] \"1\""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-useUtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to figure out if this session supports Unicode — .useUtf","title":"Internal function to figure out if this session supports Unicode — .useUtf","text":"Internal function figure session supports Unicode","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-useUtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to figure out if this session supports Unicode — .useUtf","text":"","code":".useUtf()"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-useUtf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to figure out if this session supports Unicode — .useUtf","text":"boolean indicating session supports Unicode","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-vecDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric vector to repeated data.frame — .vecDf","title":"Convert numeric vector to repeated data.frame — .vecDf","text":"Convert numeric vector repeated data.frame","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-vecDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric vector to repeated data.frame — .vecDf","text":"","code":".vecDf(vec, n)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-vecDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric vector to repeated data.frame — .vecDf","text":"vec Named input vector n Number columns","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-vecDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric vector to repeated data.frame — .vecDf","text":"Data frame repeated vec","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dot-vecDf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert numeric vector to repeated data.frame — .vecDf","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Softplus Activation Function — dsoftplus","title":"Default Softplus Activation Function — dsoftplus","text":"Default Softplus Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Softplus Activation Function — dsoftplus","text":"","code":"dsoftplus(x)  d2softplus(x)  d3softplus(x)  d4softplus(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Softplus Activation Function — dsoftplus","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Softplus Activation Function — dsoftplus","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default Softplus Activation Function — dsoftplus","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/dsoftplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Softplus Activation Function — dsoftplus","text":"","code":"dsoftplus(c(-1, 0, 1, 2)) #> [1] 0.2689414 0.5000000 0.7310586 0.8807971  # You can use rxode2 too:  r <- rxode2({  s1 <- dsoftplus(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time    s1 #>   <dbl> <dbl> #> 1    -1 0.269 #> 2     0 0.5   #> 3     1 0.731 #> 4     2 0.881"},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":null,"dir":"Reference","previous_headings":"","what":"Error function — erf","title":"Error function — erf","text":"Error function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error function — erf","text":"","code":"erf(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error function — erf","text":"x vector real values","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error function — erf","text":"erf x","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Error function — erf","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/erf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error function — erf","text":"","code":"erf(1.0) #> [1] 0.8427008"},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Table Function — et","title":"Event Table Function — et","text":"Event Table Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Table Function — et","text":"","code":"et(x, ..., envir = parent.frame())  # S3 method for class 'rxode2' et(x, ..., envir = parent.frame())  # S3 method for class '`function`' et(x, ..., envir = parent.frame())  # S3 method for class 'rxUi' et(x, ..., envir = parent.frame())  # S3 method for class 'rxSolve' et(x, ..., envir = parent.frame())  # S3 method for class 'rxParams' et(x, ..., envir = parent.frame())  # Default S3 method et(   x,   ...,   time,   amt,   evid,   cmt,   ii,   addl,   ss,   rate,   dur,   until,   id,   amountUnits,   timeUnits,   addSampling,   envir = parent.frame(),   by = NULL,   length.out = NULL )"},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Table Function — et","text":"x first argument supplied event table. named allow et used pipe-line arbitrary objects. ... Times event tables.  can also one named arguments . envir environment expr     evaluated.  May also NULL, list, data frame,     pairlist integer specified sys.call. time Time time dose sampling times. can also unspecified determined object type (list numeric/integer). amt Amount dose. specified, assumes dosing record, instead sampling record. evid Event ID; can : Note reset event resets compartment values zero turns infusions. cmt Compartment name number.  number, integer starting 1.  Negative compartments turn compartment. compartment name, compartment name changed correct state/compartment number running simulation.  compartment named \"-cmt\" compartment turned .   ii specifying dose, inter-dose interval ss, addl options (described ). addl number additional doses inter-dose interval one dose. ss Steady state flag;  can one : ss=2 steady state dose uses super-position principle allow complex steady states, like 10 mg morning 20 mg night, dosing 8 12 pm 8 pm instead every 12 hours.  Since uses super positioning principle, makes sense know kinetics linear. values SS currently invalid. rate positive, rate infusion.  Otherwise: modeled bioavailability applied positive rates (rate > 0), duration infusion changed. data specify rate amount, think modeled bioavailability can affect duration. instead want modeled bioavailability increase rate infusion instead duration infusion, specify dur instead model duration rate=2. dur Duration infusion.  amt dur specified rate calculated two data items. dur specified instead rate, bioavailability changes increase rate instead duration. time dosing end.  can easier way figure many additional doses needed sampling period. id integer vector IDs add remove event table.  event table identical ID, may expand include IDs vector.  negative IDs vector removed. amountUnits units dosing records (amt) timeUnits units time records (time) addSampling boolean indicating sampling time added time dosing time.  default FALSE. number: increment sequence. length.desired length sequence.      non-negative number, seq seq.int     rounded fractional.","code":"Can also specify `cmt` as `dosing.to`, `dose.to`, `doseTo`, `dosingTo`, and `state`."},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event Table Function — et","text":"new event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Event Table Function — et","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Event Table Function — et","text":"Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/et.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Event Table Function — et","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand additional doses — etExpand","title":"Expand additional doses — etExpand","text":"Expand additional doses","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand additional doses — etExpand","text":"","code":"etExpand(et)"},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand additional doses — etExpand","text":"et Event table expand additional doses .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand additional doses — etExpand","text":"New event table addl doses expanded","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand additional doses — etExpand","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etExpand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand additional doses — etExpand","text":"","code":"ev <- et(amt = 3, ii = 24, until = 240) print(ev) #> ── EventTable with 1 records ── #> 1 dosing records (see $get.dosing(); add with add.dosing or et) #> 0 observation times (see $get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with $expand(); or etExpand() #> ── First part of : ── #> # A tibble: 1 × 5 #>    time   amt    ii  addl evid         #>   <dbl> <dbl> <dbl> <int> <evid>       #> 1     0     3    24    10 1:Dose (Add) etExpand(ev) # expands event table, but doesn't modify it #> ── EventTable with 11 records ── #> 11 dosing records (see value$get.dosing(); add with add.dosing or et) #> 0 observation times (see value$get.sampling(); add with add.sampling or et) #> ── First part of value: ── #> # A tibble: 11 × 4 #>     time   amt    ii evid         #>    <dbl> <dbl> <dbl> <evid>       #>  1     0     3     0 1:Dose (Add) #>  2    24     3     0 1:Dose (Add) #>  3    48     3     0 1:Dose (Add) #>  4    72     3     0 1:Dose (Add) #>  5    96     3     0 1:Dose (Add) #>  6   120     3     0 1:Dose (Add) #>  7   144     3     0 1:Dose (Add) #>  8   168     3     0 1:Dose (Add) #>  9   192     3     0 1:Dose (Add) #> 10   216     3     0 1:Dose (Add) #> 11   240     3     0 1:Dose (Add)  print(ev) #> ── EventTable with 1 records ── #> 1 dosing records (see $get.dosing(); add with add.dosing or et) #> 0 observation times (see $get.sampling(); add with add.sampling or et) #> multiple doses in `addl` columns, expand with $expand(); or etExpand() #> ── First part of : ── #> # A tibble: 1 × 5 #>    time   amt    ii  addl evid         #>   <dbl> <dbl> <dbl> <int> <evid>       #> 1     0     3    24    10 1:Dose (Add)  ev$expand() ## Expands the current event table and saves it in ev"},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining event tables — etRbind","title":"Combining event tables — etRbind","text":"Combining event tables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining event tables — etRbind","text":"","code":"etRbind(   ...,   samples = c(\"use\", \"clear\"),   waitII = c(\"smart\", \"+ii\"),   id = c(\"merge\", \"unique\") )  # S3 method for class 'rxEt' rbind(..., deparse.level = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining event tables — etRbind","text":"... event tables optionally time event tables, called waiting times help document. samples handle samples repeating event table.  options : \"clear\" Clear sampling records combining datasets \"use\" Use sampling records combining datasets waitII determines waiting times events handled. options : \"smart\" \"smart\" handling waiting times default option.  case, waiting time last observed inter-dose interval first combined event table, actual time doses given wait time.  smaller last observed inter-dose interval, time event tables given inter-dose interval + waiting time event tables. \"+ii\" case, wait time added inter-dose interval matter length wait time inter-dose interval id rbind handle IDs.  two different types options: merge id=\"merge\", IDs merged together, overlapping IDs merged single event table. unique id=\"unique\", IDs renumbered IDs event tables overlapping. deparse.level deparse.level traditional rbind ignored.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining event tables — etRbind","text":"event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Combining event tables — etRbind","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combining event tables — etRbind","text":"Matthew L Fidler Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRbind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combining event tables — etRbind","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat an rxode2 event table — etRep","title":"Repeat an rxode2 event table — etRep","text":"Repeat rxode2 event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat an rxode2 event table — etRep","text":"","code":"etRep(   x,   times = 1,   length.out = NA,   each = NA,   n = NULL,   wait = 0,   id = integer(0),   samples = c(\"clear\", \"use\"),   waitII = c(\"smart\", \"+ii\"),   ii = 24 )  # S3 method for class 'rxEt' rep(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat an rxode2 event table — etRep","text":"x rxode2 event table times Number times repeat event table length.Invalid rxode2 event tables, throw error used. Invalid rxode2 event tables, throw error used. n number times repeat event table.  Overrides times. wait Waiting time repeated event table.  default waiting, wait=0 id integer vector IDs add remove event table.  event table identical ID, may expand include IDs vector.  negative IDs vector removed. samples handle samples repeating event table.  options : \"clear\" Clear sampling records combining datasets \"use\" Use sampling records combining datasets waitII determines waiting times events handled. options : \"smart\" \"smart\" handling waiting times default option.  case, waiting time last observed inter-dose interval first combined event table, actual time doses given wait time.  smaller last observed inter-dose interval, time event tables given inter-dose interval + waiting time event tables. \"+ii\" case, wait time added inter-dose interval matter length wait time inter-dose interval ii specifying dose, inter-dose interval ss, addl options (described ). ... Times event tables.  can also one named arguments .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat an rxode2 event table — etRep","text":"event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Repeat an rxode2 event table — etRep","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Repeat an rxode2 event table — etRep","text":"Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etRep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat an rxode2 event table — etRep","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence of event tables — etSeq","title":"Sequence of event tables — etSeq","text":"combines sequence event tables.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence of event tables — etSeq","text":"","code":"etSeq(..., samples = c(\"clear\", \"use\"), waitII = c(\"smart\", \"+ii\"), ii = 24)  # S3 method for class 'rxEt' seq(...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence of event tables — etSeq","text":"... event tables optionally time event tables, called waiting times help document. samples handle samples repeating event table.  options : \"clear\" Clear sampling records combining datasets \"use\" Use sampling records combining datasets waitII determines waiting times events handled. options : \"smart\" \"smart\" handling waiting times default option.  case, waiting time last observed inter-dose interval first combined event table, actual time doses given wait time.  smaller last observed inter-dose interval, time event tables given inter-dose interval + waiting time event tables. \"+ii\" case, wait time added inter-dose interval matter length wait time inter-dose interval ii inter-dose intervals found event table, assume interdose interval given ii value.  default 24.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence of event tables — etSeq","text":"event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence of event tables — etSeq","text":"sequences event tables added argument list ....  default combining event tables offset least last inter-dose interval prior event table (ii).  separate event tables number, event tables separated least wait time defined number last inter-dose interval.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequence of event tables — etSeq","text":"Wang W, Hallow K, James D (2015). \"Tutorial rxode2: Simulating Differential Equation Pharmacometric Models R.\" CPT: Pharmacometrics Systems Pharmacology, 5(1), 3-10. ISSN 2163-8306","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequence of event tables — etSeq","text":"Matthew L Fidler, Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence of event tables — etSeq","text":"","code":"if (FALSE) { # \\dontrun{  library(rxode2) library(units)  # Model from rxode2 tutorial # Using a nlmixr2 style function  mod1 <-function(){   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })  model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff  }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") |>        et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") |>       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) |>       et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et)  plot(bidQd, C2)   ## Now Infusion for 5 days followed by oral for 5 days  ##  note you can dose to a named compartment instead of using the compartment number infusion <- et(timeUnits = \"hr\") |>       et(amt=10000, rate=5000, ii=24, until=set_units(5, \"days\"), cmt=\"centr\")   qd <- et(timeUnits = \"hr\") |>   et(amt=10000, ii=24, until=set_units(5, \"days\"), cmt=\"depot\")  et <- seq(infusion,qd)  infusionQd <- rxSolve(mod1, et)  plot(infusionQd, C2)  ## 2wk-on, 1wk-off  qd <- et(timeUnits = \"hr\") |>       et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- seq(qd, set_units(1,\"weeks\"), qd) |>      add.sampling(set_units(seq(0, 5.5,by=0.005),weeks))  wkOnOff <- rxSolve(mod1, et)  plot(wkOnOff, C2)  ## You can also repeat the cycle easily with the rep function  qd <-et(timeUnits = \"hr\") |>      et(amt=10000, ii=24, until=set_units(2, \"weeks\"), cmt=\"depot\")  et <- etRep(qd, times=4, wait=set_units(1,\"weeks\")) |>       add.sampling(set_units(seq(0, 12.5,by=0.005),weeks))  repCycle4 <- rxSolve(mod1, et)  plot(repCycle4, C2)  } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/etTrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Event translation for rxode2 — etTrans","title":"Event translation for rxode2 — etTrans","text":"Event translation rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etTrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event translation for rxode2 — etTrans","text":"","code":"etTrans(   inData,   obj,   addCmt = FALSE,   dropUnits = FALSE,   allTimeVar = FALSE,   keepDosingOnly = FALSE,   combineDvid = NULL,   keep = character(0),   addlKeepsCov = FALSE,   addlDropSs = TRUE,   ssAtDoseTime = TRUE,   iCov = NULL )"},{"path":"https://nlmixr2.github.io/rxode2/reference/etTrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event translation for rxode2 — etTrans","text":"inData Data frame translate obj object model variables can extracted addCmt Add compartment data frame (default FALSE). dropUnits Boolean drop units (default FALSE). allTimeVar Treat covariates time-varying keepDosingOnly keep individuals dosing records trailing dosing records last observation. combineDvid boolean indicating rxode2 use DVID observation records change cmt value; Useful multiple-endpoint nlmixr models.  default determined option(\"rxode2.combine.dvid\") option set, TRUE. typically affect rxode2 simulations. keep named vector items want keep final rxode2 dataset. added rxode2 event records (seen), last observation carried forward used. addlKeepsCov determines additional dosing items repeats dose (FALSE) keeps covariates record dose (TRUE) addlDropSs steady state doses addl specification steady state flag dropped repeated doses (TRUE) retained (FALSE) ssAtDoseTime Boolean TRUE back calculates steady concentration actual time dose, otherwise FALSE doses shifted iCov data frame individual non-time varying covariates combine events dataset.  iCov dataset one covariate per ID match event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/etTrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Event translation for rxode2 — etTrans","text":"Object solving rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an event table object — eventTable","title":"Create an event table object — eventTable","text":"Initializes object class ‘EventTable’ methods adding querying dosing observation records","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an event table object — eventTable","text":"","code":"eventTable(amount.units = NA, time.units = NA)"},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an event table object — eventTable","text":"amount.units string denoting amount dosing units, e.g., “mg”, “ug”. Default NA denote unspecified units.  also solved rxode2 object.  case, eventTable(obj) returns eventTable used solve rxode2 object. time.units string denoting time units, e.g., “hours”, “days”. Default \"hours\". eventTable object consists data.frame storing ordered time-stamped events (unspecified) PK/PD dynamic system, units (strings) dosing time records, plus list functions add extract event records. Currently, events can two types: dosing events represent inputs system sampling time events represent observations system ‘amount.units’ ‘time.units’, respectively.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an event table object — eventTable","text":"modified data.frame following accessible functions: get.EventTable() returns current event table add.dosing()  adds dosing records event table. get.dosing() returns data.frame dosing records. clear.dosing() clears deletes dosing event table `add.sampling() adds sampling time observation records event table. get.sampling()returns data.frame sampled observation records. clear.sampling() removes sampling event table. get.obs.rec() returns logical vector indicating whether event record represents observation . get.nobs() returns number observation (dosing) records. get.units() returns two-element character vector dosing time units, respectively copy() makes copy current event table. create copy event table object use qd2 <- qd$copy() expand() Expands event table multi-subject solving. done qd$expand(400) 400 subject data expansion","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an event table object — eventTable","text":"Matthew Fidler, Melissa Hallow Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/eventTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an event table object — eventTable","text":"","code":"# create dosing and observation (sampling) events # QD 50mg dosing, 5 days followed by 25mg 5 days # qd <- eventTable(amount.units = \"mg\", time.units = \"days\") # qd$add.dosing(dose = 50, nbr.doses = 5, dosing.interval = 1, do.sampling = FALSE) # # sample the system's drug amounts hourly the first day, then every 12 hours # for the next 4 days qd$add.sampling(seq(from = 0, to = 1, by = 1 / 24)) qd$add.sampling(seq(from = 1, to = 5, by = 12 / 24)) # # print(qd$get.dosing())     # table of dosing records print(qd$get.nobs()) # number of observation (not dosing) records #> [1] 34 # # BID dosing, 5 days bid <- eventTable(\"mg\", \"days\") # only dosing bid$add.dosing(   dose = 10000, nbr.doses = 2 * 5,   dosing.interval = 12, do.sampling = FALSE ) # # Use the copy() method to create a copy (clone) of an existing # event table (simple assignments just create a new reference to # the same event table object (closure)). # bid.ext <- bid$copy() # three-day extension for a 2nd cohort bid.ext$add.dosing(   dose = 5000, nbr.doses = 2 * 3,   start.time = 120, dosing.interval = 12, do.sampling = FALSE )  # You can also use the Piping operator to create a table  qd2 <- eventTable(amount.units = \"mg\", time.units = \"days\") %>%   add.dosing(dose = 50, nbr.doses = 5, dosing.interval = 1, do.sampling = FALSE) %>%   add.sampling(seq(from = 0, to = 1, by = 1 / 24)) %>%   add.sampling(seq(from = 1, to = 5, by = 12 / 24)) # print(qd2$get.dosing())     # table of dosing records print(qd2$get.nobs()) # number of observation (not dosing) records #> [1] 34  # Note that piping with %>% will update the original table.  qd3 <- qd2 %>% add.sampling(seq(from = 5, to = 10, by = 6 / 24)) print(qd2$get.nobs()) #> [1] 34 print(qd3$get.nobs()) #> [1] 55"},{"path":"https://nlmixr2.github.io/rxode2/reference/findLhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the assignments in R expression — findLhs","title":"Find the assignments in R expression — findLhs","text":"Find assignments R expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/findLhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the assignments in R expression — findLhs","text":"","code":"findLhs(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/findLhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the assignments in R expression — findLhs","text":"x R expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/findLhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the assignments in R expression — findLhs","text":"list assigned parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/findLhs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the assignments in R expression — findLhs","text":"Hadley Wickham Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/forderForceBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Force using base order for rxode2 radix sorting — forderForceBase","title":"Force using base order for rxode2 radix sorting — forderForceBase","text":"Force using base order rxode2 radix sorting","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/forderForceBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force using base order for rxode2 radix sorting — forderForceBase","text":"","code":"forderForceBase(forceBase = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/forderForceBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force using base order for rxode2 radix sorting — forderForceBase","text":"forceBase boolean indicating rxode2 use R's order() radix sorting instead data.table's parallel radix sorting.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/forderForceBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force using base order for rxode2 radix sorting — forderForceBase","text":"value forceBase (can change data.table available)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/forderForceBase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Force using base order for rxode2 radix sorting — forderForceBase","text":"","code":"# \\donttest{ forderForceBase(TRUE) # Use base `order` for rxode2 sorts forderForceBase(FALSE) # Use `data.table` for rxode2 sorts # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":null,"dir":"Reference","previous_headings":"","what":"Gammap: normalized lower incomplete gamma function — gammap","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"gamma_p boost library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"","code":"gammap(a, z)"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"numeric '' parameter normalized lower incomplete gamma z numeric 'z' parameter normalized lower incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"gammap results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"gamma p function given : gammap = lowergamma(, z)/gamma()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gammap: normalized lower incomplete gamma function — gammap","text":"","code":"gammap(1, 3) #> [1] 0.9502129 gammap(1:3, 3) #> [1] 0.9502129 0.8008517 0.5768099 gammap(1, 1:3) #> [1] 0.6321206 0.8646647 0.9502129"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":null,"dir":"Reference","previous_headings":"","what":"gammapDer: derivative of gammap — gammapDer","title":"gammapDer: derivative of gammap — gammapDer","text":"gamma_p_derivative boost library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gammapDer: derivative of gammap — gammapDer","text":"","code":"gammapDer(a, z)"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gammapDer: derivative of gammap — gammapDer","text":"numeric '' parameter upper incomplete gamma z numeric 'z' parameter upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gammapDer: derivative of gammap — gammapDer","text":"lowergamma results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gammapDer: derivative of gammap — gammapDer","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapDer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gammapDer: derivative of gammap — gammapDer","text":"","code":"gammapDer(1:3, 3) #> [1] 0.04978707 0.14936121 0.22404181  gammapDer(1, 1:3) #> [1] 0.36787944 0.13533528 0.04978707"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":null,"dir":"Reference","previous_headings":"","what":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"gammapInv gammapInva:  Inverses normalized gammap function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"","code":"gammapInv(a, p)  gammapInva(x, p)"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"numeric '' parameter upper incomplete gamma p numeric 'p' parameter upper incomplete gamma x numeric 'x' parameter upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"inverse gammap results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"equation: p = gammap(, x) 'gammapInv' function returns value 'x' satisfies equation 'gammapInva' function returns value 'q' satisfies equation NOTE: gammapInva slow","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammapInv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gammapInv and gammapInva: Inverses of normalized gammap function — gammapInv","text":"","code":"gammapInv(1:3, 0.5) #> [1] 0.6931472 1.6783470 2.6740603  gammapInv(1, 1:3 / 3.1) #> [1] 0.3894648 1.0360919 3.4339872  gammapInv(1:3, 1:3 / 3.1) #> [1] 0.3894648 2.1988984 6.8872929  gammapInva(1:3, 1:3 / 3.1) #> [1] 0.3894648 2.1988984 6.8872929"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":null,"dir":"Reference","previous_headings":"","what":"Gammaq: normalized upper incomplete gamma function — gammaq","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"gamma_q boost library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"","code":"gammaq(a, z)"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"numeric '' parameter normalized upper incomplete gamma z numeric 'z' parameter normalized upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"gammaq results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"gamma q function given : gammaq = uppergamma(, z)/gamma()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gammaq: normalized upper incomplete gamma function — gammaq","text":"","code":"gammaq(1, 3) #> [1] 0.04978707 gammaq(1:3, 3) #> [1] 0.04978707 0.19914827 0.42319008 gammaq(1, 1:3) #> [1] 0.36787944 0.13533528 0.04978707"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":null,"dir":"Reference","previous_headings":"","what":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"gammaqInv gammaqInva:  Inverses normalized gammaq function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"","code":"gammaqInv(a, q)  gammaqInva(x, q)"},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"numeric '' parameter upper incomplete gamma q numeric 'q' parameter upper incomplete gamma x numeric 'x' parameter upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"inverse gammaq results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"equation: q = gammaq(, x) 'gammaqInv' function returns value 'x' satisfies equation 'gammaqInva' function returns value '' satisfies equation NOTE: gammaqInva slow","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/gammaqInv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gammaqInv and gammaqInva: Inverses of normalized gammaq function — gammaqInv","text":"","code":"gammaqInv(1:3, 0.5) #> [1] 0.6931472 1.6783470 2.6740603  gammaqInv(1, 1:3 / 3) #> [1] 1.0986123 0.4054651 0.0000000  gammaqInv(1:3, 1:3 / 3.1) #> [1] 1.131402 1.248533 0.684289  gammaqInva(1:3, 1:3 / 3.1) #> [1] 1.131402 1.248533 0.684289"},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"Create complete shiny application exploring dosing regimens given (hardcoded) PK/PD model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"","code":"genShinyApp.template(   appDir = \"shinyExample\",   verbose = TRUE,   ODE.config = list(ode = \"model\", params = c(KA = 0.294), inits = c(eff = 1), method =     \"lsoda\", atol = 1e-08, rtol = 1e-06) )  write.template.server(appDir)  write.template.ui(appDir, statevars)"},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"appDir string directory store shiny app, default \"shinyExample\". directory appDir created exist. verbose logical specifying whether write messages shiny app generated. Defaults TRUE. ODE.config model name compiled list parameters sent rxSolve(). statevars List statevars passed write.template.ui() function.  usually called directly. PK/PD model defined using rxode2(), set parameters initial values defined.  appropriate R scripts shiny's user interface ui.R server logic server.R created directory appDir. function evaluates following PK/PD model default: can changed ODE.config parameter. launch shiny app, simply issue runApp(appDir) R command.","code":"C2 = centr/V2;     C3 = peri/V3;     d/dt(depot) =-KA*depot;     d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3;     d/dt(peri)  =                    Q*C2 - Q*C3;     d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff;"},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"None, functions used side effects.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"functions create simple, working example dosing regimen simulation web application. Users may want modify code experiment creating shiny applications specific rxode2 models.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/genShinyApp.template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an example (template) of a dosing regimen shiny app — genShinyApp.template","text":"","code":"# \\donttest{ # remove myapp when the example is complete on.exit(unlink(\"myapp\", recursive = TRUE, force = TRUE)) # create the shiny app example (template) genShinyApp.template(appDir = \"myapp\") #>  #> Generating an example (template) for a dosing regimen shiny app #>  #> Using the following PK/PD model: #>    C2 = centr/V2; #>    C3 = peri/V3; #>    d/dt(depot) =-KA*depot; #>    d/dt(centr) = KA*depot - CL*C2 - Q*C2 + Q*C3; #>    d/dt(peri)  =                    Q*C2 - Q*C3; #>    d/dt(eff)  = Kin - Kout*(1-C2/(EC50+C2))*eff; #>      #> Translating the PK/PD ODE model into C, compiling, etc. #>  #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #>  #> Parameters and their values: #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.294  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #>  #> Initial values in each compartment: #> depot centr  pari   eff  #>     0     0     0     1  #>  #> Warning: 2 arguments not used by format ' #>       # #>       # Dosing regimen template generated by rxode2::genShinyApp.template() #>       # #>  #>       debug = TRUE #>       #wd = sprintf(\"%%s/../\", getwd()) #>       #setwd(wd) #>  #>       # Server inputs: Dose, dosing regimen, dosing frequency, #>       # dosing cycle definition, number of dosing cycles #>  #>       library(shiny) #>       library(rxode2) #>  #>       # read objects from \"rx_shiny_data.rda\" in the  AppDir folder, #>       # objects include, mod1, params, inits, method, atol, rtol.] #>  #>       load(\"./rx_shiny_data.rda\") #>       if (!rxDynLoad(mod1)) mod1 <- rxode2(mod1, modName=\"mod1\") #>       # Define server logic #>       shinyServer(function(input, output) { #>  #>         get.cp <- reactive({ #>           ds <- input$Dose #>           reg <- switch(input$regimen, \"QD\"=1, \"BID\"=2) #>           cyc <- switch(input$cycle, #>               \"continous\"=c(7,0), #>               \"1wkon 1wkoff\"=c(7,7), #>               \"2wkon 1wkoff\"=c(14,7), #>               \"3wkon 1wkoff\"=c(21,7) #>           ) #>           cyc <- [... truncated] #> Shiny files (ui.R, server.R) plus R data saved. #>  #> To launch the Shiny app, type the following two R commands: #>  #> \tlibrary(shiny) #> \trunApp(\"myapp\") #>  # run the shiny app if (requireNamespace(\"shiny\", quietly=TRUE)) {   library(shiny)   # runApp(\"myapp\") # Won't launch in environments without browsers } # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseIniSimModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","title":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","text":"Get base simulation model simulation inis underlying rxode2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseIniSimModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","text":"","code":"getBaseIniSimModel(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseIniSimModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","text":"obj Fit Object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseIniSimModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","text":"Simulation object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseIniSimModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the base simulation model for simulation with inis in the underlying rxode2 model — getBaseIniSimModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSimModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the base simulation model for simulation — getBaseSimModel","title":"Get the base simulation model for simulation — getBaseSimModel","text":"Get base simulation model simulation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSimModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the base simulation model for simulation — getBaseSimModel","text":"","code":"getBaseSimModel(obj)  # Default S3 method getBaseSimModel(obj)  # Default S3 method getBaseIniSimModel(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSimModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the base simulation model for simulation — getBaseSimModel","text":"obj Fit Object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSimModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the base simulation model for simulation — getBaseSimModel","text":"Simulation object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSimModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the base simulation model for simulation — getBaseSimModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSymengineModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","title":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","text":"Get symengine loading symengine rxS()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSymengineModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","text":"","code":"getBaseSymengineModel(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSymengineModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","text":"obj Object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSymengineModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","text":"Simulation model ready load symeng","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getBaseSymengineModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the symengine for loading into symengine with rxS() — getBaseSymengineModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getRxThreads.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/Set the number of threads that rxode2 uses — getRxThreads","title":"Get/Set the number of threads that rxode2 uses — getRxThreads","text":"Get/Set number threads rxode2 uses","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getRxThreads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/Set the number of threads that rxode2 uses — getRxThreads","text":"","code":"getRxThreads(verbose = FALSE)  setRxThreads(threads = NULL, percent = NULL, throttle = NULL)  rxCores(verbose = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/getRxThreads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/Set the number of threads that rxode2 uses — getRxThreads","text":"verbose Display value relevant OpenMP settings threads NULL (default) rereads environment variables. 0 means use logical CPUs available. Otherwise number >= 1 percent provided number 2 100; percentage logical CPUs use. default startup, 50 percent. throttle 2 (default) means , roughly speaking, single thread used number subjects solved <=2, 2 threads number points <=4, etc. throttle speed small data tasks (especially repeated many times) incurring overhead managing multiple threads. throttle also suppress sorting ID solved first (nsubject solved)*throttle <= nthreads.  rxode2 sorting occurs minimize time waiting another thread finish. last item solved long solving time, solving wait last costly solving occur. items likely take time solved first, wait less likely impact overall solving time. rxode2 IDs sorted individual number solving points (largest first). also C interface allows IDs resorted total time spent solving equation.  allows packages like nlmixr sort solving time needed. Overall number threads throttled (restricted) small tasks sorting IDs suppressed.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/getRxThreads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/Set the number of threads that rxode2 uses — getRxThreads","text":"number threads rxode2 uses","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/guide_none.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty Guide — guide_none","title":"Empty Guide — guide_none","text":"empty guide draws nothing; included rxode2 compatibility ggplot 3.2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/guide_none.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty Guide — guide_none","text":"","code":"guide_none(title = waiver(), position = waiver())"},{"path":"https://nlmixr2.github.io/rxode2/reference/guide_none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empty Guide — guide_none","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. position guide drawn: one top, bottom, left, right.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/guide_none.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empty Guide — guide_none","text":"nothing, simply included compatible ggplot 3.2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign the ini block in the rxode2 related object — ini<-","title":"Assign the ini block in the rxode2 related object — ini<-","text":"Assign ini block rxode2 related object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign the ini block in the rxode2 related object — ini<-","text":"","code":"ini(x, envir = environment(x)) <- value"},{"path":"https://nlmixr2.github.io/rxode2/reference/ini-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign the ini block in the rxode2 related object — ini<-","text":"x rxode2 related object envir Environment assignment occurs value Value object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign the ini block in the rxode2 related object — ini<-","text":"rxode2 related object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini-set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign the ini block in the rxode2 related object — ini<-","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":null,"dir":"Reference","previous_headings":"","what":"Ini block for rxode2/nlmixr models — ini.rxUi","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"ini block controls initial conditions 'theta' (fixed effects), 'omega' (random effects), 'sigma' (residual error) elements model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"","code":"# S3 method for class 'rxUi' ini(x, ..., envir = parent.frame(), append = NULL)  # Default S3 method ini(x, ..., envir = parent.frame(), append = NULL)  ini(x, ..., envir = parent.frame(), append = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"x expression ... expressions ini() function envir environment unevaluated model expressions evaluated.  May also NULL, list, data frame, pairlist integer specified sys.call. append Reorder theta parameters.  NULL means change parameter order.  parameter name (character string) means put new parameter named parameter.  number less equal zero means put parameter beginning list.  number greater last parameter number means put parameter end list.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"ini block","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"ini() function used two different ways.  main way used set initial conditions associated attributes (described ) model.  way used updating initial conditions model, often using pipe operator. 'theta' 'sigma' can set using either <- = tvCL <- 1 equivalently tvCL = 1.  'omega' can set ~ etaCL ~ 0.1. Parameters can named unnamed (though named parameters preferred). named parameter set using name left assignment unnamed parameters set without assignment operator.  tvCL <- 1 set named parameter tvCL 1.  Unnamed parameters set using just value, 1. estimation methods, lower upper bounds can set 'theta' 'sigma' values.  set lower /upper bound, use vector values.  vector c(lower, estimate, upper).  vector may given just estimate (estimate), lower bound estimate (c(lower, estimate)), three (c(lower, estimate, upper)).  set estimate upper bound without lower bound, set lower bound -Inf, c(-Inf, estimate, upper).  estimation method support bounds, bounds ignored warning. 'omega' values can set single value values lower-triangular matrix.  values may set either variance-covariance matrix (default) correlation matrix -diagonals standard deviations diagonals.  Names may set left side ~.  set variance-covariance matrix variance values 2 3 covariance -2.5 use ~c(2, 2.5, 3).  set matrix names iivKa iivCL, use iivKa + iivCL~c(2, 2.5, 3).  set correlation matrix standard deviations diagonal, use cor() like iivKa + iivCL~cor(2, -0.5, 3).  rxode2 3.0 can also use iivKa ~ 2, iivCL ~ c(2.5, 3) covariance matrices well. Values may fixed (therefore estimated) using either name fixed end assignment calling fixed() function value fix.  'theta' 'sigma', either estimate full definition (including lower upper bounds) may included fixed setting.  example, following effectively equivalent set 'theta' 'sigma' fixed value (lower upper bounds ignored fixed value): tvCL <- fixed(1), tvCL <- fixed(0, 1), tvCL <- fixed(0, 1, 2), tvCL <- c(0, fixed(1), 2), tvCL <- c(0, 1, fixed).  'omega' assignment, full block none block must set fixed.  Examples setting 'omega' value fixed : iivKa~fixed(1), iivKa + iivCL~fixed(1, 2, 3), iivKa + iivCL~c(1, 2, 3, fixed).  Anywhere fixed used, FIX, FIXED, fix may used equivalently. value, standard mathematical operators functions may used define value.  example, log(2) 24*30 may used define value anywhere number can used (e.g. lower bound, estimate, upper bound, variance, etc.). Values may labeled using label() function assignment. Labels used make reporting easier giving human-readable description parameter, labels effect estimation.  typical way set label parameter tvCL label \"Typical Value Clearance (L/hr)\" tvCL <- 1; label(\"Typical Value Clearance (L/hr)\"). diagonal values 'omega' can set zero using diag() remove -diagonals can removed ini(diag()).  remove covariances 'omega' item iivKa, can use %>% ini(diag(iivKa)).  remove covariances contain either iivKa iivCl can use %>% ini(diag(iivKa, iivCl)).  finer control can remove covariance two items (like iivKa iivCl) `%>% ini(-cov(iivKa, iivCl)) rxode2/nlmixr2 attempt determine back-transformations user.  example, CL <- exp(tvCL) detect tvCL must back-transformed exp() easier interpretation.  want control back-transformation, can specify back-transformation using backTransform() assignment.  example, set back-transformation exp(), can use tvCL <- 1; backTransform(exp()).","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/ini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ini block for rxode2/nlmixr models — ini.rxUi","text":"","code":"# Set the ini() block in a model one.compartment <- function() {   ini({     tka <- log(1.57); label(\"Ka\")     tcl <- log(2.72); label(\"Cl\")     tv <- log(31.5); label(\"V\")     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  # Use piping to update initial conditions one.compartment %>% ini(tka <- log(2)) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.693147180559945` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd  #> 0.6931472 1.0006319 3.4499875 0.7000000  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.693147180559945 #>         label(\"Ka\") #>         tcl <- 1.00063188030791 #>         label(\"Cl\") #>         tv <- 3.44998754583159 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } one.compartment %>% ini(tka <- label(\"Absorption rate, Ka (1/hr)\")) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd  #> 0.4510756 1.0006319 3.4499875 0.7000000  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.451075619360217 #>         label(\"Absorption rate, Ka (1/hr)\") #>         tcl <- 1.00063188030791 #>         label(\"Cl\") #>         tv <- 3.44998754583159 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } # Move the tka parameter to be just below the tv parameter (affects parameter # summary table, only) one.compartment %>% ini(tka <- label(\"Absorption rate, Ka (1/hr)\"), append = \"tv\") #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tcl        tv       tka    add.sd  #> 1.0006319 3.4499875 0.4510756 0.7000000  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tcl <- 1.00063188030791 #>         label(\"Cl\") #>         tv <- 3.44998754583159 #>         label(\"V\") #>         tka <- 0.451075619360217 #>         label(\"Absorption rate, Ka (1/hr)\") #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> } # When programming with rxode2/nlmixr2, it may be easier to pass strings in # to modify the ini one.compartment %>% ini(\"tka <- log(2)\") #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ change initial estimate of `tka` to `0.693147180559945` #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd  #> 0.6931472 1.0006319 3.4499875 0.7000000  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.693147180559945 #>         label(\"Ka\") #>         tcl <- 1.00063188030791 #>         label(\"Cl\") #>         tv <- 3.44998754583159 #>         label(\"V\") #>         add.sd <- c(0, 0.7) #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/reference/invWR1d.html","id":null,"dir":"Reference","previous_headings":"","what":"One correlation sample from the Inverse Wishart distribution — invWR1d","title":"One correlation sample from the Inverse Wishart distribution — invWR1d","text":"correlation constructed transformation Inverse Wishart random covariate correlation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/invWR1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One correlation sample from the Inverse Wishart distribution — invWR1d","text":"","code":"invWR1d(d, nu, omegaIsChol = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/invWR1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One correlation sample from the Inverse Wishart distribution — invWR1d","text":"d dimension correlation matrix nu Degrees freedom Wishart distribution omegaIsChol indicator omega matrix Cholesky decomposition. used type=\"invWishart\"","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/invWR1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One correlation sample from the Inverse Wishart distribution — invWR1d","text":"One correlation sample inverse wishart","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/invWR1d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"One correlation sample from the Inverse Wishart distribution — invWR1d","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxEt.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if this is an rxEt object. — is.rxEt","title":"Check to see if this is an rxEt object. — is.rxEt","text":"Check see rxEt object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxEt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if this is an rxEt object. — is.rxEt","text":"","code":"is.rxEt(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxEt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if this is an rxEt object. — is.rxEt","text":"x object check see rxEt rxEt object expired strip rxEt information.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxEt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see if this is an rxEt object. — is.rxEt","text":"Boolean indicating rxode2 event table","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxEt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check to see if this is an rxEt object. — is.rxEt","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxSolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if this is an rxSolve object. — is.rxSolve","title":"Check to see if this is an rxSolve object. — is.rxSolve","text":"Check see rxSolve object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxSolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if this is an rxSolve object. — is.rxSolve","text":"","code":"is.rxSolve(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxSolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if this is an rxSolve object. — is.rxSolve","text":"x object check see rxSolve rxSolve object expired strip rxSolve information.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxSolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see if this is an rxSolve object. — is.rxSolve","text":"boolean indicating rxSolve object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxSolve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check to see if this is an rxSolve object. — is.rxSolve","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":null,"dir":"Reference","previous_headings":"","what":"Return if the object can be stacked — is.rxStackData","title":"Return if the object can be stacked — is.rxStackData","text":"Return object can stacked","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return if the object can be stacked — is.rxStackData","text":"","code":"is.rxStackData(object)"},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return if the object can be stacked — is.rxStackData","text":"object object test can stacked","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return if the object can be stacked — is.rxStackData","text":"boolean tell object can stacked using rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return if the object can be stacked — is.rxStackData","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/is.rxStackData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return if the object can be stacked — is.rxStackData","text":"","code":"is.rxStackData(NULL) #> [1] FALSE"},{"path":"https://nlmixr2.github.io/rxode2/reference/lReLU.html","id":null,"dir":"Reference","previous_headings":"","what":"Leaky ReLU activation function — lReLU","title":"Leaky ReLU activation function — lReLU","text":"Leaky ReLU activation function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lReLU.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leaky ReLU activation function — lReLU","text":"","code":"lReLU(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/lReLU.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leaky ReLU activation function — lReLU","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lReLU.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leaky ReLU activation function — lReLU","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/lReLU.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leaky ReLU activation function — lReLU","text":"","code":"lReLU(c(-1, 0, 1)) #> [1] -0.01  0.00  1.00  # Can use in rxode2 as well  r <- rxode2({r <- lReLU(time)}) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ e <- et(c(-1, 0, 1)) rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 3 × 2 #>    time     r #>   <dbl> <dbl> #> 1    -1 -0.01 #> 2     0  0    #> 3     1  1"},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear model to replace in rxode2 ui model — linMod","title":"Linear model to replace in rxode2 ui model — linMod","text":"Linear model replace rxode2 ui model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear model to replace in rxode2 ui model — linMod","text":"","code":"linMod(   variable,   power,   dv = \"dv\",   intercept = TRUE,   type = c(\"replace\", \"before\", \"after\"),   num = NULL,   iniDf = NULL,   data = FALSE,   mv = FALSE )  linMod0(..., intercept = FALSE)  linModB(..., type = \"before\")  linModB0(..., intercept = FALSE, type = \"before\")  linModA(..., type = \"after\")  linModA0(..., intercept = FALSE, type = \"after\")  linModD(..., intercept = TRUE, data = TRUE)  linModD0(..., intercept = FALSE, data = TRUE)  linModM(..., intercept = TRUE, mv = TRUE)  linModM0(..., intercept = FALSE, mv = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear model to replace in rxode2 ui model — linMod","text":"variable variable rxode2 made . power power polynomial generated. dv dependent variable use generate initial estimates data. NULL query using rxUdfUiData(). intercept Boolean tells intercept generated. type type linear model replacement used. num number particular model generated. unspecified, query using rxUdfUiNum(). iniDf initialization data.frame, NULL query using rxUdfUiIniDf() data logical tells initial estimates linear model estimated data. mv logical tell model variables need used generate model variables. ... arguments passed linMod() abbreviations linMod()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear model to replace in rxode2 ui model — linMod","text":"list use generating rxode2 ui model see rxUdfUi() details.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Linear model to replace in rxode2 ui model — linMod","text":"linMod0(): linear model without intercept linModB(): linear model occurs linModB0(): linear model user function occurs linModA(): linear model user function occurs linModA0(): liner model without intercept placed user function occurs linModD(): linear model initial estimates generated data linModD0(): linear model initial estimates generated data (intercept) linModM(): linear model model variables used generate model variables linModM0(): linear model model variables used generate model variables (intercept)","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linear model to replace in rxode2 ui model — linMod","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/linMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear model to replace in rxode2 ui model — linMod","text":"","code":"linMod(x, 3) #> $replace #> [1] \"rx.linMod.x1a+rx.linMod.x1b*x+rx.linMod.x1c*x^2+rx.linMod.x1d*x^3\" #>  #> $iniDf #> NULL #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"Calculate log likelihood binomial function (derivatives)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"","code":"llikBeta(x, shape1, shape2, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"x Observation shape1, shape2 non-negative parameters Beta distribution. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"data frame fx log pdf value dShape1 dShape2 derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"rxode2() model, can use llikBeta() use arguments.  can also get derivative shape1 shape2 llikBetaDshape1() llikBetaDshape2().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBeta","text":"","code":"# \\donttest{  x <- seq(1e-4, 1 - 1e-4, length.out = 21)  llikBeta(x, 0.5, 0.5) #>             fx     dShape1     dShape2 #> 1   3.46049030 -7.82404601  1.38619436 #> 2   0.37793108 -1.60763953  1.33490633 #> 3   0.05888752 -0.91549105  1.28084495 #> 4  -0.11510253 -0.51035907  1.22369308 #> 5  -0.22855163 -0.22284360  1.16307581 #> 6  -0.30780832  0.00019998  1.09854562 #> 7  -0.36444410  0.18245488  1.02956227 #> 8  -0.40444714  0.33655795  0.95546529 #> 9  -0.43118004  0.47005363  0.87543540 #> 10 -0.44655956  0.58780889  0.78843918 #> 11 -0.45158271  0.69314718  0.69314718 #> 12 -0.44655956  0.78843918  0.58780889 #> 13 -0.43118004  0.87543540  0.47005363 #> 14 -0.40444714  0.95546529  0.33655795 #> 15 -0.36444410  1.02956227  0.18245488 #> 16 -0.30780832  1.09854562  0.00019998 #> 17 -0.22855163  1.16307581 -0.22284360 #> 18 -0.11510253  1.22369308 -0.51035907 #> 19  0.05888752  1.28084495 -0.91549105 #> 20  0.37793108  1.33490633 -1.60763953 #> 21  3.46049030  1.38619436 -7.82404601  llikBeta(x, 1, 3, TRUE) #>          x shape1 shape2           fx     dShape1     dShape2 #> 1  0.00010      1      3   1.09841228 -7.37700704  0.33323333 #> 2  0.05009      1      3   0.99583622 -1.16060056  0.28194530 #> 3  0.10008      1      3   0.88771347 -0.46845208  0.22788392 #> 4  0.15007      1      3   0.77340972 -0.06332009  0.17073205 #> 5  0.20006      1      3   0.65217518  0.22419538  0.11011478 #> 6  0.25005      1      3   0.52311481  0.44723895  0.04558459 #> 7  0.30004      1      3   0.38514811  0.62949385 -0.02339876 #> 8  0.35003      1      3   0.23695415  0.78359692 -0.09749574 #> 9  0.40002      1      3   0.07689437  0.91709260 -0.17752562 #> 10 0.45001      1      3  -0.09709808  1.03484786 -0.26452185 #> 11 0.50000      1      3  -0.28768207  1.14018615 -0.35981385 #> 12 0.54999      1      3  -0.49835866  1.23547815 -0.46515214 #> 13 0.59998      1      3  -0.73386918  1.32247438 -0.58290740 #> 14 0.64997      1      3  -1.00086054  1.40250426 -0.71640308 #> 15 0.69996      1      3  -1.30906667  1.47660124 -0.87050615 #> 16 0.74995      1      3  -1.67357647  1.54558459 -1.05276105 #> 17 0.79994      1      3  -2.11966363  1.61011478 -1.27580462 #> 18 0.84993      1      3  -2.69469457  1.67073205 -1.56332009 #> 19 0.89992      1      3  -3.50495854  1.72788392 -1.96845208 #> 20 0.94991      1      3  -4.88925549  1.78194530 -2.66060056 #> 21 0.99990      1      3 -17.32206846  1.83323333 -8.87700704  et <- et(seq(1e-4, 1-1e-4, length.out=21)) et$shape1 <- 0.5 et$shape2 <- 1.5  model <- function() {   model({     fx <- llikBeta(time, shape1, shape2)     dShape1 <- llikBetaDshape1(time, shape1, shape2)     dShape2 <- llikBetaDshape2(time, shape1, shape2)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 21 × 6 #>     time     fx dShape1 dShape2 shape1 shape2 #>    <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl> #> 1 0.0001 4.15   -6.82    0.386     0.5    1.5 #> 2 0.0501 1.02   -0.608   0.335     0.5    1.5 #> 3 0.100  0.647   0.0845  0.281     0.5    1.5 #> 4 0.150  0.415   0.490   0.224     0.5    1.5 #> 5 0.200  0.241   0.777   0.163     0.5    1.5 #> 6 0.250  0.0976  1.00    0.0985    0.5    1.5 #> # ℹ 15 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"Calculate log likelihood binomial function (derivatives)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"","code":"llikBinom(x, size, prob, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"x Number successes size Size trial prob probability success full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"data frame fx pdf value dProb derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"rxode2() model, can use llikBinom() use arguments.  can also get derivative prob llikBinomDprob()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikBinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the log likelihood of the binomial function (and its derivatives) — llikBinom","text":"","code":"# \\donttest{ llikBinom(46:54, 100, 0.5) #>          fx dProb #> 1 -2.848030   -16 #> 2 -2.709193   -12 #> 3 -2.610102    -8 #> 4 -2.550679    -4 #> 5 -2.530876     0 #> 6 -2.550679     4 #> 7 -2.610102     8 #> 8 -2.709193    12 #> 9 -2.848030    16  llikBinom(46:54, 100, 0.5, TRUE) #>    x size prob        fx dProb #> 1 46  100  0.5 -2.848030   -16 #> 2 47  100  0.5 -2.709193   -12 #> 3 48  100  0.5 -2.610102    -8 #> 4 49  100  0.5 -2.550679    -4 #> 5 50  100  0.5 -2.530876     0 #> 6 51  100  0.5 -2.550679     4 #> 7 52  100  0.5 -2.610102     8 #> 8 53  100  0.5 -2.709193    12 #> 9 54  100  0.5 -2.848030    16  # In rxode2 you can use:  et <- et(46:54) et$size <- 100 et$prob <-0.5  model <- function() {   model({     fx <- llikBinom(time, size, prob)     dProb <- llikBinomDprob(time, size, prob)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 9 × 5 #>    time    fx dProb  size  prob #>   <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    46 -2.85   -16   100   0.5 #> 2    47 -2.71   -12   100   0.5 #> 3    48 -2.61    -8   100   0.5 #> 4    49 -2.55    -4   100   0.5 #> 5    50 -2.53     0   100   0.5 #> 6    51 -2.55     4   100   0.5 #> # ℹ 3 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"log likelihood Cauchy distribution derivatives (stan)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"","code":"llikCauchy(x, location = 0, scale = 1, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"x Observation location, scale location scale parameters. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"data frame fx log pdf value dLocation dScale derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"rxode2() model, can use llikCauchy() use arguments.  can also get derivative location scale llikCauchyDlocation() llikCauchyDscale().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikCauchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood of Cauchy distribution and it's derivatives (from stan) — llikCauchy","text":"","code":"# \\donttest{ x <- seq(-3, 3, length.out = 21)  llikCauchy(x, 0, 1) #>           fx  dLocation     dScale #> 1  -3.447315 -0.6000000  0.8000000 #> 2  -3.259780 -0.6513872  0.7587455 #> 3  -3.055753 -0.7100592  0.7041420 #> 4  -2.832979 -0.7763401  0.6303142 #> 5  -2.589293 -0.8490566  0.5283019 #> 6  -2.323385 -0.9230769  0.3846154 #> 7  -2.036728 -0.9836066  0.1803279 #> 8  -1.738057 -0.9944751 -0.1049724 #> 9  -1.452215 -0.8823529 -0.4705882 #> 10 -1.230908 -0.5504587 -0.8348624 #> 11 -1.144730  0.0000000 -1.0000000 #> 12 -1.230908  0.5504587 -0.8348624 #> 13 -1.452215  0.8823529 -0.4705882 #> 14 -1.738057  0.9944751 -0.1049724 #> 15 -2.036728  0.9836066  0.1803279 #> 16 -2.323385  0.9230769  0.3846154 #> 17 -2.589293  0.8490566  0.5283019 #> 18 -2.832979  0.7763401  0.6303142 #> 19 -3.055753  0.7100592  0.7041420 #> 20 -3.259780  0.6513872  0.7587455 #> 21 -3.447315  0.6000000  0.8000000  llikCauchy(x, 3, 1, full=TRUE) #>       x location scale        fx  dLocation     dScale #> 1  -3.0        3     1 -4.755648 -0.3243243  0.9459459 #> 2  -2.7        3     1 -4.655977 -0.3404001  0.9402807 #> 3  -2.4        3     1 -4.551246 -0.3580902  0.9336870 #> 4  -2.1        3     1 -4.440937 -0.3776379  0.9259534 #> 5  -1.8        3     1 -4.324449 -0.3993344  0.9168053 #> 6  -1.5        3     1 -4.201087 -0.4235294  0.9058824 #> 7  -1.2        3     1 -4.070040 -0.4506438  0.8927039 #> 8  -0.9        3     1 -3.930358 -0.4811845  0.8766194 #> 9  -0.6        3     1 -3.780926 -0.5157593  0.8567335 #> 10 -0.3        3     1 -3.620428 -0.5550883  0.8317914 #> 11  0.0        3     1 -3.447315 -0.6000000  0.8000000 #> 12  0.3        3     1 -3.259780 -0.6513872  0.7587455 #> 13  0.6        3     1 -3.055753 -0.7100592  0.7041420 #> 14  0.9        3     1 -2.832979 -0.7763401  0.6303142 #> 15  1.2        3     1 -2.589293 -0.8490566  0.5283019 #> 16  1.5        3     1 -2.323385 -0.9230769  0.3846154 #> 17  1.8        3     1 -2.036728 -0.9836066  0.1803279 #> 18  2.1        3     1 -1.738057 -0.9944751 -0.1049724 #> 19  2.4        3     1 -1.452215 -0.8823529 -0.4705882 #> 20  2.7        3     1 -1.230908 -0.5504587 -0.8348624 #> 21  3.0        3     1 -1.144730  0.0000000 -1.0000000  et <- et(-3, 3, length.out=10) et$location <- 0 et$scale <- 1  model <- function() {   model({     fx <- llikCauchy(time, location, scale)     dLocation <- llikCauchyDlocation(time, location, scale)     dScale <- llikCauchyDscale(time, location, scale)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 6 #>     time    fx dLocation dScale location scale #>    <dbl> <dbl>     <dbl>  <dbl>    <dbl> <dbl> #> 1 -3     -3.45    -0.6    0.8          0     1 #> 2 -2.33  -3.01    -0.724  0.690        0     1 #> 3 -1.67  -2.47    -0.882  0.471        0     1 #> 4 -1     -1.84    -1      0            0     1 #> 5 -0.333 -1.25    -0.6   -0.8          0     1 #> 6  0.333 -1.25     0.600 -0.8          0     1 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for chi-squared distribution — llikChisq","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"log likelihood derivatives chi-squared distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"","code":"llikChisq(x, df, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"x variable distributed chi-squared distribution df degrees freedom (non-negative, can non-integer). full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"data frame fx log pdf value dDf derivatives respect df parameter observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"rxode2() model, can use llikChisq() use x df arguments.  can also get derivative df llikChisqDdf().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikChisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for chi-squared distribution — llikChisq","text":"","code":"# \\donttest{ llikChisq(1, df = 1:3, full=TRUE) #>   x df        fx         dDf #> 1 1  1 -1.418939  0.63518142 #> 2 1  2 -1.193147 -0.05796576 #> 3 1  3 -1.418939 -0.36481858  llikChisq(1, df = 6:9) #>          fx        dDf #> 1 -3.272589 -0.8079658 #> 2 -4.126989 -0.8981519 #> 3 -5.064348 -0.9746324 #> 4 -6.072899 -1.0410091  et <- et(1:3) et$x <- 1  model <- function() {   model({    fx <- llikChisq(x, time)    dDf <- llikChisqDdf(x, time)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 3 × 4 #>    time    fx     dDf     x #>   <dbl> <dbl>   <dbl> <dbl> #> 1     1 -1.42  0.635      1 #> 2     2 -1.19 -0.0580     1 #> 3     3 -1.42 -0.365      1 # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for exponential distribution — llikExp","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"log likelihood derivatives exponential distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"","code":"llikExp(x, rate, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"x variable distributed exponential distribution rate vector rates. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"data frame fx log pdf value dRate derivatives respect rate parameter observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"rxode2() model, can use llikExp() use x rate arguments.  can also get derivative rate llikExpDrate().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikExp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for exponential distribution — llikExp","text":"","code":"# \\donttest{ llikExp(1, 1:3) #>          fx      dRate #> 1 -1.000000  0.0000000 #> 2 -1.306853 -0.5000000 #> 3 -1.901388 -0.6666667  llikExp(1, 1:3, full=TRUE) #>   x rate        fx      dRate #> 1 1    1 -1.000000  0.0000000 #> 2 1    2 -1.306853 -0.5000000 #> 3 1    3 -1.901388 -0.6666667  # You can use rxode2 for these too:  et <- et(1:3) et$x <- 1  model <- function() {   model({     fx <- llikExp(x, time)     dRate <- llikExpDrate(x, time)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 3 × 4 #>    time    fx  dRate     x #>   <dbl> <dbl>  <dbl> <dbl> #> 1     1 -1     0         1 #> 2     2 -1.31 -0.5       1 #> 3     3 -1.90 -0.667     1 # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for F distribution — llikF","title":"log likelihood and derivatives for F distribution — llikF","text":"log likelihood derivatives F distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for F distribution — llikF","text":"","code":"llikF(x, df1, df2, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for F distribution — llikF","text":"x variable distributed f distribution df1, df2 degrees freedom.  Inf allowed. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for F distribution — llikF","text":"data frame fx log pdf value dDf1 dDf2 derivatives respect df1/df2 parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for F distribution — llikF","text":"rxode2() model, can use llikF() use x rate arguments.  can also get derivative df1 df2 llikFDdf1() llikFDdf2().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for F distribution — llikF","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for F distribution — llikF","text":"","code":"# \\donttest{ x <- seq(0.001, 5, length.out = 100)  llikF(x^2, 1, 5) #>               fx         dDf1          dDf2 #> 1    5.939135090 -5.769327755  0.0098138672 #> 2    1.996061339 -1.829698617  0.0098667834 #> 3    1.308027230 -1.151720596  0.0100203751 #> 4    0.898151814 -0.758467992  0.0102713542 #> 5    0.601410048 -0.484842238  0.0106143384 #> 6    0.365567397 -0.278507461  0.0110419510 #> 7    0.167275143 -0.115987118  0.0115449567 #> 8   -0.005928407  0.015333168  0.0121124287 #> 9   -0.161467803  0.123053577  0.0127319420 #> 10  -0.304110944  0.212138450  0.0133897879 #> 11  -0.437089645  0.286034532  0.0140712037 #> 12  -0.562684604  0.347253504  0.0147606108 #> 13  -0.682555520  0.397699568  0.0154418570 #> 14  -0.797939098  0.438864917  0.0160984557 #> 15  -0.909773848  0.471951996  0.0167138175 #> 16  -1.018782007  0.497952966  0.0172714700 #> 17  -1.125525217  0.517703019  0.0177552614 #> 18  -1.230443500  0.531917117  0.0181495454 #> 19  -1.333883243  0.541215913  0.0184393449 #> 20  -1.436117763  0.546144408  0.0186104926 #> 21  -1.537362702  0.547185650  0.0186497493 #> 22  -1.637787764  0.544770962  0.0185448973 #> 23  -1.737525805  0.539287723  0.0182848126 #> 24  -1.836679954  0.531085385  0.0178595139 #> 25  -1.935329266  0.520480216  0.0172601925 #> 26  -2.033533263  0.507759100  0.0164792220 #> 27  -2.131335592  0.493182655  0.0155101530 #> 28  -2.228767013  0.476987816  0.0143476919 #> 29  -2.325847849  0.459390036  0.0129876676 #> 30  -2.422589998  0.440585182  0.0114269877 #> 31  -2.518998603  0.420751193  0.0096635860 #> 32  -2.615073425  0.400049565  0.0076963639 #> 33  -2.710810000  0.378626673  0.0055251263 #> 34  -2.806200581  0.356614982  0.0031505147 #> 35  -2.901234940  0.334134152  0.0005739382 #> 36  -2.995901017  0.311292055 -0.0022024960 #> 37  -3.090185467  0.288185720 -0.0051760516 #> 38  -3.184074111  0.264902202 -0.0083434311 #> 39  -3.277552304  0.241519400 -0.0117008417 #> 40  -3.370605236  0.218106810 -0.0152440579 #> 41  -3.463218177  0.194726229 -0.0189684823 #> 42  -3.555376677  0.171432411 -0.0228692014 #> 43  -3.647066718  0.148273673 -0.0269410395 #> 44  -3.738274839  0.125292465 -0.0311786073 #> 45  -3.828988227  0.102525891 -0.0355763478 #> 46  -3.919194789  0.080006197 -0.0401285781 #> 47  -4.008883199  0.057761220 -0.0448295271 #> 48  -4.098042931  0.035814802 -0.0496733702 #> 49  -4.186664276  0.014187176 -0.0546542601 #> 50  -4.274738350 -0.007104684 -0.0597663547 #> 51  -4.362257091 -0.028046739 -0.0650038410 #> 52  -4.449213248 -0.048627585 -0.0703609577 #> 53  -4.535600366 -0.068838184 -0.0758320130 #> 54  -4.621412763 -0.088671614 -0.0814114015 #> 55  -4.706645505 -0.108122840 -0.0870936184 #> 56  -4.791294380 -0.127188508 -0.0928732707 #> 57  -4.875355868 -0.145866755 -0.0987450876 #> 58  -4.958827105 -0.164157039 -0.1047039284 #> 59  -5.041705859 -0.182059980 -0.1107447891 #> 60  -5.123990491 -0.199577223 -0.1168628074 #> 61  -5.205679923 -0.216711307 -0.1230532668 #> 62  -5.286773611 -0.233465550 -0.1293115988 #> 63  -5.367271506 -0.249843943 -0.1356333846 #> 64  -5.447174028 -0.265851061 -0.1420143563 #> 65  -5.526482033 -0.281491973 -0.1484503963 #> 66  -5.605196787 -0.296772169 -0.1549375368 #> 67  -5.683319932 -0.311697491 -0.1614719584 #> 68  -5.760853464 -0.326274073 -0.1680499885 #> 69  -5.837799706 -0.340508283 -0.1746680988 #> 70  -5.914161282 -0.354406680 -0.1813229026 #> 71  -5.989941093 -0.367975967 -0.1880111521 #> 72  -6.065142296 -0.381222952 -0.1947297352 #> 73  -6.139768282 -0.394154517 -0.2014756717 #> 74  -6.213822655 -0.406777586 -0.2082461105 #> 75  -6.287309215 -0.419099097 -0.2150383254 #> 76  -6.360231938 -0.431125983 -0.2218497115 #> 77  -6.432594959 -0.442865149 -0.2286777813 #> 78  -6.504402560 -0.454323453 -0.2355201612 #> 79  -6.575659147 -0.465507693 -0.2423745875 #> 80  -6.646369247 -0.476424593 -0.2492389023 #> 81  -6.716537483 -0.487080791 -0.2561110501 #> 82  -6.786168572 -0.497482830 -0.2629890742 #> 83  -6.855267306 -0.507637151 -0.2698711122 #> 84  -6.923838547 -0.517550083 -0.2767553934 #> 85  -6.991887212 -0.527227840 -0.2836402345 #> 86  -7.059418267 -0.536676516 -0.2905240366 #> 87  -7.126436719 -0.545902081 -0.2974052813 #> 88  -7.192947604 -0.554910380 -0.3042825282 #> 89  -7.258955983 -0.563707126 -0.3111544109 #> 90  -7.324466935 -0.572297907 -0.3180196342 #> 91  -7.389485548 -0.580688177 -0.3248769714 #> 92  -7.454016916 -0.588883261 -0.3317252608 #> 93  -7.518066132 -0.596888352 -0.3385634034 #> 94  -7.581638284 -0.604708517 -0.3453903600 #> 95  -7.644738447 -0.612348689 -0.3522051484 #> 96  -7.707371685 -0.619813679 -0.3590068413 #> 97  -7.769543041 -0.627108167 -0.3657945633 #> 98  -7.831257537 -0.634236713 -0.3725674892 #> 99  -7.892520171 -0.641203751 -0.3793248413 #> 100 -7.953335909 -0.648013598 -0.3860658874  model <- function(){   model({     fx <- llikF(time, df1, df2)     dMean <- llikFDdf1(time, df1, df2)     dSd <- llikFDdf2(time, df1, df2)   }) }  et <- et(x) et$df1 <- 1 et$df2 <- 5  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 100 × 6 #>     time     fx   dMean     dSd   df1   df2 #>    <dbl>  <dbl>   <dbl>   <dbl> <dbl> <dbl> #> 1 0.001   2.48  -2.32   0.00983     1     5 #> 2 0.0515  0.484 -0.380  0.0108      1     5 #> 3 0.102   0.112 -0.0731 0.0117      1     5 #> 4 0.152  -0.118  0.0943 0.0125      1     5 #> 5 0.203  -0.291  0.204  0.0133      1     5 #> 6 0.253  -0.431  0.283  0.0140      1     5 #> # ℹ 94 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for Gamma distribution — llikGamma","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"log likelihood derivatives Gamma distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"","code":"llikGamma(x, shape, rate, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"x variable distributed gamma distribution shape distribution's shape parameter. Must positive. rate distribution's rate parameters.  Must positive. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"data frame fx log pdf value dProb derivatives respect prob parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"rxode2() model, can use llikGamma() use x rate arguments.  can also get derivative shape rate llikGammaDshape() llikGammaDrate().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for Gamma distribution — llikGamma","text":"","code":"# \\donttest{  llikGamma(1, 1, 10) #>          fx   dShape dRate #> 1 -7.697415 2.879801  -0.9  # You can use this in `rxode2` too:  et  <- et(seq(0.001, 1, length.out=10)) et$shape <- 1 et$rate <- 10   model <- function() {   model({     fx <- llikGamma(time, shape, rate)     dShape<- llikGammaDshape(time, shape, rate)     dRate <- llikGammaDrate(time, shape, rate)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 6 #>    time      fx dShape  dRate  rate shape #>   <dbl>   <dbl>  <dbl>  <dbl> <dbl> <dbl> #> 1 0.001  2.29   -4.03   0.099    10     1 #> 2 0.112  1.18    0.691 -0.012    10     1 #> 3 0.223  0.0726  1.38  -0.123    10     1 #> 4 0.334 -1.04    1.78  -0.234    10     1 #> 5 0.445 -2.15    2.07  -0.345    10     1 #> 6 0.556 -3.26    2.29  -0.456    10     1 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for Geom distribution — llikGeom","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"log likelihood derivatives Geom distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"","code":"llikGeom(x, prob, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"x variable distributed geom distribution prob probability success trial. 0 < prob <= 1. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"data frame fx log pdf value dProb derivatives respect prob parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"rxode2() model, can use llikGeom() use x rate arguments.  can also get derivative prob llikGeomDprob().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikGeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for Geom distribution — llikGeom","text":"","code":"# \\donttest{  llikGeom(1:10, 0.2) #>           fx dProb #> 1  -1.832581  3.75 #> 2  -2.055725  2.50 #> 3  -2.278869  1.25 #> 4  -2.502012  0.00 #> 5  -2.725156 -1.25 #> 6  -2.948299 -2.50 #> 7  -3.171443 -3.75 #> 8  -3.394586 -5.00 #> 9  -3.617730 -6.25 #> 10 -3.840873 -7.50  et  <- et(1:10) et$prob <- 0.2   model <- function() {   model({     fx <- llikGeom(time, prob)     dProb <- llikGeomDprob(time, prob)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 4 #>    time    fx dProb  prob #>   <dbl> <dbl> <dbl> <dbl> #> 1     1 -1.83  3.75   0.2 #> 2     2 -2.06  2.5    0.2 #> 3     3 -2.28  1.25   0.2 #> 4     4 -2.50  0      0.2 #> 5     5 -2.73 -1.25   0.2 #> 6     6 -2.95 -2.5    0.2 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"Calculate log likelihood negative binomial function (derivatives)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"","code":"llikNbinom(x, size, prob, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"x Number successes size Size trial prob probability success full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"data frame fx pdf value dProb derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"rxode2() model, can use llikNbinom() use arguments.  can also get derivative prob llikNbinomDprob()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinom","text":"","code":"# \\donttest{ llikNbinom(46:54, 100, 0.5) #>          fx dProb #> 1 -13.25200   108 #> 2 -12.81168   106 #> 3 -12.38560   104 #> 4 -11.97335   102 #> 5 -11.57458   100 #> 6 -11.18892    98 #> 7 -10.81603    96 #> 8 -10.45559    94 #> 9 -10.10728    92  llikNbinom(46:54, 100, 0.5, TRUE) #>    x size prob        fx dProb #> 1 46  100  0.5 -13.25200   108 #> 2 47  100  0.5 -12.81168   106 #> 3 48  100  0.5 -12.38560   104 #> 4 49  100  0.5 -11.97335   102 #> 5 50  100  0.5 -11.57458   100 #> 6 51  100  0.5 -11.18892    98 #> 7 52  100  0.5 -10.81603    96 #> 8 53  100  0.5 -10.45559    94 #> 9 54  100  0.5 -10.10728    92  # In rxode2 you can use:  et <- et(46:54) et$size <- 100 et$prob <-0.5  model <- function() {   model({     fx <- llikNbinom(time, size, prob)     dProb <- llikNbinomDprob(time, size, prob)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 9 × 5 #>    time    fx dProb  size  prob #>   <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    46 -13.3   108   100   0.5 #> 2    47 -12.8   106   100   0.5 #> 3    48 -12.4   104   100   0.5 #> 4    49 -12.0   102   100   0.5 #> 5    50 -11.6   100   100   0.5 #> 6    51 -11.2    98   100   0.5 #> # ℹ 3 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"Calculate log likelihood negative binomial function (derivatives)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"","code":"llikNbinomMu(x, size, mu, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"x Number successes size Size trial mu mu parameter negative binomial full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"data frame fx pdf value dProb derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"rxode2() model, can use llikNbinomMu() use arguments.  can also get derivative mu llikNbinomMuDmu()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNbinomMu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the log likelihood of the negative binomial function (and its derivatives) — llikNbinomMu","text":"","code":"# \\donttest{ llikNbinomMu(46:54, 100, 40) #>          fx       dMu #> 1 -3.326828 0.1071429 #> 2 -3.446132 0.1250000 #> 3 -3.579663 0.1428571 #> 4 -3.727034 0.1607143 #> 5 -3.887874 0.1785714 #> 6 -4.061827 0.1964286 #> 7 -4.248554 0.2142857 #> 8 -4.447728 0.2321429 #> 9 -4.659037 0.2500000  llikNbinomMu(46:54, 100, 40, TRUE) #>    x size mu        fx       dMu #> 1 46  100 40 -3.326828 0.1071429 #> 2 47  100 40 -3.446132 0.1250000 #> 3 48  100 40 -3.579663 0.1428571 #> 4 49  100 40 -3.727034 0.1607143 #> 5 50  100 40 -3.887874 0.1785714 #> 6 51  100 40 -4.061827 0.1964286 #> 7 52  100 40 -4.248554 0.2142857 #> 8 53  100 40 -4.447728 0.2321429 #> 9 54  100 40 -4.659037 0.2500000  et <- et(46:54) et$size <- 100 et$mu <- 40  model <- function() {   model({     fx <- llikNbinomMu(time, size, mu)     dProb <- llikNbinomMuDmu(time, size, mu)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 9 × 5 #>    time    fx dProb  size    mu #>   <dbl> <dbl> <dbl> <dbl> <dbl> #> 1    46 -3.33 0.107   100    40 #> 2    47 -3.45 0.125   100    40 #> 3    48 -3.58 0.143   100    40 #> 4    49 -3.73 0.161   100    40 #> 5    50 -3.89 0.179   100    40 #> 6    51 -4.06 0.196   100    40 #> # ℹ 3 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Log likelihood for normal distribution — llikNorm","title":"Log likelihood for normal distribution — llikNorm","text":"Log likelihood normal distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log likelihood for normal distribution — llikNorm","text":"","code":"llikNorm(x, mean = 0, sd = 1, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log likelihood for normal distribution — llikNorm","text":"x Observation mean Mean likelihood sd Standard deviation likelihood full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log likelihood for normal distribution — llikNorm","text":"data frame fx pdf value dMean dSd derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log likelihood for normal distribution — llikNorm","text":"rxode2() model, can use llikNorm() use arguments.  can also get derivatives llikNormDmean() llikNormDsd()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log likelihood for normal distribution — llikNorm","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikNorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log likelihood for normal distribution — llikNorm","text":"","code":"# \\donttest{  llikNorm(0) #>           fx dMean dSd #> 1 -0.9189385     0  -1  llikNorm(seq(-2,2,length.out=10), full=TRUE) #>             x mean sd         fx      dMean        dSd #> 1  -2.0000000    0  1 -2.9189385 -2.0000000  3.0000000 #> 2  -1.5555556    0  1 -2.1288151 -1.5555556  1.4197531 #> 3  -1.1111111    0  1 -1.5362225 -1.1111111  0.2345679 #> 4  -0.6666667    0  1 -1.1411608 -0.6666667 -0.5555556 #> 5  -0.2222222    0  1 -0.9436299 -0.2222222 -0.9506173 #> 6   0.2222222    0  1 -0.9436299  0.2222222 -0.9506173 #> 7   0.6666667    0  1 -1.1411608  0.6666667 -0.5555556 #> 8   1.1111111    0  1 -1.5362225  1.1111111  0.2345679 #> 9   1.5555556    0  1 -2.1288151  1.5555556  1.4197531 #> 10  2.0000000    0  1 -2.9189385  2.0000000  3.0000000  # With rxode2 you can use:   et <- et(-3, 3, length.out=10) et$mu <- 0 et$sigma <- 1  model <- function(){   model({     fx <- llikNorm(time, mu, sigma)     dMean <- llikNormDmean(time, mu, sigma)     dSd <- llikNormDsd(time, mu, sigma)   })  }  ret <- rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ ret #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 6 #>     time     fx  dMean    dSd    mu sigma #>    <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> #> 1 -3     -5.42  -3      8         0     1 #> 2 -2.33  -3.64  -2.33   4.44      0     1 #> 3 -1.67  -2.31  -1.67   1.78      0     1 #> 4 -1     -1.42  -1      0         0     1 #> 5 -0.333 -0.974 -0.333 -0.889     0     1 #> 6  0.333 -0.974  0.333 -0.889     0     1 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":null,"dir":"Reference","previous_headings":"","what":"log-likelihood for the Poisson distribution — llikPois","title":"log-likelihood for the Poisson distribution — llikPois","text":"log-likelihood Poisson distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log-likelihood for the Poisson distribution — llikPois","text":"","code":"llikPois(x, lambda, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log-likelihood for the Poisson distribution — llikPois","text":"x non negative integers lambda non-negative means full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log-likelihood for the Poisson distribution — llikPois","text":"data frame fx pdf value dLambda derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log-likelihood for the Poisson distribution — llikPois","text":"rxode2() model, can use llikPois() use arguments.  can also get derivatives llikPoisDlambda()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log-likelihood for the Poisson distribution — llikPois","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikPois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log-likelihood for the Poisson distribution — llikPois","text":"","code":"# \\donttest{ llikPois(0:7, lambda = 1) #>          fx dLambda #> 1 -1.000000      -1 #> 2 -1.000000       0 #> 3 -1.693147       1 #> 4 -2.791759       2 #> 5 -4.178054       3 #> 6 -5.787492       4 #> 7 -7.579251       5 #> 8 -9.525161       6  llikPois(0:7, lambda = 4, full=TRUE) #>   x lambda        fx dLambda #> 1 0      4 -4.000000   -1.00 #> 2 1      4 -2.613706   -0.75 #> 3 2      4 -1.920558   -0.50 #> 4 3      4 -1.632876   -0.25 #> 5 4      4 -1.632876    0.00 #> 6 5      4 -1.856020    0.25 #> 7 6      4 -2.261485    0.50 #> 8 7      4 -2.821101    0.75  # In rxode2 you can use:  et <- et(0:10) et$lambda <- 0.5  model <- function() {   model({     fx <- llikPois(time, lambda)     dLambda <- llikPoisDlambda(time, lambda)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 11 × 4 #>    time    fx dLambda lambda #>   <dbl> <dbl>   <dbl>  <dbl> #> 1     0 -0.5       -1    0.5 #> 2     1 -1.19       1    0.5 #> 3     2 -2.58       3    0.5 #> 4     3 -4.37       5    0.5 #> 5     4 -6.45       7    0.5 #> 6     5 -8.75       9    0.5 #> # ℹ 5 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":null,"dir":"Reference","previous_headings":"","what":"Log likelihood of T and it's derivatives (from stan) — llikT","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"Log likelihood T derivatives (stan)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"","code":"llikT(x, df, mean = 0, sd = 1, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"x Observation df degrees freedom (\\(> 0\\), maybe non-integer).  df       = Inf allowed. mean Mean likelihood sd Standard deviation likelihood full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"data frame fx log pdf value dDf dMean dSd derivatives respect parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"rxode2() model, can use llikT() use arguments.  can also get derivative df, mean sd llikTDdf(), llikTDmean() llikTDsd().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log likelihood of T and it's derivatives (from stan) — llikT","text":"","code":"# \\donttest{ x <- seq(-3, 3, length.out = 21)  llikT(x, 7, 0, 1) #>            fx          dDf      dMean        dSd #> 1  -4.2612484 -0.086858773 -1.5000000  3.5000000 #> 2  -3.8091335 -0.060260433 -1.5115465  3.0811756 #> 3  -3.3561547 -0.037201674 -1.5047022  2.6112853 #> 4  -2.9088542 -0.018379169 -1.4723926  2.0920245 #> 5  -2.4761000 -0.004340221 -1.4062500  1.5312500 #> 6  -2.0693878  0.004691380 -1.2972973  0.9459459 #> 7  -1.7028228  0.009010785 -1.1374408  0.3649289 #> 8  -1.3925134  0.009569214 -0.9218950 -0.1702945 #> 9  -1.1551333  0.007927361 -0.6521739 -0.6086957 #> 10 -1.0056349  0.005918024 -0.3385049 -0.8984485 #> 11 -0.9545342  0.005051942  0.0000000 -1.0000000 #> 12 -1.0056349  0.005918024  0.3385049 -0.8984485 #> 13 -1.1551333  0.007927361  0.6521739 -0.6086957 #> 14 -1.3925134  0.009569214  0.9218950 -0.1702945 #> 15 -1.7028228  0.009010785  1.1374408  0.3649289 #> 16 -2.0693878  0.004691380  1.2972973  0.9459459 #> 17 -2.4761000 -0.004340221  1.4062500  1.5312500 #> 18 -2.9088542 -0.018379169  1.4723926  2.0920245 #> 19 -3.3561547 -0.037201674  1.5047022  2.6112853 #> 20 -3.8091335 -0.060260433  1.5115465  3.0811756 #> 21 -4.2612484 -0.086858773  1.5000000  3.5000000  llikT(x, 15, 0, 1, full=TRUE) #>            fx           dDf      dMean        dSd #> 1  -4.6956220 -0.0338931511 -2.0000000  5.0000000 #> 2  -4.1042965 -0.0225073150 -1.9380888  4.2328398 #> 3  -3.5354158 -0.0134033865 -1.8497110  3.4393064 #> 4  -2.9974985 -0.0065857823 -1.7310665  2.6352396 #> 5  -2.5001272 -0.0019378861 -1.5789474  1.8421053 #> 6  -2.0536885  0.0007929097 -1.3913043  1.0869565 #> 7  -1.6689304  0.0019903977 -1.1678832  0.4014599 #> 8  -1.3563325  0.0021369166 -0.9108159 -0.1802657 #> 9  -1.1253251  0.0017504002 -0.6250000 -0.6250000 #> 10 -0.9834495  0.0012985422 -0.3180915 -0.9045726 #> 11 -0.9355929  0.0011086635  0.0000000 -1.0000000 #> 12 -0.9834495  0.0012985422  0.3180915 -0.9045726 #> 13 -1.1253251  0.0017504002  0.6250000 -0.6250000 #> 14 -1.3563325  0.0021369166  0.9108159 -0.1802657 #> 15 -1.6689304  0.0019903977  1.1678832  0.4014599 #> 16 -2.0536885  0.0007929097  1.3913043  1.0869565 #> 17 -2.5001272 -0.0019378861  1.5789474  1.8421053 #> 18 -2.9974985 -0.0065857823  1.7310665  2.6352396 #> 19 -3.5354158 -0.0134033865  1.8497110  3.4393064 #> 20 -4.1042965 -0.0225073150  1.9380888  4.2328398 #> 21 -4.6956220 -0.0338931511  2.0000000  5.0000000  et <- et(-3, 3, length.out=10) et$nu <- 7 et$mean <- 0 et$sd <- 1  model <- function() {   model({     fx <- llikT(time, nu, mean, sd)     dDf <- llikTDdf(time, nu, mean, sd)     dMean <- llikTDmean(time, nu, mean, sd)     dSd   <- llikTDsd(time, nu, mean, sd)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 8 #>     time    fx       dDf  dMean    dSd    nu  mean    sd #>    <dbl> <dbl>     <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 -3     -4.26 -0.0869   -1.5    3.5       7     0     1 #> 2 -2.33  -3.26 -0.0326   -1.5    2.5       7     0     1 #> 3 -1.67  -2.29  0.000289 -1.36   1.27      7     0     1 #> 4 -1     -1.49  0.00971  -1      0         7     0     1 #> 5 -0.333 -1.02  0.00611  -0.375 -0.875     7     0     1 #> 6  0.333 -1.02  0.00611   0.375 -0.875     7     0     1 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for Unif distribution — llikUnif","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"log likelihood derivatives Unif distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"","code":"llikUnif(x, alpha, beta, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"x variable distributed uniform distribution alpha lower limit uniform distribution beta upper limit distribution full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"data frame fx log pdf value dProb derivatives respect prob parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"rxode2() model, can use llikUnif() use x rate arguments.  can also get derivative alpha beta llikUnifDalpha() llikUnifDbeta().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikUnif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for Unif distribution — llikUnif","text":"","code":"# \\donttest{  llikUnif(1, -2, 2) #>          fx dAlpha dBeta #> 1 -1.386294   0.25 -0.25  et  <- et(seq(1,1, length.out=4)) et$alpha <- -2 et$beta <- 2   model <- function() {   model({     fx <- llikUnif(time, alpha, beta)     dAlpha<- llikUnifDalpha(time, alpha, beta)     dBeta <- llikUnifDbeta(time, alpha, beta)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 6 #>    time    fx dAlpha dBeta alpha  beta #>   <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1     1 -1.39   0.25 -0.25    -2     2 #> 2     1 -1.39   0.25 -0.25    -2     2 #> 3     1 -1.39   0.25 -0.25    -2     2 #> 4     1 -1.39   0.25 -0.25    -2     2 # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":null,"dir":"Reference","previous_headings":"","what":"log likelihood and derivatives for Weibull distribution — llikWeibull","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"log likelihood derivatives Weibull distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"","code":"llikWeibull(x, shape, scale, full = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"x variable distributed Weibull distribution shape, scale shape scale parameters, latter defaulting 1. full Add data frame showing x, mean, sd well fx derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"data frame fx log pdf value dProb derivatives respect prob parameters observation time-point","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"rxode2() model, can use llikWeibull() use x rate arguments.  can also get derivative shape scale llikWeibullDshape() llikWeibullDscale().","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/llikWeibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log likelihood and derivatives for Weibull distribution — llikWeibull","text":"","code":"# \\donttest{ llikWeibull(1, 1, 10) #>          fx    dShape dScale #> 1 -2.402585 -1.072327  -0.09  # rxode2 can use this too:  et  <- et(seq(0.001, 1, length.out=10)) et$shape <- 1 et$scale <- 10   model <- function() {   model({     fx <- llikWeibull(time, shape, scale)     dShape<- llikWeibullDshape(time, shape, scale)     dScale <- llikWeibullDscale(time, shape, scale)   }) }  rxSolve(model, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 6 #>    time    fx dShape  dScale shape scale #>   <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl> #> 1 0.001 -2.30  -8.21 -0.1000     1    10 #> 2 0.112 -2.31  -3.44 -0.0989     1    10 #> 3 0.223 -2.32  -2.72 -0.0978     1    10 #> 4 0.334 -2.34  -2.29 -0.0967     1    10 #> 5 0.445 -2.35  -1.97 -0.0956     1    10 #> 6 0.556 -2.36  -1.73 -0.0944     1    10 #> # ℹ 4 more rows # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"logit and inverse logit (expit) functions — logit","title":"logit and inverse logit (expit) functions — logit","text":"logit inverse logit (expit) functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logit and inverse logit (expit) functions — logit","text":"","code":"logit(x, low = 0, high = 1)  expit(alpha, low = 0, high = 1)  logitNormInfo(mean = 0, sd = 1, low = 0, high = 1, abs.tol = 1e-06, ...)  probitNormInfo(mean = 0, sd = 1, low = 0, high = 1, abs.tol = 1e-06, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logit and inverse logit (expit) functions — logit","text":"x Input value(s) range [low,high] translate -Inf Inf low Lowest value range high Highest value range alpha Infinite value(s) translate range [low, high] mean logit-scale mean sd logit-scale standard deviation abs.tol absolute accuracy requested. ... parameters passed integrate()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"logit and inverse logit (expit) functions — logit","text":"values logit expit","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"logit and inverse logit (expit) functions — logit","text":"logit given : logit(p) = -log(1/p-1) : p = x-low/high-low expit given : expit(p, low, high) = (high-low)/(1+exp(-alpha)) + low logitNormInfo() gives mean, variance coefficient variability untransformed scale.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logit and inverse logit (expit) functions — logit","text":"","code":"logit(0.25) #> [1] -1.098612  expit(-1.09) #> [1] 0.2516183  logitNormInfo(logit(0.25), sd = 0.1) #>         mean          var           cv  #> 0.2504672899 0.0003515538 0.0748591440   logitNormInfo(logit(1, 0, 10), sd = 1, low = 0, high = 10) #>      mean       var        cv  #> 1.3386966 1.2662276 0.8405697"},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":null,"dir":"Reference","previous_headings":"","what":"lowergamma: upper incomplete gamma function — lowergamma","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"tgamma_lower boost library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"","code":"lowergamma(a, z)"},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"numeric '' parameter upper incomplete gamma z numeric 'z' parameter upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"lowergamma results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"lowergamma function given : $$lowergamma(, z) = \\int_{0}^{z}t^{-1}\\cdot e^{-t} dt$$","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/lowergamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lowergamma: upper incomplete gamma function — lowergamma","text":"","code":"lowergamma(1, 3) #> [1] 0.9502129  lowergamma(1:3, 3) #> [1] 0.9502129 0.8008517 1.1536198  lowergamma(1, 1:3) #> [1] 0.6321206 0.8646647 0.9502129"},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"generic function meanProbs produces expected confidence bands either t distribution normal sampling distribution. uses qnorm() qt() mean standard deviation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"","code":"meanProbs(x, ...)  # Default S3 method meanProbs(   x,   probs = seq(0, 1, 0.25),   na.rm = FALSE,   names = TRUE,   useT = TRUE,   onlyProbs = TRUE,   pred = FALSE,   n = 0L,   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"x numeric vector whose mean probability based confidence values wanted, NA NaN values allowed numeric vectors unless ‘na.rm’ ‘TRUE’. ... Arguments passed default method, allows many different methods applied. probs numeric vector probabilities values interval 0 1 . na.rm logical; true, NA NaN's removed x quantiles computed. names logical; true, result names attribute. useT logical; true, use t-distribution calculate confidence-based estimates. false use normal distribution calculate confidence based estimates. onlyProbs logical; true, return probability based confidence interval estimates, otherwise return pred logical; true use prediction interval instead confidence interval n integer/integerish; n used calculate prediction confidence interval.  n=0 (default) use number non-NA observations.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"default return probabilities names (named) points expected distribution located given sampling mean standard deviation. onlyProbs=FALSE prepend mean, variance, standard deviation, minimum, maximum number non-NA observations.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"single probability, p, uses either: mean + qt(p, df=n)*sd/sqrt(n) mean + qnorm(p)*sd/sqrt(n) smallest observation corresponds probability 0 largest probability 1 mean corresponds 0.5. mean standard deviation sample calculated based Welford's method single pass. meant perform way quantile() can drop replacement code using quantile() using distributional assumptions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/meanProbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate expected confidence bands or prediction intreval with normal or t sampling distribution — meanProbs","text":"","code":"quantile(x<- rnorm(1001)) #>           0%          25%          50%          75%         100%  #> -3.431442969 -0.682099739  0.005737979  0.740822144  3.218127184  meanProbs(x) #>           0%          25%          50%          75%         100%  #> -3.431442969 -0.002674391  0.019095044  0.040864478  3.218127184   # Can get some extra statistics if you request onlyProbs=FALSE meanProbs(x, onlyProbs=FALSE) #>          mean           var            sd           min           max  #>  1.909504e-02  1.041986e+00  1.020777e+00 -3.431443e+00  3.218127e+00  #>             n            0%           25%           50%           75%  #>  1.001000e+03 -3.431443e+00 -2.674391e-03  1.909504e-02  4.086448e-02  #>          100%  #>  3.218127e+00   x[2] <- NA_real_  meanProbs(x, onlyProbs=FALSE) #> mean  var   sd  min  max    n   0%  25%  50%  75% 100%  #>   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   NA   quantile(x<- rnorm(42)) #>          0%         25%         50%         75%        100%  #> -2.68522697 -0.47955047 -0.05137773  0.92975485  2.47176507   meanProbs(x) #>          0%         25%         50%         75%        100%  #> -2.68522697  0.04280597  0.17620171  0.30959746  2.47176507   meanProbs(x, useT=FALSE) #>          0%         25%         50%         75%        100%  #> -2.68522697  0.04398816  0.17620171  0.30841527  2.47176507"},{"path":"https://nlmixr2.github.io/rxode2/reference/model-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign the model block in the rxode2 related object — model<-","title":"Assign the model block in the rxode2 related object — model<-","text":"Assign model block rxode2 related object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign the model block in the rxode2 related object — model<-","text":"","code":"model(x, envir = environment(x)) <- value"},{"path":"https://nlmixr2.github.io/rxode2/reference/model-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign the model block in the rxode2 related object — model<-","text":"x rxode2 related object envir Environment assignment occurs value Value object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign the model block in the rxode2 related object — model<-","text":"rxode2 related object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model-set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign the model block in the rxode2 related object — model<-","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Model block for rxode2/nlmixr models — model.function","title":"Model block for rxode2/nlmixr models — model.function","text":"Model block rxode2/nlmixr models","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model block for rxode2/nlmixr models — model.function","text":"","code":"# S3 method for class '`function`' model(   x,   ...,   append = NULL,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir = parent.frame() )  # S3 method for class 'rxUi' model(   x,   ...,   append = NULL,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir = parent.frame() )  # S3 method for class 'rxode2' model(   x,   ...,   append = NULL,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir = parent.frame() )  # S3 method for class 'rxModelVars' model(   x,   ...,   append = NULL,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir = parent.frame() )  model(   x,   ...,   append = FALSE,   auto = getOption(\"rxode2.autoVarPiping\", TRUE),   cov = NULL,   envir = parent.frame() )  # Default S3 method model(x, ..., append = FALSE, cov = NULL, envir = parent.frame())"},{"path":"https://nlmixr2.github.io/rxode2/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model block for rxode2/nlmixr models — model.function","text":"x model expression ... arguments append boolean determine lines appended piping.  possible values : TRUE lines appended model instead replaced FALSE lines replaced model (default) NA lines pre-pended model instead replaced lhs expression, append lines last observed line expression lhs auto boolean tells piping automatically selects parameters characterized population parameter, subject variability, covariate.  TRUE automatic selection occurs.  FALSE automatic selection turned everything added covariate (can promoted parameter ini statement). default TRUE, can changed options(rxode2.autoVarPiping=FALSE). cov character vector variables assumed covariates.  override automatic promotion population parameter estimate (eta) envir environment unevaluated model expressions evaluated.  May also NULL, list, data frame, pairlist integer specified sys.call.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model block for rxode2/nlmixr models — model.function","text":"Model block ini information included.  ini must called model block","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model block for rxode2/nlmixr models — model.function","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model lines from a rxui model — modelExtract","title":"Extract model lines from a rxui model — modelExtract","text":"Extract model lines rxui model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model lines from a rxui model — modelExtract","text":"","code":"modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )  # S3 method for class '`function`' modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )  # S3 method for class 'rxUi' modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )  # S3 method for class 'rxode2' modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )  # S3 method for class 'rxModelVars' modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )  # Default S3 method modelExtract(   x,   ...,   expression = FALSE,   endpoint = FALSE,   lines = FALSE,   envir = parent.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model lines from a rxui model — modelExtract","text":"x model extract lines ... variables extract. missing, extract entire model (conditioned endpoint option ) expression return expressions (TRUE) strings (FALSE) endpoint include endpoint.  can : NA    – Missing means include endpoint non-endpoint lines TRUE  – include endpoint lines FALSE – include non-endpoint lines lines boolean.  TRUE add lines attribute output value ie attr(, \"lines\") envir Environment evaluating variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model lines from a rxui model — modelExtract","text":"expressions strings extracted lines. Note duplicated lhs expression line, return lines","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract model lines from a rxui model — modelExtract","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/modelExtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract model lines from a rxui model — modelExtract","text":"","code":"one.compartment <- function() {   ini({     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     tv <- 3.45    # Log V     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v  <- exp(tv + eta.v)     d/dt(depot)  <- -ka * depot     d/dt(center) <-  ka * depot - cl / v * center     cp <- center / v     cp ~ add(add.sd)   })  }   f <- one.compartment()   modelExtract(f, cp) #> [1] \"cp <- center/v\"   modelExtract(one.compartment, d/dt(depot)) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> [1] \"d/dt(depot) <- -ka * depot\"   # from variable  var <- \"d/dt(depot)\"   modelExtract(one.compartment, var) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> [1] \"d/dt(depot) <- -ka * depot\"   modelExtract(f, endpoint=NA, lines=TRUE, expression=TRUE) #> [[1]] #> ka <- exp(tka + eta.ka) #>  #> [[2]] #> cl <- exp(tcl + eta.cl) #>  #> [[3]] #> v <- exp(tv + eta.v) #>  #> [[4]] #> d/dt(depot) <- -ka * depot #>  #> [[5]] #> d/dt(center) <- ka * depot - cl/v * center #>  #> [[6]] #> cp <- center/v #>  #> [[7]] #> cp ~ add(add.sd) #>  #> attr(,\"lines\") #> [1] 1 2 3 4 5 6 7"},{"path":"https://nlmixr2.github.io/rxode2/reference/odeMethodToInt.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between character and integer ODE integration methods for rxode2 — odeMethodToInt","title":"Conversion between character and integer ODE integration methods for rxode2 — odeMethodToInt","text":"NULL given method, choices returned named vector.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/odeMethodToInt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between character and integer ODE integration methods for rxode2 — odeMethodToInt","text":"","code":"odeMethodToInt(method = c(\"liblsoda\", \"lsoda\", \"dop853\", \"indLin\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/odeMethodToInt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between character and integer ODE integration methods for rxode2 — odeMethodToInt","text":"method method solving ODEs.  Currently supports: \"liblsoda\" thread safe lsoda.  supports parallel thread-based solving, ignores user Jacobian specification. \"lsoda\" – LSODA solver.  support parallel thread-based solving, allows user Jacobian specification. \"dop853\" – DOP853 solver.  support parallel thread-based solving user Jacobian specification \"indLin\" – Solving inductive linearization.  rxode2 dll must setup specially use solving routine.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/odeMethodToInt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between character and integer ODE integration methods for rxode2 — odeMethodToInt","text":"integer method (unless input NULL, case, see details)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative distribution of standard normal — phi","title":"Cumulative distribution of standard normal — phi","text":"Cumulative distribution standard normal","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative distribution of standard normal — phi","text":"","code":"phi(q)"},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative distribution of standard normal — phi","text":"q vector quantiles","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative distribution of standard normal — phi","text":"cumulative distribution standard normal distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cumulative distribution of standard normal — phi","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/phi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative distribution of standard normal — phi","text":"","code":"# phi is equivalent to pnorm(x) phi(3) #> [1] 0.9986501  # See pnorm(3) #> [1] 0.9986501  # This is provided for NONMEM-like compatibility in rxode2 models"},{"path":"https://nlmixr2.github.io/rxode2/reference/plot.rxSolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot rxode2 objects — plot.rxSolve","title":"Plot rxode2 objects — plot.rxSolve","text":"Plot rxode2 objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/plot.rxSolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot rxode2 objects — plot.rxSolve","text":"","code":"# S3 method for class 'rxSolve' plot(x, y, ..., log = \"\", xlab = \"Time\", ylab = \"\")  # S3 method for class 'rxSolveConfint1' plot(x, y, ..., xlab = \"Time\", ylab = \"\", log = \"\")  # S3 method for class 'rxSolveConfint2' plot(x, y, ..., xlab = \"Time\", ylab = \"\", log = \"\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/plot.rxSolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot rxode2 objects — plot.rxSolve","text":"x rxode2 object plot y Compartments left-hand-side values plot either bare name character vector ... Ignored log \"\" (neither x y), \"x\", \"y\", \"xy\" (\"yx\") log-scale? xlab, ylab x y axis labels","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/plot.rxSolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot rxode2 objects — plot.rxSolve","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/plus-.rxSolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Solved object with '+' — +.rxSolve","title":"Update Solved object with '+' — +.rxSolve","text":"Update Solved object '+'","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/plus-.rxSolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Solved object with '+' — +.rxSolve","text":"","code":"# S3 method for class 'rxSolve' solved + new"},{"path":"https://nlmixr2.github.io/rxode2/reference/plus-.rxSolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Solved object with '+' — +.rxSolve","text":"solved Solved object new New information added table.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/plus-.rxSolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Solved object with '+' — +.rxSolve","text":"new solved object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/plus-.rxSolve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update Solved object with '+' — +.rxSolve","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxCoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the rxCoef object — print.rxCoef","title":"Print the rxCoef object — print.rxCoef","text":"prints user supplied arguments rxCoef object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxCoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the rxCoef object — print.rxCoef","text":"","code":"# S3 method for class 'rxCoef' print(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxCoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the rxCoef object — print.rxCoef","text":"x rxCoef object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxCoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the rxCoef object — print.rxCoef","text":"original object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxCoef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print the rxCoef object — print.rxCoef","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxDll.html","id":null,"dir":"Reference","previous_headings":"","what":"Print rxDll object — print.rxDll","title":"Print rxDll object — print.rxDll","text":"tells rxDll loaded, ready /deleted.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxDll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print rxDll object — print.rxDll","text":"","code":"# S3 method for class 'rxDll' print(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxDll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print rxDll object — print.rxDll","text":"original object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxDll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print rxDll object — print.rxDll","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Values — print.rxModelVars","title":"Print Values — print.rxModelVars","text":"print prints argument returns invisibly (via   invisible(x)).  generic function means   new printing methods can easily added new classes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Values — print.rxModelVars","text":"","code":"# S3 method for class 'rxModelVars' print(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Values — print.rxModelVars","text":"x object used select method. ... arguments passed methods.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Values — print.rxModelVars","text":"returns invisibly model variables object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Values — print.rxModelVars","text":"default method, print.default help page.   Use methods(\"print\") get methods   print generic. print.factor allows customization used printing   ordered factors well. print.table printing tables allows   customization.  R 3.0.0, prints description case table   0-extents (can happen classifier valid data). See noquote example class whose main   purpose specific print method.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print Values — print.rxModelVars","text":"Chambers, J. M. Hastie, T. J. (1992)   Statistical Models S.   Wadsworth & Brooks/Cole.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxModelVars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Values — print.rxModelVars","text":"","code":"require(stats)  ts(1:20)  #-- print is the \"Default function\" --> print.ts(.) is called #> Time Series: #> Start = 1  #> End = 20  #> Frequency = 1  #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 for(i in 1:3) print(1:i) #> [1] 1 #> [1] 1 2 #> [1] 1 2 3  ## Printing of factors attenu$station ## 117 levels -> 'max.levels' depending on width #>   [1] 117  1083 1095 283  135  475  113  1008 1028 2001 117  1117 1438 1083 1013 #>  [16] 1014 1015 1016 1095 1011 1028 270  280  116  266  117  113  112  130  475  #>  [31] 269  135  1093 1093 111  116  290  112  113  128  126  127  141  266  110  #>  [46] 1027 111  125  135  475  262  269  1052 411  290  130  272  1096 1102 112  #>  [61] 113  1028 2714 2708 2715 3501 655  272  1032 1377 1028 1250 1051 1293 1291 #>  [76] 1292 283  885  <NA> 2734 <NA> 2728 1413 1445 1408 1411 1410 1409 1377 1492 #>  [91] 1251 1422 1376 <NA> 286  <NA> 5028 942  <NA> 5054 958  952  5165 117  955  #> [106] 5055 <NA> <NA> 5060 412  5053 5058 5057 <NA> 5051 <NA> 5115 <NA> 931  5056 #> [121] 5059 5061 <NA> 5062 5052 <NA> 724  <NA> 5066 5050 2316 5055 942  5028 5165 #> [136] 952  958  955  117  412  5053 5054 5058 5057 5115 5056 5060 1030 1418 1383 #> [151] 1308 1298 1299 1219 <NA> <NA> 1030 1418 1383 <NA> 1299 1308 1219 1456 5045 #> [166] 5044 5160 5043 5047 c168 5068 c118 5042 5067 5049 c204 5070 c266 c203 5069 #> [181] 5073 5072 #> 117 Levels: 1008 1011 1013 1014 1015 1016 1027 1028 1030 1032 1051 1052 ... c266  ## ordered factors: levels  \"l1 < l2 < ..\" esoph$agegp[1:12] #>  [1] 25-34 25-34 25-34 25-34 25-34 25-34 25-34 25-34 25-34 25-34 25-34 25-34 #> Levels: 25-34 < 35-44 < 45-54 < 55-64 < 65-74 < 75+ esoph$alcgp[1:12] #>  [1] 0-39g/day 0-39g/day 0-39g/day 0-39g/day 40-79     40-79     40-79     #>  [8] 40-79     80-119    80-119    80-119    120+      #> Levels: 0-39g/day < 40-79 < 80-119 < 120+  ## Printing of sparse (contingency) tables set.seed(521) t1 <- round(abs(rt(200, df = 1.8))) t2 <- round(abs(rt(200, df = 1.4))) table(t1, t2) # simple #>     t2 #> t1    0  1  2  3  4  5  6  7  8 10 17 21 30 #>   0  21 22 14  4  1  0  1  1  1  0  1  0  0 #>   1  25 21  7  3  4  2  1  1  1  1  0  0  0 #>   2   8 16  9  2  0  0  0  0  0  0  0  1  1 #>   3   3  7  0  2  0  0  0  0  0  0  0  0  0 #>   4   1  5  2  0  0  0  1  0  0  0  0  0  0 #>   5   1  1  1  0  0  0  0  0  0  0  0  0  0 #>   6   1  3  0  0  0  0  0  0  0  0  0  0  0 #>   7   1  0  0  0  0  0  0  0  0  0  0  0  0 #>   9   0  0  0  1  0  0  0  0  0  0  0  0  0 #>   12  1  0  0  0  0  0  0  0  0  0  0  0  0 print(table(t1, t2), zero.print = \".\") # nicer to read #>     t2 #> t1    0  1  2  3  4  5  6  7  8 10 17 21 30 #>   0  21 22 14  4  1  .  1  1  1  .  1  .  . #>   1  25 21  7  3  4  2  1  1  1  1  .  .  . #>   2   8 16  9  2  .  .  .  .  .  .  .  1  1 #>   3   3  7  .  2  .  .  .  .  .  .  .  .  . #>   4   1  5  2  .  .  .  1  .  .  .  .  .  . #>   5   1  1  1  .  .  .  .  .  .  .  .  .  . #>   6   1  3  .  .  .  .  .  .  .  .  .  .  . #>   7   1  .  .  .  .  .  .  .  .  .  .  .  . #>   9   .  .  .  1  .  .  .  .  .  .  .  .  . #>   12  1  .  .  .  .  .  .  .  .  .  .  .  .  ## same for non-integer \"table\": T <- table(t2,t1) T <- T * (1+round(rlnorm(length(T)))/4) print(T, zero.print = \".\") # quite nicer, #>     t1 #> t2       0     1     2     3     4     5     6     7     9    12 #>   0  26.25 25.00 10.00  3.75  1.50  1.25  1.25  1.00     .  2.00 #>   1  22.00 26.25 16.00 10.50 27.50  1.25  3.00     .     .     . #>   2  21.00  7.00 13.50     .  3.00  1.25     .     .     .     . #>   3   5.00  3.75  2.50  2.50     .     .     .     .  1.50     . #>   4   1.25  5.00     .     .     .     .     .     .     .     . #>   5      .  2.00     .     .     .     .     .     .     .     . #>   6   1.25  1.50     .     .  1.25     .     .     .     .     . #>   7   1.25  1.25     .     .     .     .     .     .     .     . #>   8   1.50  1.00     .     .     .     .     .     .     .     . #>   10     .  1.00     .     .     .     .     .     .     .     . #>   17  1.00     .     .     .     .     .     .     .     .     . #>   21     .     .  2.75     .     .     .     .     .     .     . #>   30     .     .  5.00     .     .     .     .     .     .     . print.table(T[,2:8] * 1e9, digits=3, zero.print = \".\") #>     t1 #> t2          1        2        3        4        5        6        7 #>   0  2.50e+10 1.00e+10 3.75e+09 1.50e+09 1.25e+09 1.25e+09 1.00e+09 #>   1  2.62e+10 1.60e+10 1.05e+10 2.75e+10 1.25e+09 3.00e+09        . #>   2  7.00e+09 1.35e+10        . 3.00e+09 1.25e+09        .        . #>   3  3.75e+09 2.50e+09 2.50e+09        .        .        .        . #>   4  5.00e+09        .        .        .        .        .        . #>   5  2.00e+09        .        .        .        .        .        . #>   6  1.50e+09        .        . 1.25e+09        .        .        . #>   7  1.25e+09        .        .        .        .        .        . #>   8  1.00e+09        .        .        .        .        .        . #>   10 1.00e+09        .        .        .        .        .        . #>   17        .        .        .        .        .        .        . #>   21        . 2.75e+09        .        .        .        .        . #>   30        . 5.00e+09        .        .        .        .        . ## still slightly inferior to  Matrix::Matrix(T)  for larger T  ## Corner cases with empty extents: table(1, NA) # < table of extent 1 x 0 > #> < table of extent 1 x 0 >"},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Print information about the rxode2 object. — print.rxode2","title":"Print information about the rxode2 object. — print.rxode2","text":"prints model name status able solved","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print information about the rxode2 object. — print.rxode2","text":"","code":"# S3 method for class 'rxode2' print(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print information about the rxode2 object. — print.rxode2","text":"x rxode2 object ... Ignored parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print information about the rxode2 object. — print.rxode2","text":"original object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/print.rxode2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print information about the rxode2 object. — print.rxode2","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/probit.html","id":null,"dir":"Reference","previous_headings":"","what":"probit and inverse probit functions — probit","title":"probit and inverse probit functions — probit","text":"probit inverse probit functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/probit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"probit and inverse probit functions — probit","text":"","code":"probit(x, low = 0, high = 1)  probitInv(x, low = 0, high = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/probit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"probit and inverse probit functions — probit","text":"x Input value(s) range [low,high] translate -Inf Inf low Lowest value range high Highest value range","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/probit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"probit and inverse probit functions — probit","text":"values probit, probitInv probitNormInfo","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/probit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"probit and inverse probit functions — probit","text":"","code":"probit(0.25) #> [1] -0.6744898  probitInv(-0.674) #> [1] 0.2501557  probitNormInfo(probit(0.25), sd = 0.1) #>       mean        var         cv  #> 0.25106491 0.00100658 0.12636827   probitNormInfo(probit(1, 0, 10), sd = 1, low = 0, high = 10) #>     mean      var       cv  #> 1.824166 4.307824 1.137796"},{"path":"https://nlmixr2.github.io/rxode2/reference/rLKJ1.html","id":null,"dir":"Reference","previous_headings":"","what":"One correlation sample from the LKJ distribution — rLKJ1","title":"One correlation sample from the LKJ distribution — rLKJ1","text":"One correlation sample LKJ distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rLKJ1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One correlation sample from the LKJ distribution — rLKJ1","text":"","code":"rLKJ1(d, eta = 1, cholesky = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rLKJ1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One correlation sample from the LKJ distribution — rLKJ1","text":"d dimension correlation matrix eta scaling parameter LKJ distribution. Must > 1.  Also related degrees freedom nu. eta = (nu-1)/2. cholesky boolean; TRUE return cholesky decomposition.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rLKJ1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One correlation sample from the LKJ distribution — rLKJ1","text":"correlation sample LKJ distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rLKJ1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"One correlation sample from the LKJ distribution — rLKJ1","text":"Matthew Fidler (translated RcppArmadillo) Emma Schwager","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 aes, expand_limits, facet_wrap, geom_line, ggplot, label_both, label_context, label_context, label_value, label_wrap_gen, scale_type, scale_x_continuous, scale_x_date, scale_x_discrete, scale_y_continuous, scale_y_date, scale_y_discrete, waiver, xlab, ylab lotri lotri magrittr %>%","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"Inherited parent routine","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rinvchisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled Inverse Chi Squared distribution — rinvchisq","title":"Scaled Inverse Chi Squared distribution — rinvchisq","text":"Scaled Inverse Chi Squared distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rinvchisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled Inverse Chi Squared distribution — rinvchisq","text":"","code":"rinvchisq(n = 1L, nu = 1, scale = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rinvchisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaled Inverse Chi Squared distribution — rinvchisq","text":"n Number random samples nu degrees freedom inverse chi square scale Scale inverse chi squared distribution (default 1).","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rinvchisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaled Inverse Chi Squared distribution — rinvchisq","text":"vector inverse chi squared deviates.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rinvchisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaled Inverse Chi Squared distribution — rinvchisq","text":"","code":"rinvchisq(3, 4, 1) ## Scale = 1, degrees of freedom = 4 #> [1] 1.507912 2.595590 1.620441 rinvchisq(2, 4, 2) ## Scale = 2, degrees of freedom = 4 #> [1] 3.309325 2.550773"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":null,"dir":"Reference","previous_headings":"","what":"Allow unloading of dlls — rxAllowUnload","title":"Allow unloading of dlls — rxAllowUnload","text":"Allow unloading dlls","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allow unloading of dlls — rxAllowUnload","text":"","code":"rxAllowUnload(allow)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allow unloading of dlls — rxAllowUnload","text":"allow boolean indicating garbage collection unload rxode2 dlls.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allow unloading of dlls — rxAllowUnload","text":"Boolean allow; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Allow unloading of dlls — rxAllowUnload","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAllowUnload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Allow unloading of dlls — rxAllowUnload","text":"","code":"# Garbage collection will not unload un-used rxode2 dlls rxAllowUnload(FALSE); #> [1] FALSE  # Garbage collection will unload unused rxode2 dlls rxAllowUnload(TRUE); #> [1] TRUE"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Append two rxui models together — rxAppendModel","title":"Append two rxui models together — rxAppendModel","text":"Append two rxui models together","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append two rxui models together — rxAppendModel","text":"","code":"rxAppendModel(..., common = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append two rxui models together — rxAppendModel","text":"... models append together common boolean determines need common value bind","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append two rxui models together — rxAppendModel","text":"New model models appended together","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Append two rxui models together — rxAppendModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAppendModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append two rxui models together — rxAppendModel","text":"","code":"# \\donttest{  ocmt <- function() {   ini({     tka <- exp(0.45) # Ka     tcl <- exp(1) # Cl     tv <- exp(3.45); # log V     ## the label(\"Label name\") works with all models     add.sd <- 0.7   })   model({     ka <- tka     cl <- tcl     v <- tv     d/dt(depot) <- -ka * depot     d/dt(center) <- ka * depot - cl / v * center     cp <- center / v     cp ~ add(add.sd)   }) }  idr <- function() {   ini({     tkin <- log(1)     tkout <- log(1)     tic50 <- log(10)     gamma <- fix(1)     idr.sd <- 1   })   model({     kin <- exp(tkin)     kout <- exp(tkout)     ic50 <- exp(tic50)     d/dt(eff) <- kin - kout*(1-ceff^gamma/(ic50^gamma+ceff^gamma))     eff ~ add(idr.sd)   }) }  rxAppendModel(ocmt %>% model(ceff=cp,append=TRUE), idr) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd      tkin     tkout     tic50     gamma  #>  1.568312  2.718282 31.500392  0.700000  0.000000  0.000000  2.302585  1.000000  #>    idr.sd  #>  1.000000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #> 3                  3              eff #>  ── Multiple Endpoint Model ($multipleEndpoint): ──   #>   variable                cmt                dvid* #> 1   cp ~ …  cmt='cp' or cmt=4  dvid='cp' or dvid=1 #> 2  eff ~ … cmt='eff' or cmt=3 dvid='eff' or dvid=2 #>   * If dvids are outside this range, all dvids are re-numered sequentially, ie 1,7, 10 becomes 1,2,3 etc #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 1.56831218549017 #>         tcl <- 2.71828182845905 #>         tv <- 31.5003923087479 #>         add.sd <- c(0, 0.7) #>         tkin <- 0 #>         tkout <- 0 #>         tic50 <- 2.30258509299405 #>         gamma <- fix(1) #>         idr.sd <- c(0, 1) #>     }) #>     model({ #>         ka <- tka #>         cl <- tcl #>         v <- tv #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.sd) #>         ceff <- cp #>         kin <- exp(tkin) #>         kout <- exp(tkout) #>         ic50 <- exp(tic50) #>         d/dt(eff) <- kin - kout * (1 - ceff^gamma/(ic50^gamma +  #>             ceff^gamma)) #>         eff ~ add(idr.sd) #>     }) #> }  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignControlValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Control Variable — rxAssignControlValue","title":"Assign Control Variable — rxAssignControlValue","text":"Assign Control Variable","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignControlValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Control Variable — rxAssignControlValue","text":"","code":"rxAssignControlValue(ui, option, value)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignControlValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Control Variable — rxAssignControlValue","text":"ui rxode2 ui function option Option name control modify value Value control modify","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignControlValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Control Variable — rxAssignControlValue","text":"Nothing; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignControlValue.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign Control Variable — rxAssignControlValue","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignPtr.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign pointer based on model variables — rxAssignPtr","title":"Assign pointer based on model variables — rxAssignPtr","text":"Assign pointer based model variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignPtr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign pointer based on model variables — rxAssignPtr","text":"","code":"rxAssignPtr(object = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignPtr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign pointer based on model variables — rxAssignPtr","text":"object rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxAssignPtr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign pointer based on model variables — rxAssignPtr","text":"nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxBlockZeros.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a logical matrix for block matrixes. — rxBlockZeros","title":"Creates a logical matrix for block matrixes. — rxBlockZeros","text":"Creates logical matrix block matrixes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxBlockZeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a logical matrix for block matrixes. — rxBlockZeros","text":"","code":"rxBlockZeros(mat, i)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxBlockZeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a logical matrix for block matrixes. — rxBlockZeros","text":"mat Matrix Row/column block matrix setup.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxBlockZeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a logical matrix for block matrixes. — rxBlockZeros","text":"logical matrix returning elements zero.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxC.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the C file associated with the rxode2 object — rxC","title":"Return the C file associated with the rxode2 object — rxC","text":"return C code generating rxode2 DLL.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the C file associated with the rxode2 object — rxC","text":"","code":"rxC(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the C file associated with the rxode2 object — rxC","text":"obj rxode2 family objects character string model specification location file model specification.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the C file associated with the rxode2 object — rxC","text":"path library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the C file associated with the rxode2 object — rxC","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Use cat when rxode2.verbose is TRUE — rxCat","title":"Use cat when rxode2.verbose is TRUE — rxCat","text":"Use cat rxode2.verbose TRUE","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use cat when rxode2.verbose is TRUE — rxCat","text":"","code":"rxCat(a, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use cat when rxode2.verbose is TRUE — rxCat","text":"... Parameters sent cat","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use cat when rxode2.verbose is TRUE — rxCat","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use cat when rxode2.verbose is TRUE — rxCat","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"Bind study parameters individual parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"","code":"rxCbindStudyIndividual(studyParameters, individualParameters)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"studyParameters study parameters, often can generated sampling population.  can either matrix data frame individualParameters data frame individual parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"Data frame can used rxode2 simulations","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCbindStudyIndividual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind the study parameters and individual parameters — rxCbindStudyIndividual","text":"","code":"# Function for coverting coefficient of covariance into a variance lognCv <- function(x){log((x/100)^2+1)}  set.seed(32)  nSub  <-  100 nStud  <-  10  #define theta theta <- c(lka=log(0.5), # log ka           lCl=log(5), # log Cl           lV=log(300) # log V           )  #define theta Matrix thetaMat <- lotri(lCl ~ lognCv(5),                  lV  ~ lognCv(5),                  lka ~ lognCv(5))   nev <- nSub*nStud  ev1 <- data.frame(COV1=rnorm(nev,50,30),COV2=rnorm(nev,75,10),                   COV3=sample(c(1.0,2.0),nev,replace=TRUE))   tmat <-rxRmvn(nStud, theta[dimnames(thetaMat)[[1]]], thetaMat)  rxCbindStudyIndividual(tmat, ev1) #>           lCl       lV        lka        COV1      COV2 COV3 #> 1    1.611472 5.631300 -0.5361740  50.4392162  70.66196    1 #> 2    1.611472 5.631300 -0.5361740  76.1986612  51.54621    1 #> 3    1.611472 5.631300 -0.5361740  19.1616139  71.83376    1 #> 4    1.611472 5.631300 -0.5361740  70.5699388  97.78351    2 #> 5    1.611472 5.631300 -0.5361740  63.4831094  66.85695    1 #> 6    1.611472 5.631300 -0.5361740  62.2105292  82.55363    2 #> 7    1.611472 5.631300 -0.5361740  58.5419410  62.74875    1 #> 8    1.611472 5.631300 -0.5361740  31.2707182  57.10467    1 #> 9    1.611472 5.631300 -0.5361740  75.1896803  71.51357    2 #> 10   1.611472 5.631300 -0.5361740  59.3383758  82.29588    1 #> 11   1.611472 5.631300 -0.5361740  64.2576042  72.52852    1 #> 12   1.611472 5.631300 -0.5361740  46.9972989  90.49283    2 #> 13   1.611472 5.631300 -0.5361740  56.1053755  70.40540    2 #> 14   1.611472 5.631300 -0.5361740  47.1769492  74.99919    1 #> 15   1.611472 5.631300 -0.5361740  53.0070458  71.85786    1 #> 16   1.611472 5.631300 -0.5361740  41.9531819  85.10154    2 #> 17   1.611472 5.631300 -0.5361740  90.3817524  68.09919    2 #> 18   1.611472 5.631300 -0.5361740  45.6069772  87.68332    2 #> 19   1.611472 5.631300 -0.5361740  51.4929710  78.54242    2 #> 20   1.611472 5.631300 -0.5361740  75.0119850  70.62079    1 #> 21   1.611472 5.631300 -0.5361740  41.2732735  62.85309    1 #> 22   1.611472 5.631300 -0.5361740  17.4579412  60.01102    1 #> 23   1.611472 5.631300 -0.5361740  78.1798965  71.00092    2 #> 24   1.611472 5.631300 -0.5361740  60.8240586  88.18910    1 #> 25   1.611472 5.631300 -0.5361740  72.2097805  67.26544    2 #> 26   1.611472 5.631300 -0.5361740  76.4570517  77.65842    2 #> 27   1.611472 5.631300 -0.5361740  65.8597676  77.46590    1 #> 28   1.611472 5.631300 -0.5361740 -11.5093946  73.63090    2 #> 29   1.611472 5.631300 -0.5361740  79.4650077  70.90530    2 #> 30   1.611472 5.631300 -0.5361740  64.2040257  65.38198    2 #> 31   1.611472 5.631300 -0.5361740  74.6127558  64.79464    1 #> 32   1.611472 5.631300 -0.5361740  67.6996446  88.98030    2 #> 33   1.611472 5.631300 -0.5361740  25.6399993  77.62073    2 #> 34   1.611472 5.631300 -0.5361740  80.6050221  65.78672    2 #> 35   1.611472 5.631300 -0.5361740  96.5733053  90.61418    1 #> 36   1.611472 5.631300 -0.5361740  79.5213975  78.61057    1 #> 37   1.611472 5.631300 -0.5361740  46.4445863  61.66917    1 #> 38   1.611472 5.631300 -0.5361740  13.6205265  75.75972    1 #> 39   1.611472 5.631300 -0.5361740  69.8343811  82.37549    2 #> 40   1.611472 5.631300 -0.5361740  40.8148886  94.50969    2 #> 41   1.611472 5.631300 -0.5361740  52.4049003  78.14845    1 #> 42   1.611472 5.631300 -0.5361740  52.4778514  57.68410    1 #> 43   1.611472 5.631300 -0.5361740  22.1783261  77.09679    1 #> 44   1.611472 5.631300 -0.5361740  46.3933207  77.77013    1 #> 45   1.611472 5.631300 -0.5361740  23.7368451  62.37419    1 #> 46   1.611472 5.631300 -0.5361740   1.9459432  79.16596    2 #> 47   1.611472 5.631300 -0.5361740  15.5076749  60.22776    1 #> 48   1.611472 5.631300 -0.5361740  31.5512208  74.52360    1 #> 49   1.611472 5.631300 -0.5361740  30.7194479  64.36655    2 #> 50   1.611472 5.631300 -0.5361740  12.5473169  56.33737    2 #> 51   1.611472 5.631300 -0.5361740  61.2498142  67.93173    1 #> 52   1.611472 5.631300 -0.5361740  44.1575132  75.64240    2 #> 53   1.611472 5.631300 -0.5361740  35.8231965  79.73345    2 #> 54   1.611472 5.631300 -0.5361740  48.1079451  81.25286    1 #> 55   1.611472 5.631300 -0.5361740   4.1550156  65.35836    1 #> 56   1.611472 5.631300 -0.5361740  27.8538742  87.86854    2 #> 57   1.611472 5.631300 -0.5361740  73.1211941  63.44239    1 #> 58   1.611472 5.631300 -0.5361740  44.3472840  85.53331    1 #> 59   1.611472 5.631300 -0.5361740  76.4857002  80.78371    2 #> 60   1.611472 5.631300 -0.5361740  32.0178192  80.28942    1 #> 61   1.611472 5.631300 -0.5361740  19.4646945  79.86622    1 #> 62   1.611472 5.631300 -0.5361740 -12.3783975  70.20201    2 #> 63   1.611472 5.631300 -0.5361740  41.0473400  63.11725    1 #> 64   1.611472 5.631300 -0.5361740  56.5048458  89.52226    2 #> 65   1.611472 5.631300 -0.5361740  53.7772297  84.53200    1 #> 66   1.611472 5.631300 -0.5361740  22.0830914  84.80086    1 #> 67   1.611472 5.631300 -0.5361740  26.4159793  94.95606    2 #> 68   1.611472 5.631300 -0.5361740  62.2241433  78.84814    2 #> 69   1.611472 5.631300 -0.5361740  61.7576517  60.34825    1 #> 70   1.611472 5.631300 -0.5361740  48.8577715  61.99353    1 #> 71   1.611472 5.631300 -0.5361740  16.3926620  55.24774    1 #> 72   1.611472 5.631300 -0.5361740  59.5427284  80.22367    2 #> 73   1.611472 5.631300 -0.5361740  60.5463528  83.25528    1 #> 74   1.611472 5.631300 -0.5361740  34.4879944  80.15938    2 #> 75   1.611472 5.631300 -0.5361740  23.6753215  77.25946    2 #> 76   1.611472 5.631300 -0.5361740  39.3029386  88.03693    2 #> 77   1.611472 5.631300 -0.5361740  91.7359360  90.93438    1 #> 78   1.611472 5.631300 -0.5361740 -30.9112428  48.23557    2 #> 79   1.611472 5.631300 -0.5361740  60.1236161  78.04262    2 #> 80   1.611472 5.631300 -0.5361740  37.7844671  96.99041    2 #> 81   1.611472 5.631300 -0.5361740  90.8042884  82.76736    2 #> 82   1.611472 5.631300 -0.5361740  13.8889632  77.14949    2 #> 83   1.611472 5.631300 -0.5361740  14.2401454  84.27253    1 #> 84   1.611472 5.631300 -0.5361740  -7.8223194  70.25095    2 #> 85   1.611472 5.631300 -0.5361740  57.9146416  87.04522    2 #> 86   1.611472 5.631300 -0.5361740  82.9157470  78.87614    2 #> 87   1.611472 5.631300 -0.5361740  78.1119804  79.40393    2 #> 88   1.611472 5.631300 -0.5361740  55.0322709  85.68824    2 #> 89   1.611472 5.631300 -0.5361740  74.7709478  66.44219    1 #> 90   1.611472 5.631300 -0.5361740  27.3116099  73.97360    1 #> 91   1.611472 5.631300 -0.5361740  34.1575424  72.03973    2 #> 92   1.611472 5.631300 -0.5361740  53.3668520  68.57956    1 #> 93   1.611472 5.631300 -0.5361740  89.2950340  75.21063    2 #> 94   1.611472 5.631300 -0.5361740  90.2010652  85.99426    1 #> 95   1.611472 5.631300 -0.5361740  67.7957424  71.51220    2 #> 96   1.611472 5.631300 -0.5361740  57.1605881  69.57692    1 #> 97   1.611472 5.631300 -0.5361740  27.0744964  74.41100    1 #> 98   1.611472 5.631300 -0.5361740  34.5612722  71.28752    1 #> 99   1.611472 5.631300 -0.5361740  29.1971409  83.80223    2 #> 100  1.611472 5.631300 -0.5361740  49.6872370  69.33945    2 #> 101  1.697194 5.632904 -0.7639157  32.6009902  67.30618    1 #> 102  1.697194 5.632904 -0.7639157  63.6353581  71.67337    2 #> 103  1.697194 5.632904 -0.7639157  43.9290434  78.97433    1 #> 104  1.697194 5.632904 -0.7639157  42.2490048  82.43933    2 #> 105  1.697194 5.632904 -0.7639157  53.0755018  61.52006    1 #> 106  1.697194 5.632904 -0.7639157  33.6951552  67.92496    1 #> 107  1.697194 5.632904 -0.7639157  51.9056000  82.44938    2 #> 108  1.697194 5.632904 -0.7639157  62.3551777  72.35504    2 #> 109  1.697194 5.632904 -0.7639157  52.2855212  68.81158    1 #> 110  1.697194 5.632904 -0.7639157  57.1403145  82.54662    2 #> 111  1.697194 5.632904 -0.7639157  30.2370673  67.40756    2 #> 112  1.697194 5.632904 -0.7639157  17.5741031  68.07342    2 #> 113  1.697194 5.632904 -0.7639157 103.4040015  77.90186    1 #> 114  1.697194 5.632904 -0.7639157  17.1038275  73.91354    2 #> 115  1.697194 5.632904 -0.7639157  49.8027185  81.48599    1 #> 116  1.697194 5.632904 -0.7639157 -11.4692481  64.76781    1 #> 117  1.697194 5.632904 -0.7639157  98.9071450  64.83333    1 #> 118  1.697194 5.632904 -0.7639157  37.6980931  70.31285    2 #> 119  1.697194 5.632904 -0.7639157  19.2868862  66.63816    1 #> 120  1.697194 5.632904 -0.7639157  51.0225062  83.88089    1 #> 121  1.697194 5.632904 -0.7639157  40.5382319  72.10914    1 #> 122  1.697194 5.632904 -0.7639157 101.5279207  80.94546    2 #> 123  1.697194 5.632904 -0.7639157  39.5403917  61.69040    2 #> 124  1.697194 5.632904 -0.7639157  70.0177582  73.65824    2 #> 125  1.697194 5.632904 -0.7639157  68.4393667  60.60936    2 #> 126  1.697194 5.632904 -0.7639157  95.4758801  76.48798    2 #> 127  1.697194 5.632904 -0.7639157 100.7280319  83.84368    1 #> 128  1.697194 5.632904 -0.7639157  31.1387506  84.25006    2 #> 129  1.697194 5.632904 -0.7639157  82.6307951  62.72472    1 #> 130  1.697194 5.632904 -0.7639157  73.1841931  81.63374    1 #> 131  1.697194 5.632904 -0.7639157  61.9958164  62.05448    1 #> 132  1.697194 5.632904 -0.7639157  91.3427083  86.26454    1 #> 133  1.697194 5.632904 -0.7639157  33.2167104  67.23963    2 #> 134  1.697194 5.632904 -0.7639157  11.7911197  67.49478    2 #> 135  1.697194 5.632904 -0.7639157  22.8650443  87.65617    1 #> 136  1.697194 5.632904 -0.7639157  22.4124998  71.17249    1 #> 137  1.697194 5.632904 -0.7639157  53.8564393  47.10541    2 #> 138  1.697194 5.632904 -0.7639157  44.8924890  73.24976    1 #> 139  1.697194 5.632904 -0.7639157  31.0650744  65.49308    1 #> 140  1.697194 5.632904 -0.7639157  17.8982324  73.66385    2 #> 141  1.697194 5.632904 -0.7639157  62.6270864  80.81898    2 #> 142  1.697194 5.632904 -0.7639157  53.5904127  70.59717    2 #> 143  1.697194 5.632904 -0.7639157  70.4837507  56.87197    1 #> 144  1.697194 5.632904 -0.7639157  42.5116968  67.28455    2 #> 145  1.697194 5.632904 -0.7639157  48.7878958  78.56057    2 #> 146  1.697194 5.632904 -0.7639157   0.9279941  85.57283    1 #> 147  1.697194 5.632904 -0.7639157 -18.3507952  86.95583    2 #> 148  1.697194 5.632904 -0.7639157 101.7579054  54.42115    2 #> 149  1.697194 5.632904 -0.7639157  24.6569588  75.49368    2 #> 150  1.697194 5.632904 -0.7639157  -7.9259128  77.66407    1 #> 151  1.697194 5.632904 -0.7639157  43.0784489  79.64376    1 #> 152  1.697194 5.632904 -0.7639157  36.1701133  82.19816    1 #> 153  1.697194 5.632904 -0.7639157  69.1335142  71.72814    2 #> 154  1.697194 5.632904 -0.7639157  33.6016215  70.27974    1 #> 155  1.697194 5.632904 -0.7639157  70.9239936  79.51531    1 #> 156  1.697194 5.632904 -0.7639157  87.7203229  72.59223    2 #> 157  1.697194 5.632904 -0.7639157  57.1156306  72.77681    2 #> 158  1.697194 5.632904 -0.7639157  60.4126793  82.76394    1 #> 159  1.697194 5.632904 -0.7639157  92.8375220  68.19552    1 #> 160  1.697194 5.632904 -0.7639157  63.2372782  72.24436    1 #> 161  1.697194 5.632904 -0.7639157  33.9613589  75.23715    1 #> 162  1.697194 5.632904 -0.7639157  81.6248543  76.55037    2 #> 163  1.697194 5.632904 -0.7639157  19.1811051  63.10995    2 #> 164  1.697194 5.632904 -0.7639157  75.3831810  69.18568    2 #> 165  1.697194 5.632904 -0.7639157 102.6843377  77.56710    2 #> 166  1.697194 5.632904 -0.7639157   4.1677784  85.11736    1 #> 167  1.697194 5.632904 -0.7639157  54.6184949  78.90585    1 #> 168  1.697194 5.632904 -0.7639157  76.6307625  77.20472    1 #> 169  1.697194 5.632904 -0.7639157 -15.0363003  88.79087    2 #> 170  1.697194 5.632904 -0.7639157  34.1118242  67.00169    1 #> 171  1.697194 5.632904 -0.7639157  35.2179067  79.35038    1 #> 172  1.697194 5.632904 -0.7639157  64.3295332  61.19219    2 #> 173  1.697194 5.632904 -0.7639157  40.4356811  74.68001    2 #> 174  1.697194 5.632904 -0.7639157  53.1522189  79.54962    1 #> 175  1.697194 5.632904 -0.7639157  70.2934969  63.31328    1 #> 176  1.697194 5.632904 -0.7639157  59.3989841  60.12108    1 #> 177  1.697194 5.632904 -0.7639157  46.6562879  83.05199    2 #> 178  1.697194 5.632904 -0.7639157  31.2214418  66.17985    1 #> 179  1.697194 5.632904 -0.7639157  58.0454805  67.40731    1 #> 180  1.697194 5.632904 -0.7639157   8.5442654  60.64299    2 #> 181  1.697194 5.632904 -0.7639157  -8.6994540  67.61161    2 #> 182  1.697194 5.632904 -0.7639157  61.9941352  56.18405    2 #> 183  1.697194 5.632904 -0.7639157  30.1262921  76.65569    2 #> 184  1.697194 5.632904 -0.7639157  24.5441908  69.14319    2 #> 185  1.697194 5.632904 -0.7639157  50.9208933  88.10101    2 #> 186  1.697194 5.632904 -0.7639157  69.7603735  87.51329    1 #> 187  1.697194 5.632904 -0.7639157  31.0769298  57.86124    1 #> 188  1.697194 5.632904 -0.7639157  90.5089258  90.74690    2 #> 189  1.697194 5.632904 -0.7639157  21.6640120  80.99970    1 #> 190  1.697194 5.632904 -0.7639157  47.6529746  78.80285    1 #> 191  1.697194 5.632904 -0.7639157 100.8414400  87.18736    1 #> 192  1.697194 5.632904 -0.7639157  73.7435691  67.51377    2 #> 193  1.697194 5.632904 -0.7639157  82.2576758  67.84921    2 #> 194  1.697194 5.632904 -0.7639157  29.5939114  86.13265    2 #> 195  1.697194 5.632904 -0.7639157  55.1984696  83.14714    1 #> 196  1.697194 5.632904 -0.7639157  84.6325985  61.39152    1 #> 197  1.697194 5.632904 -0.7639157  31.4798259  82.13564    2 #> 198  1.697194 5.632904 -0.7639157  38.3235350  81.68327    2 #> 199  1.697194 5.632904 -0.7639157  -8.4598097  70.31626    2 #> 200  1.697194 5.632904 -0.7639157  22.6554638  91.57896    1 #> 201  1.674146 5.676556 -0.6450219 -33.4003934  69.48843    1 #> 202  1.674146 5.676556 -0.6450219  52.2460410  75.97223    1 #> 203  1.674146 5.676556 -0.6450219  50.5880517  55.38187    1 #> 204  1.674146 5.676556 -0.6450219   8.7755868  74.53357    2 #> 205  1.674146 5.676556 -0.6450219 -10.6399840  89.02478    1 #> 206  1.674146 5.676556 -0.6450219  77.9804152  69.63404    1 #> 207  1.674146 5.676556 -0.6450219 111.9523274  63.11713    1 #> 208  1.674146 5.676556 -0.6450219 124.7472852  63.77779    2 #> 209  1.674146 5.676556 -0.6450219  41.0472614 109.19664    1 #> 210  1.674146 5.676556 -0.6450219  64.0597410  77.51251    1 #> 211  1.674146 5.676556 -0.6450219  61.8963879  67.56591    2 #> 212  1.674146 5.676556 -0.6450219  37.5018346  82.30857    2 #> 213  1.674146 5.676556 -0.6450219  61.5478787  64.67103    1 #> 214  1.674146 5.676556 -0.6450219  83.1943400  82.83273    1 #> 215  1.674146 5.676556 -0.6450219  17.7022001  82.39610    2 #> 216  1.674146 5.676556 -0.6450219 -14.2484933  69.37045    2 #> 217  1.674146 5.676556 -0.6450219  53.8941794  78.87093    2 #> 218  1.674146 5.676556 -0.6450219 103.5306147  72.10062    1 #> 219  1.674146 5.676556 -0.6450219  42.7939220  65.36429    2 #> 220  1.674146 5.676556 -0.6450219  73.7937437  61.97888    2 #> 221  1.674146 5.676556 -0.6450219  48.8117668  55.55597    1 #> 222  1.674146 5.676556 -0.6450219  28.1380983  69.42380    1 #> 223  1.674146 5.676556 -0.6450219  39.3779860  80.40495    2 #> 224  1.674146 5.676556 -0.6450219  62.8854692  77.64617    2 #> 225  1.674146 5.676556 -0.6450219  72.7218939  92.21864    1 #> 226  1.674146 5.676556 -0.6450219  66.5973495  78.22719    2 #> 227  1.674146 5.676556 -0.6450219  73.8570482  62.72534    2 #> 228  1.674146 5.676556 -0.6450219  18.5894635  67.62931    1 #> 229  1.674146 5.676556 -0.6450219  68.5556038  86.50493    1 #> 230  1.674146 5.676556 -0.6450219  30.1182224  71.89803    1 #> 231  1.674146 5.676556 -0.6450219  78.3971169  69.50827    2 #> 232  1.674146 5.676556 -0.6450219  73.5007234  69.40116    1 #> 233  1.674146 5.676556 -0.6450219  28.3210675  70.92010    1 #> 234  1.674146 5.676556 -0.6450219  46.6133629  77.06448    2 #> 235  1.674146 5.676556 -0.6450219  53.2401976  85.49854    2 #> 236  1.674146 5.676556 -0.6450219  63.4793431  58.30338    2 #> 237  1.674146 5.676556 -0.6450219  59.0269030  78.85214    1 #> 238  1.674146 5.676556 -0.6450219  93.5334639  72.54020    2 #> 239  1.674146 5.676556 -0.6450219  63.8996826  77.72598    2 #> 240  1.674146 5.676556 -0.6450219  68.8411703  70.86692    1 #> 241  1.674146 5.676556 -0.6450219  46.6390668  78.55434    1 #> 242  1.674146 5.676556 -0.6450219  68.5895359  60.86947    2 #> 243  1.674146 5.676556 -0.6450219  53.9343358  93.15884    2 #> 244  1.674146 5.676556 -0.6450219 101.7444338  98.30442    2 #> 245  1.674146 5.676556 -0.6450219  27.6387148  66.01310    1 #> 246  1.674146 5.676556 -0.6450219  22.1740324  75.26732    1 #> 247  1.674146 5.676556 -0.6450219  54.3124668  67.99166    2 #> 248  1.674146 5.676556 -0.6450219  68.6880503  84.26854    1 #> 249  1.674146 5.676556 -0.6450219  32.9912889  73.10049    1 #> 250  1.674146 5.676556 -0.6450219  37.0764193  60.87192    1 #> 251  1.674146 5.676556 -0.6450219  70.3974993  77.76398    1 #> 252  1.674146 5.676556 -0.6450219  37.2197366  76.65401    2 #> 253  1.674146 5.676556 -0.6450219  14.4365256  77.64115    2 #> 254  1.674146 5.676556 -0.6450219  29.9881040  53.00732    2 #> 255  1.674146 5.676556 -0.6450219  32.7384157  72.68504    1 #> 256  1.674146 5.676556 -0.6450219 115.5606580  67.00864    1 #> 257  1.674146 5.676556 -0.6450219  13.1778779  64.47407    2 #> 258  1.674146 5.676556 -0.6450219  43.9159381  75.48144    2 #> 259  1.674146 5.676556 -0.6450219  57.4438694  82.49917    1 #> 260  1.674146 5.676556 -0.6450219  35.3357869  67.90399    1 #> 261  1.674146 5.676556 -0.6450219  93.3877659  64.53529    1 #> 262  1.674146 5.676556 -0.6450219  55.8988571  69.94468    1 #> 263  1.674146 5.676556 -0.6450219 100.8071811  73.59461    1 #> 264  1.674146 5.676556 -0.6450219  58.2207959  91.20699    1 #> 265  1.674146 5.676556 -0.6450219  76.8416269  78.71474    2 #> 266  1.674146 5.676556 -0.6450219  47.2898040  79.51328    2 #> 267  1.674146 5.676556 -0.6450219  21.6059507  74.03412    1 #> 268  1.674146 5.676556 -0.6450219  64.0007893  55.95205    1 #> 269  1.674146 5.676556 -0.6450219  45.8709065  88.91552    1 #> 270  1.674146 5.676556 -0.6450219 107.1590022  57.55893    1 #> 271  1.674146 5.676556 -0.6450219  65.0859265  65.90542    2 #> 272  1.674146 5.676556 -0.6450219 119.1018283  75.01579    1 #> 273  1.674146 5.676556 -0.6450219  55.4592815  78.29274    2 #> 274  1.674146 5.676556 -0.6450219  31.8241194  65.68231    2 #> 275  1.674146 5.676556 -0.6450219  69.6482017  68.30628    2 #> 276  1.674146 5.676556 -0.6450219  57.9246085  75.74779    1 #> 277  1.674146 5.676556 -0.6450219  22.6963639  89.12890    2 #> 278  1.674146 5.676556 -0.6450219  86.2301450  91.36398    2 #> 279  1.674146 5.676556 -0.6450219 119.0278886  72.84194    2 #> 280  1.674146 5.676556 -0.6450219  59.1657062  68.30592    2 #> 281  1.674146 5.676556 -0.6450219  11.9152188  79.51124    1 #> 282  1.674146 5.676556 -0.6450219  -5.3716411  74.44313    1 #> 283  1.674146 5.676556 -0.6450219  57.4626697  63.37160    2 #> 284  1.674146 5.676556 -0.6450219  18.2516164  80.85700    1 #> 285  1.674146 5.676556 -0.6450219  35.8143158  81.09371    1 #> 286  1.674146 5.676556 -0.6450219  40.8566944  76.68455    1 #> 287  1.674146 5.676556 -0.6450219  11.9086877  79.05337    1 #> 288  1.674146 5.676556 -0.6450219  41.5697738  71.20915    1 #> 289  1.674146 5.676556 -0.6450219  61.1172570  68.21870    1 #> 290  1.674146 5.676556 -0.6450219  53.9569722  79.28401    2 #> 291  1.674146 5.676556 -0.6450219  70.1390883  79.39509    2 #> 292  1.674146 5.676556 -0.6450219  50.2440058  78.13196    1 #> 293  1.674146 5.676556 -0.6450219  29.3641415  61.43075    1 #> 294  1.674146 5.676556 -0.6450219  43.4205986  68.31340    2 #> 295  1.674146 5.676556 -0.6450219  11.9649051  59.88530    2 #> 296  1.674146 5.676556 -0.6450219  48.1018591  45.74281    1 #> 297  1.674146 5.676556 -0.6450219  60.3230568  74.24123    2 #> 298  1.674146 5.676556 -0.6450219  49.2737025  94.60425    1 #> 299  1.674146 5.676556 -0.6450219  89.2126057  65.93396    1 #> 300  1.674146 5.676556 -0.6450219  84.6711995  55.00520    2 #> 301  1.613874 5.740415 -0.6984534  16.2966677  68.34929    2 #> 302  1.613874 5.740415 -0.6984534 -23.8738375  81.29663    1 #> 303  1.613874 5.740415 -0.6984534  37.5517212  76.96609    1 #> 304  1.613874 5.740415 -0.6984534  61.7803372  57.67100    2 #> 305  1.613874 5.740415 -0.6984534  31.7448921  74.50269    1 #> 306  1.613874 5.740415 -0.6984534 103.7553019  76.50833    2 #> 307  1.613874 5.740415 -0.6984534  68.3064419  78.66488    1 #> 308  1.613874 5.740415 -0.6984534  46.3723587  72.80769    2 #> 309  1.613874 5.740415 -0.6984534  44.2082165  88.52164    2 #> 310  1.613874 5.740415 -0.6984534  16.7410057  71.31052    1 #> 311  1.613874 5.740415 -0.6984534   4.8366902  66.14520    2 #> 312  1.613874 5.740415 -0.6984534  40.7731288  60.79451    2 #> 313  1.613874 5.740415 -0.6984534  45.5423139  81.48294    2 #> 314  1.613874 5.740415 -0.6984534  34.5441864  83.36918    1 #> 315  1.613874 5.740415 -0.6984534  80.6230295  76.44552    1 #> 316  1.613874 5.740415 -0.6984534  41.0777626  66.61761    1 #> 317  1.613874 5.740415 -0.6984534  67.2442111  62.97680    1 #> 318  1.613874 5.740415 -0.6984534  55.7534751  71.47254    1 #> 319  1.613874 5.740415 -0.6984534  23.0419496  75.92260    2 #> 320  1.613874 5.740415 -0.6984534  50.5344811  60.99439    1 #> 321  1.613874 5.740415 -0.6984534  56.6442255  70.42003    1 #> 322  1.613874 5.740415 -0.6984534  49.6816955  78.48606    2 #> 323  1.613874 5.740415 -0.6984534  42.5396571  70.92581    1 #> 324  1.613874 5.740415 -0.6984534  85.4587299  71.81209    1 #> 325  1.613874 5.740415 -0.6984534  49.7048695  71.80567    2 #> 326  1.613874 5.740415 -0.6984534  43.7052724  71.15110    1 #> 327  1.613874 5.740415 -0.6984534  25.6587367  73.88314    1 #> 328  1.613874 5.740415 -0.6984534  38.0842682  68.11214    2 #> 329  1.613874 5.740415 -0.6984534  58.0814658  79.02879    2 #> 330  1.613874 5.740415 -0.6984534  47.0620228  78.75508    2 #> 331  1.613874 5.740415 -0.6984534  75.2547281  61.06943    1 #> 332  1.613874 5.740415 -0.6984534  59.1631641  70.49261    2 #> 333  1.613874 5.740415 -0.6984534  64.8077362  75.55531    1 #> 334  1.613874 5.740415 -0.6984534  70.2267571  85.75407    2 #> 335  1.613874 5.740415 -0.6984534  78.1350880  87.25513    2 #> 336  1.613874 5.740415 -0.6984534  99.9391549  73.21560    2 #> 337  1.613874 5.740415 -0.6984534  26.8114696  69.27603    1 #> 338  1.613874 5.740415 -0.6984534  42.2920693  73.35812    1 #> 339  1.613874 5.740415 -0.6984534  11.5777747  66.92449    1 #> 340  1.613874 5.740415 -0.6984534   7.2326812  76.23257    2 #> 341  1.613874 5.740415 -0.6984534  32.0251435  64.28934    2 #> 342  1.613874 5.740415 -0.6984534   5.6848147  84.06207    2 #> 343  1.613874 5.740415 -0.6984534  17.8630157  83.72065    1 #> 344  1.613874 5.740415 -0.6984534  39.2471861  71.08365    1 #> 345  1.613874 5.740415 -0.6984534  42.3913534  78.36272    2 #> 346  1.613874 5.740415 -0.6984534  37.1359731  80.05851    1 #> 347  1.613874 5.740415 -0.6984534  70.3095886  85.66656    1 #> 348  1.613874 5.740415 -0.6984534  73.1411037  84.16674    1 #> 349  1.613874 5.740415 -0.6984534  72.2027827  67.90291    2 #> 350  1.613874 5.740415 -0.6984534  89.0892997  69.01875    1 #> 351  1.613874 5.740415 -0.6984534  38.3062060  87.58053    2 #> 352  1.613874 5.740415 -0.6984534  94.6363923  69.93447    2 #> 353  1.613874 5.740415 -0.6984534  22.1603083  70.25841    1 #> 354  1.613874 5.740415 -0.6984534  86.6445941  58.44013    1 #> 355  1.613874 5.740415 -0.6984534  63.6328470  68.47071    1 #> 356  1.613874 5.740415 -0.6984534  47.4000258  79.02593    2 #> 357  1.613874 5.740415 -0.6984534  56.8906269  78.73618    1 #> 358  1.613874 5.740415 -0.6984534 138.4604907  91.03089    2 #> 359  1.613874 5.740415 -0.6984534  34.2312321  70.08259    1 #> 360  1.613874 5.740415 -0.6984534  28.7816357  68.35925    1 #> 361  1.613874 5.740415 -0.6984534  63.6295615  74.22550    1 #> 362  1.613874 5.740415 -0.6984534  17.8966286  75.69102    1 #> 363  1.613874 5.740415 -0.6984534  65.2934670  78.64505    1 #> 364  1.613874 5.740415 -0.6984534  63.4292942  67.34958    1 #> 365  1.613874 5.740415 -0.6984534  62.0240976  72.98431    2 #> 366  1.613874 5.740415 -0.6984534 -18.8146117  71.94563    2 #> 367  1.613874 5.740415 -0.6984534  50.0382446  60.28001    2 #> 368  1.613874 5.740415 -0.6984534  38.9153391  69.05125    2 #> 369  1.613874 5.740415 -0.6984534  34.9527197  90.92124    1 #> 370  1.613874 5.740415 -0.6984534  57.3564028  81.09840    2 #> 371  1.613874 5.740415 -0.6984534   5.6676726  82.55833    2 #> 372  1.613874 5.740415 -0.6984534  -2.4178148  76.20637    2 #> 373  1.613874 5.740415 -0.6984534  35.7885424  69.99939    2 #> 374  1.613874 5.740415 -0.6984534  47.7368090  80.19972    2 #> 375  1.613874 5.740415 -0.6984534 101.4735251  69.22624    2 #> 376  1.613874 5.740415 -0.6984534  -2.2779624  71.66347    2 #> 377  1.613874 5.740415 -0.6984534  20.0816173  80.03776    1 #> 378  1.613874 5.740415 -0.6984534  86.7090448  66.93729    2 #> 379  1.613874 5.740415 -0.6984534 113.6281574  87.99688    1 #> 380  1.613874 5.740415 -0.6984534  60.5466001  73.51926    2 #> 381  1.613874 5.740415 -0.6984534  77.7692487  91.64848    1 #> 382  1.613874 5.740415 -0.6984534  53.8636442  74.24403    1 #> 383  1.613874 5.740415 -0.6984534  48.1572877  59.35281    1 #> 384  1.613874 5.740415 -0.6984534  74.3395680  71.52724    1 #> 385  1.613874 5.740415 -0.6984534  82.6948844  78.87735    2 #> 386  1.613874 5.740415 -0.6984534  46.4934373  82.17691    2 #> 387  1.613874 5.740415 -0.6984534  25.6491388  77.72397    1 #> 388  1.613874 5.740415 -0.6984534  64.7947383  65.57023    1 #> 389  1.613874 5.740415 -0.6984534  87.6883038  89.76483    2 #> 390  1.613874 5.740415 -0.6984534  36.3328494  75.40819    2 #> 391  1.613874 5.740415 -0.6984534  26.4426459  73.85141    2 #> 392  1.613874 5.740415 -0.6984534  90.8342567  66.25896    2 #> 393  1.613874 5.740415 -0.6984534  93.6867760  57.91092    2 #> 394  1.613874 5.740415 -0.6984534  36.2778295  82.04241    2 #> 395  1.613874 5.740415 -0.6984534  56.8188275  73.16254    2 #> 396  1.613874 5.740415 -0.6984534  26.4980424  85.67589    1 #> 397  1.613874 5.740415 -0.6984534  25.4763875  70.98675    1 #> 398  1.613874 5.740415 -0.6984534  83.1803210  66.45085    1 #> 399  1.613874 5.740415 -0.6984534   1.7994674  59.17247    1 #> 400  1.613874 5.740415 -0.6984534  64.4949075  76.40213    2 #> 401  1.607998 5.643855 -0.6792054  48.8215960  68.12087    2 #> 402  1.607998 5.643855 -0.6792054  77.2970093  86.06118    2 #> 403  1.607998 5.643855 -0.6792054  67.4089724  65.71332    2 #> 404  1.607998 5.643855 -0.6792054  10.3769795  73.37489    1 #> 405  1.607998 5.643855 -0.6792054  79.1553290  85.74435    1 #> 406  1.607998 5.643855 -0.6792054   7.4670103  78.70518    2 #> 407  1.607998 5.643855 -0.6792054  56.0394847  65.44270    1 #> 408  1.607998 5.643855 -0.6792054  97.3603339  84.75567    1 #> 409  1.607998 5.643855 -0.6792054  64.1091315  69.81431    1 #> 410  1.607998 5.643855 -0.6792054   5.4828970  69.17843    2 #> 411  1.607998 5.643855 -0.6792054  -1.0365617  77.92836    1 #> 412  1.607998 5.643855 -0.6792054 105.1530363  58.76622    2 #> 413  1.607998 5.643855 -0.6792054  36.2081348  86.51888    1 #> 414  1.607998 5.643855 -0.6792054 100.7910554  72.30377    2 #> 415  1.607998 5.643855 -0.6792054 121.8033519  64.49824    2 #> 416  1.607998 5.643855 -0.6792054  80.7673520  79.15892    2 #> 417  1.607998 5.643855 -0.6792054  37.8666953  81.64906    2 #> 418  1.607998 5.643855 -0.6792054 115.5883876  72.47664    2 #> 419  1.607998 5.643855 -0.6792054  35.2369749  70.77398    1 #> 420  1.607998 5.643855 -0.6792054  64.1711223  81.17435    1 #> 421  1.607998 5.643855 -0.6792054  80.7895090  83.24437    1 #> 422  1.607998 5.643855 -0.6792054  21.7869881  66.29985    1 #> 423  1.607998 5.643855 -0.6792054  12.4926991  85.17995    2 #> 424  1.607998 5.643855 -0.6792054 100.3907484  63.01031    2 #> 425  1.607998 5.643855 -0.6792054  87.0887229  78.85374    1 #> 426  1.607998 5.643855 -0.6792054  25.1379799  73.96496    2 #> 427  1.607998 5.643855 -0.6792054  49.5239715  67.28242    1 #> 428  1.607998 5.643855 -0.6792054  88.7792321  79.57532    1 #> 429  1.607998 5.643855 -0.6792054  27.6786417  50.07289    2 #> 430  1.607998 5.643855 -0.6792054  39.2307194  71.84089    1 #> 431  1.607998 5.643855 -0.6792054  24.7497391  59.53040    1 #> 432  1.607998 5.643855 -0.6792054  41.3796076  91.30726    1 #> 433  1.607998 5.643855 -0.6792054  15.7437413  60.97164    1 #> 434  1.607998 5.643855 -0.6792054  49.3700152  87.90514    2 #> 435  1.607998 5.643855 -0.6792054  85.1566041  70.45287    2 #> 436  1.607998 5.643855 -0.6792054  40.6560199  71.09065    2 #> 437  1.607998 5.643855 -0.6792054  51.7926315  80.52528    1 #> 438  1.607998 5.643855 -0.6792054  21.9143343  90.76348    2 #> 439  1.607998 5.643855 -0.6792054  51.8020419  67.59027    1 #> 440  1.607998 5.643855 -0.6792054  16.6322957  68.55139    2 #> 441  1.607998 5.643855 -0.6792054  83.6203837  70.68124    1 #> 442  1.607998 5.643855 -0.6792054   0.5211994  77.24136    2 #> 443  1.607998 5.643855 -0.6792054  68.5951856  91.48323    1 #> 444  1.607998 5.643855 -0.6792054  43.1520866  76.30536    1 #> 445  1.607998 5.643855 -0.6792054  50.3386316  65.44094    2 #> 446  1.607998 5.643855 -0.6792054  -5.5620422  66.74062    2 #> 447  1.607998 5.643855 -0.6792054  36.6958235  75.55218    1 #> 448  1.607998 5.643855 -0.6792054  50.5999862  70.92480    1 #> 449  1.607998 5.643855 -0.6792054  33.7248448  63.47388    1 #> 450  1.607998 5.643855 -0.6792054  56.8412586  69.62838    1 #> 451  1.607998 5.643855 -0.6792054  41.5039976  42.87558    2 #> 452  1.607998 5.643855 -0.6792054  34.6840120  94.67629    2 #> 453  1.607998 5.643855 -0.6792054  66.7908719  85.49509    2 #> 454  1.607998 5.643855 -0.6792054  61.4085644  60.53623    1 #> 455  1.607998 5.643855 -0.6792054  20.3101447  63.61028    2 #> 456  1.607998 5.643855 -0.6792054  23.9141255  63.56250    1 #> 457  1.607998 5.643855 -0.6792054  33.5839449  52.95806    1 #> 458  1.607998 5.643855 -0.6792054  84.6397334  78.41237    2 #> 459  1.607998 5.643855 -0.6792054  44.8334456  71.30109    1 #> 460  1.607998 5.643855 -0.6792054  27.2349995  72.89661    2 #> 461  1.607998 5.643855 -0.6792054  91.2514376  91.89839    2 #> 462  1.607998 5.643855 -0.6792054  37.6097072  81.34729    1 #> 463  1.607998 5.643855 -0.6792054  68.5254907  72.04929    2 #> 464  1.607998 5.643855 -0.6792054  38.5642150  69.13123    1 #> 465  1.607998 5.643855 -0.6792054  44.1594360  77.51596    2 #> 466  1.607998 5.643855 -0.6792054  57.0717274  80.17189    2 #> 467  1.607998 5.643855 -0.6792054  95.9455509  74.75328    2 #> 468  1.607998 5.643855 -0.6792054  42.9920799  92.50767    1 #> 469  1.607998 5.643855 -0.6792054  55.7102276  75.72940    2 #> 470  1.607998 5.643855 -0.6792054  60.8177462  69.03698    2 #> 471  1.607998 5.643855 -0.6792054  55.3605893  66.34895    1 #> 472  1.607998 5.643855 -0.6792054  56.7559825  75.28003    2 #> 473  1.607998 5.643855 -0.6792054  25.4328185  73.75857    1 #> 474  1.607998 5.643855 -0.6792054  -6.8916878  88.03803    2 #> 475  1.607998 5.643855 -0.6792054  33.4832529  75.73123    2 #> 476  1.607998 5.643855 -0.6792054  52.0521677  80.03295    1 #> 477  1.607998 5.643855 -0.6792054  25.4914503  82.94275    1 #> 478  1.607998 5.643855 -0.6792054 100.9890496  77.45985    1 #> 479  1.607998 5.643855 -0.6792054  25.5156151  91.88302    1 #> 480  1.607998 5.643855 -0.6792054  43.6078125  57.43117    1 #> 481  1.607998 5.643855 -0.6792054  37.0091877  79.48740    2 #> 482  1.607998 5.643855 -0.6792054  11.8107388  64.78770    1 #> 483  1.607998 5.643855 -0.6792054  44.3389759  71.14324    2 #> 484  1.607998 5.643855 -0.6792054  54.9898805  73.64347    1 #> 485  1.607998 5.643855 -0.6792054  71.7998793  69.11348    1 #> 486  1.607998 5.643855 -0.6792054  -5.6880456  71.73435    2 #> 487  1.607998 5.643855 -0.6792054  79.1445668  69.27310    1 #> 488  1.607998 5.643855 -0.6792054  12.9249574  78.46686    2 #> 489  1.607998 5.643855 -0.6792054  27.5346015  67.62387    1 #> 490  1.607998 5.643855 -0.6792054  62.8966610  76.51829    2 #> 491  1.607998 5.643855 -0.6792054  32.0787529  68.94991    2 #> 492  1.607998 5.643855 -0.6792054  25.1917260  70.99306    2 #> 493  1.607998 5.643855 -0.6792054  54.4621512  70.62260    2 #> 494  1.607998 5.643855 -0.6792054  -2.2871236  80.68376    1 #> 495  1.607998 5.643855 -0.6792054  27.2894531  58.62351    1 #> 496  1.607998 5.643855 -0.6792054  74.5977013  88.26263    2 #> 497  1.607998 5.643855 -0.6792054  92.4308992  74.24270    2 #> 498  1.607998 5.643855 -0.6792054  55.8268794  89.50048    1 #> 499  1.607998 5.643855 -0.6792054  89.4983796  61.30342    2 #> 500  1.607998 5.643855 -0.6792054  79.8213569  76.81988    1 #> 501  1.643777 5.694137 -0.6690660  38.1678563  67.56115    2 #> 502  1.643777 5.694137 -0.6690660  61.0698769  58.17179    1 #> 503  1.643777 5.694137 -0.6690660  41.7382042  64.26612    1 #> 504  1.643777 5.694137 -0.6690660  33.8740280  69.33690    1 #> 505  1.643777 5.694137 -0.6690660  23.5953740  61.72238    1 #> 506  1.643777 5.694137 -0.6690660  13.3422225  52.87255    2 #> 507  1.643777 5.694137 -0.6690660  74.0383804  62.03574    1 #> 508  1.643777 5.694137 -0.6690660  93.0192305  70.91276    2 #> 509  1.643777 5.694137 -0.6690660  89.0049567  70.15547    2 #> 510  1.643777 5.694137 -0.6690660  43.5291243  91.50177    1 #> 511  1.643777 5.694137 -0.6690660  23.5393253  81.96101    2 #> 512  1.643777 5.694137 -0.6690660  40.9925587  57.60091    2 #> 513  1.643777 5.694137 -0.6690660  34.9704160  60.84323    2 #> 514  1.643777 5.694137 -0.6690660  59.9235702  88.99702    2 #> 515  1.643777 5.694137 -0.6690660  98.3658578  86.42595    1 #> 516  1.643777 5.694137 -0.6690660  50.7422608  92.09375    2 #> 517  1.643777 5.694137 -0.6690660  41.9356043  65.47800    1 #> 518  1.643777 5.694137 -0.6690660  69.2871008  72.68478    1 #> 519  1.643777 5.694137 -0.6690660  49.4730857  66.81432    2 #> 520  1.643777 5.694137 -0.6690660  44.8791520  70.87674    2 #> 521  1.643777 5.694137 -0.6690660  20.4638474  95.53771    2 #> 522  1.643777 5.694137 -0.6690660  32.3751288  83.15449    2 #> 523  1.643777 5.694137 -0.6690660  77.5845632  65.59434    1 #> 524  1.643777 5.694137 -0.6690660  56.7236110  85.66398    1 #> 525  1.643777 5.694137 -0.6690660  32.1085930  79.47297    1 #> 526  1.643777 5.694137 -0.6690660  46.5107080  75.75487    2 #> 527  1.643777 5.694137 -0.6690660  78.9429857  66.73803    1 #> 528  1.643777 5.694137 -0.6690660  31.0490558  83.34998    2 #> 529  1.643777 5.694137 -0.6690660  40.9829803  90.16081    2 #> 530  1.643777 5.694137 -0.6690660  43.9492312  80.31310    1 #> 531  1.643777 5.694137 -0.6690660  65.5490888  88.77697    2 #> 532  1.643777 5.694137 -0.6690660  56.2680938  90.90554    2 #> 533  1.643777 5.694137 -0.6690660  14.4686365  80.42169    1 #> 534  1.643777 5.694137 -0.6690660  70.2907813  80.47309    1 #> 535  1.643777 5.694137 -0.6690660  57.4804485  75.33315    1 #> 536  1.643777 5.694137 -0.6690660  66.0948896  89.54032    1 #> 537  1.643777 5.694137 -0.6690660   3.1032846  87.89076    2 #> 538  1.643777 5.694137 -0.6690660  44.2139073  84.02920    1 #> 539  1.643777 5.694137 -0.6690660  48.2643368  78.79437    2 #> 540  1.643777 5.694137 -0.6690660  74.8756724  61.15289    1 #> 541  1.643777 5.694137 -0.6690660   8.1327649  71.72132    2 #> 542  1.643777 5.694137 -0.6690660  16.5980966  64.94069    1 #> 543  1.643777 5.694137 -0.6690660  43.9312413  51.69354    1 #> 544  1.643777 5.694137 -0.6690660 -17.1351407  94.42809    1 #> 545  1.643777 5.694137 -0.6690660  53.1464554  83.92699    1 #> 546  1.643777 5.694137 -0.6690660  81.4527982  74.55878    2 #> 547  1.643777 5.694137 -0.6690660  10.1989198  87.76708    2 #> 548  1.643777 5.694137 -0.6690660  21.5496443  83.67005    2 #> 549  1.643777 5.694137 -0.6690660  34.7187279  81.54692    1 #> 550  1.643777 5.694137 -0.6690660  27.5386247  57.54349    2 #> 551  1.643777 5.694137 -0.6690660  14.6024354  78.74788    2 #> 552  1.643777 5.694137 -0.6690660  27.5903823  56.68944    1 #> 553  1.643777 5.694137 -0.6690660  72.5185564  91.10584    1 #> 554  1.643777 5.694137 -0.6690660  44.3002781  81.56935    2 #> 555  1.643777 5.694137 -0.6690660 139.1363422  82.74588    2 #> 556  1.643777 5.694137 -0.6690660  65.8100955  81.94809    1 #> 557  1.643777 5.694137 -0.6690660  50.6868391  72.21063    1 #> 558  1.643777 5.694137 -0.6690660  39.6543078  77.29151    2 #> 559  1.643777 5.694137 -0.6690660  83.1524478  55.31793    2 #> 560  1.643777 5.694137 -0.6690660  28.9030084  66.02987    1 #> 561  1.643777 5.694137 -0.6690660  74.8964861  81.14713    2 #> 562  1.643777 5.694137 -0.6690660  59.0149196  65.04019    1 #> 563  1.643777 5.694137 -0.6690660  30.3298336  79.68335    2 #> 564  1.643777 5.694137 -0.6690660  57.7948403  75.82379    1 #> 565  1.643777 5.694137 -0.6690660  34.2990000  86.36872    2 #> 566  1.643777 5.694137 -0.6690660   2.6535279  87.72225    2 #> 567  1.643777 5.694137 -0.6690660  37.6268290  74.39190    2 #> 568  1.643777 5.694137 -0.6690660  63.9340344  65.42419    2 #> 569  1.643777 5.694137 -0.6690660  58.9164769  45.08214    2 #> 570  1.643777 5.694137 -0.6690660  92.0016020  83.70186    1 #> 571  1.643777 5.694137 -0.6690660  61.7224060  79.23864    2 #> 572  1.643777 5.694137 -0.6690660  96.1235032  83.73479    2 #> 573  1.643777 5.694137 -0.6690660  68.5533210  59.05651    1 #> 574  1.643777 5.694137 -0.6690660  -3.6102436  50.09141    1 #> 575  1.643777 5.694137 -0.6690660  76.0941103  72.03348    2 #> 576  1.643777 5.694137 -0.6690660 104.4106457  75.32516    2 #> 577  1.643777 5.694137 -0.6690660  41.2928074  69.04815    1 #> 578  1.643777 5.694137 -0.6690660  65.2797569  74.49533    1 #> 579  1.643777 5.694137 -0.6690660  26.3265850  81.18398    2 #> 580  1.643777 5.694137 -0.6690660  65.5588529  68.91393    2 #> 581  1.643777 5.694137 -0.6690660  47.0697497  74.72187    1 #> 582  1.643777 5.694137 -0.6690660  87.2450727  94.10999    1 #> 583  1.643777 5.694137 -0.6690660  61.2502113  80.00009    2 #> 584  1.643777 5.694137 -0.6690660  89.2007650  58.09223    1 #> 585  1.643777 5.694137 -0.6690660   9.9740886  80.09600    1 #> 586  1.643777 5.694137 -0.6690660  73.9157460  74.08366    2 #> 587  1.643777 5.694137 -0.6690660  14.4160082  89.42311    1 #> 588  1.643777 5.694137 -0.6690660  64.4259505  63.68825    2 #> 589  1.643777 5.694137 -0.6690660 107.6692892  70.25459    1 #> 590  1.643777 5.694137 -0.6690660  97.0398311  75.44392    2 #> 591  1.643777 5.694137 -0.6690660 -18.6333110  58.40089    1 #> 592  1.643777 5.694137 -0.6690660  39.5946897  84.11830    2 #> 593  1.643777 5.694137 -0.6690660  20.6417920  73.83552    2 #> 594  1.643777 5.694137 -0.6690660  56.4086735  68.10451    1 #> 595  1.643777 5.694137 -0.6690660  85.1042630  66.95012    1 #> 596  1.643777 5.694137 -0.6690660  50.6295988  87.69661    1 #> 597  1.643777 5.694137 -0.6690660  36.9343237  68.84028    1 #> 598  1.643777 5.694137 -0.6690660  71.1503605  87.67769    1 #> 599  1.643777 5.694137 -0.6690660  56.5924449  81.06348    1 #> 600  1.643777 5.694137 -0.6690660  93.5501107  88.95669    1 #> 601  1.648057 5.729913 -0.6552792  18.9083599  82.84332    1 #> 602  1.648057 5.729913 -0.6552792  82.7940905  69.87248    2 #> 603  1.648057 5.729913 -0.6552792  45.9641247  69.22075    2 #> 604  1.648057 5.729913 -0.6552792  54.6802925  78.95279    1 #> 605  1.648057 5.729913 -0.6552792 107.1581579  62.13559    2 #> 606  1.648057 5.729913 -0.6552792  53.1915408  62.58662    1 #> 607  1.648057 5.729913 -0.6552792  53.7586208  57.37826    2 #> 608  1.648057 5.729913 -0.6552792  11.4903880  76.88262    1 #> 609  1.648057 5.729913 -0.6552792  42.9730652  76.14662    2 #> 610  1.648057 5.729913 -0.6552792  49.4591203  61.76904    2 #> 611  1.648057 5.729913 -0.6552792  78.8073818  79.18351    1 #> 612  1.648057 5.729913 -0.6552792  50.8429855  84.85734    2 #> 613  1.648057 5.729913 -0.6552792  49.4230911  80.54065    2 #> 614  1.648057 5.729913 -0.6552792  35.8725616  73.61357    2 #> 615  1.648057 5.729913 -0.6552792  73.8953130  87.20300    1 #> 616  1.648057 5.729913 -0.6552792  48.5112541  78.58745    1 #> 617  1.648057 5.729913 -0.6552792  41.2691503  77.56750    1 #> 618  1.648057 5.729913 -0.6552792  -2.5952400  52.72300    1 #> 619  1.648057 5.729913 -0.6552792  37.7309015  82.54988    1 #> 620  1.648057 5.729913 -0.6552792  30.3568403  73.26848    2 #> 621  1.648057 5.729913 -0.6552792  74.6840163  69.20581    2 #> 622  1.648057 5.729913 -0.6552792  57.2935950  59.50570    1 #> 623  1.648057 5.729913 -0.6552792  46.0448889  76.42029    2 #> 624  1.648057 5.729913 -0.6552792  26.0374982  88.97144    1 #> 625  1.648057 5.729913 -0.6552792 107.5539884  73.40860    1 #> 626  1.648057 5.729913 -0.6552792  76.0932271  64.01009    2 #> 627  1.648057 5.729913 -0.6552792  15.2618979  85.87639    1 #> 628  1.648057 5.729913 -0.6552792  26.9130546  81.09287    1 #> 629  1.648057 5.729913 -0.6552792  19.6257044  66.16867    1 #> 630  1.648057 5.729913 -0.6552792  27.6237559  83.07571    1 #> 631  1.648057 5.729913 -0.6552792   3.0788206  72.64991    1 #> 632  1.648057 5.729913 -0.6552792  83.9619254  70.62216    2 #> 633  1.648057 5.729913 -0.6552792  27.2919447  69.19040    1 #> 634  1.648057 5.729913 -0.6552792  70.9313798  85.46613    2 #> 635  1.648057 5.729913 -0.6552792  23.8187421  80.40937    2 #> 636  1.648057 5.729913 -0.6552792  59.3970342  79.11208    1 #> 637  1.648057 5.729913 -0.6552792  42.5267742  87.02663    2 #> 638  1.648057 5.729913 -0.6552792 109.4385054  73.75556    2 #> 639  1.648057 5.729913 -0.6552792  68.4397881  76.30425    1 #> 640  1.648057 5.729913 -0.6552792  75.7222837  82.39713    2 #> 641  1.648057 5.729913 -0.6552792  16.5044967  78.43945    2 #> 642  1.648057 5.729913 -0.6552792  66.1861109  79.22025    2 #> 643  1.648057 5.729913 -0.6552792  52.7481347  63.74457    2 #> 644  1.648057 5.729913 -0.6552792  37.2365634  71.05619    1 #> 645  1.648057 5.729913 -0.6552792  46.9804983  56.89054    2 #> 646  1.648057 5.729913 -0.6552792  50.2229018  77.10394    2 #> 647  1.648057 5.729913 -0.6552792  16.0139501  61.53448    1 #> 648  1.648057 5.729913 -0.6552792  41.5563797  65.99968    2 #> 649  1.648057 5.729913 -0.6552792  70.9674950  69.01587    1 #> 650  1.648057 5.729913 -0.6552792  55.6625466  82.58803    2 #> 651  1.648057 5.729913 -0.6552792  42.0096291  78.35425    1 #> 652  1.648057 5.729913 -0.6552792 117.8812335  77.27629    2 #> 653  1.648057 5.729913 -0.6552792  61.6658650  72.08551    1 #> 654  1.648057 5.729913 -0.6552792  -0.8736160  92.49828    2 #> 655  1.648057 5.729913 -0.6552792  80.5603108  75.62488    2 #> 656  1.648057 5.729913 -0.6552792  48.1762269  64.89065    2 #> 657  1.648057 5.729913 -0.6552792  12.9968319  65.07000    1 #> 658  1.648057 5.729913 -0.6552792   2.8313131  90.66089    2 #> 659  1.648057 5.729913 -0.6552792  70.0881641  62.61839    1 #> 660  1.648057 5.729913 -0.6552792 -33.8810337  64.19400    2 #> 661  1.648057 5.729913 -0.6552792  39.9661974  68.44032    2 #> 662  1.648057 5.729913 -0.6552792  31.3170364  75.73101    1 #> 663  1.648057 5.729913 -0.6552792  44.0024332  68.82384    2 #> 664  1.648057 5.729913 -0.6552792  36.7898696  68.25944    2 #> 665  1.648057 5.729913 -0.6552792 107.5733367  68.19207    2 #> 666  1.648057 5.729913 -0.6552792  68.0743864  63.00673    2 #> 667  1.648057 5.729913 -0.6552792  68.3035899  89.13444    2 #> 668  1.648057 5.729913 -0.6552792  46.1511899  71.02200    2 #> 669  1.648057 5.729913 -0.6552792  53.2178875  56.93658    2 #> 670  1.648057 5.729913 -0.6552792 -32.8588747  67.34866    2 #> 671  1.648057 5.729913 -0.6552792  43.5265993  86.60459    1 #> 672  1.648057 5.729913 -0.6552792  35.3250016  80.49457    2 #> 673  1.648057 5.729913 -0.6552792 132.4481604  87.69892    1 #> 674  1.648057 5.729913 -0.6552792  53.0284456  75.10771    2 #> 675  1.648057 5.729913 -0.6552792  72.9444754  58.12782    1 #> 676  1.648057 5.729913 -0.6552792  26.9975412  80.05722    2 #> 677  1.648057 5.729913 -0.6552792  36.8695056  98.52606    2 #> 678  1.648057 5.729913 -0.6552792  69.6609769  94.47954    1 #> 679  1.648057 5.729913 -0.6552792  25.0991472  84.40522    2 #> 680  1.648057 5.729913 -0.6552792  41.9468910  75.74272    1 #> 681  1.648057 5.729913 -0.6552792  20.8472512  83.97757    2 #> 682  1.648057 5.729913 -0.6552792  15.1525928  85.26197    1 #> 683  1.648057 5.729913 -0.6552792  29.9811042  52.37819    1 #> 684  1.648057 5.729913 -0.6552792  35.2479815  65.28672    1 #> 685  1.648057 5.729913 -0.6552792  55.8575273  64.93605    1 #> 686  1.648057 5.729913 -0.6552792  46.1190677  70.03628    1 #> 687  1.648057 5.729913 -0.6552792  58.2830057  71.94772    2 #> 688  1.648057 5.729913 -0.6552792  85.9325796  52.10738    1 #> 689  1.648057 5.729913 -0.6552792  81.0811061  70.93935    2 #> 690  1.648057 5.729913 -0.6552792  90.7740977  86.39420    1 #> 691  1.648057 5.729913 -0.6552792  80.5749599  91.67558    1 #> 692  1.648057 5.729913 -0.6552792  18.3214023  84.10786    2 #> 693  1.648057 5.729913 -0.6552792  50.2634173  71.34296    1 #> 694  1.648057 5.729913 -0.6552792  -9.2522554  78.23080    1 #> 695  1.648057 5.729913 -0.6552792  87.1693570  71.12958    1 #> 696  1.648057 5.729913 -0.6552792  95.4192058  79.23869    2 #> 697  1.648057 5.729913 -0.6552792   7.2926188  78.66146    2 #> 698  1.648057 5.729913 -0.6552792   4.8827826 103.71042    2 #> 699  1.648057 5.729913 -0.6552792  35.2762761  73.13650    2 #> 700  1.648057 5.729913 -0.6552792  31.6385434  73.79821    1 #> 701  1.668782 5.621953 -0.7406204   4.3862902  89.41130    2 #> 702  1.668782 5.621953 -0.7406204  29.6476474  77.60050    2 #> 703  1.668782 5.621953 -0.7406204   7.0213876  86.83642    2 #> 704  1.668782 5.621953 -0.7406204   9.5118652  68.27226    1 #> 705  1.668782 5.621953 -0.7406204  42.1259745  71.98352    2 #> 706  1.668782 5.621953 -0.7406204  73.2122235  69.81875    1 #> 707  1.668782 5.621953 -0.7406204  86.7027792  77.46672    2 #> 708  1.668782 5.621953 -0.7406204  91.0971639  78.11554    1 #> 709  1.668782 5.621953 -0.7406204  58.0830884  71.50048    2 #> 710  1.668782 5.621953 -0.7406204  37.0587768  76.60951    1 #> 711  1.668782 5.621953 -0.7406204  35.7099942  67.75827    1 #> 712  1.668782 5.621953 -0.7406204  56.8209016  59.88464    2 #> 713  1.668782 5.621953 -0.7406204  69.0604872  67.06852    2 #> 714  1.668782 5.621953 -0.7406204  69.7451362  81.98099    1 #> 715  1.668782 5.621953 -0.7406204  77.8364665  71.37878    1 #> 716  1.668782 5.621953 -0.7406204  19.6222663  78.43239    1 #> 717  1.668782 5.621953 -0.7406204  42.5694293  70.28217    2 #> 718  1.668782 5.621953 -0.7406204  90.0898872  65.33551    1 #> 719  1.668782 5.621953 -0.7406204  61.4365029  74.21749    1 #> 720  1.668782 5.621953 -0.7406204  96.8052970  76.24192    1 #> 721  1.668782 5.621953 -0.7406204  73.0402787  71.01772    2 #> 722  1.668782 5.621953 -0.7406204  33.4467777  74.08305    1 #> 723  1.668782 5.621953 -0.7406204  46.6144377  95.23591    2 #> 724  1.668782 5.621953 -0.7406204  53.3733455  75.33384    1 #> 725  1.668782 5.621953 -0.7406204  10.9778305  48.31491    2 #> 726  1.668782 5.621953 -0.7406204  23.8924573  87.92331    2 #> 727  1.668782 5.621953 -0.7406204  76.4078263  73.94247    1 #> 728  1.668782 5.621953 -0.7406204  31.5762808  59.15820    1 #> 729  1.668782 5.621953 -0.7406204   6.7104129  96.56197    1 #> 730  1.668782 5.621953 -0.7406204  79.3195285  80.77408    1 #> 731  1.668782 5.621953 -0.7406204 -28.3353878  68.22983    2 #> 732  1.668782 5.621953 -0.7406204  67.4295155  83.25717    1 #> 733  1.668782 5.621953 -0.7406204  64.3079145  58.77369    1 #> 734  1.668782 5.621953 -0.7406204  71.1403579  75.98192    2 #> 735  1.668782 5.621953 -0.7406204  89.5590335  76.42924    1 #> 736  1.668782 5.621953 -0.7406204  57.8191488  79.79139    2 #> 737  1.668782 5.621953 -0.7406204  11.1080731  71.21112    1 #> 738  1.668782 5.621953 -0.7406204  51.3348956  73.21401    1 #> 739  1.668782 5.621953 -0.7406204  79.1653337  78.88980    2 #> 740  1.668782 5.621953 -0.7406204  30.6420457  68.93621    1 #> 741  1.668782 5.621953 -0.7406204  -3.0512450  92.29634    1 #> 742  1.668782 5.621953 -0.7406204  69.8573389  71.13959    2 #> 743  1.668782 5.621953 -0.7406204  32.8850272  67.04577    2 #> 744  1.668782 5.621953 -0.7406204  51.0458458  71.73215    1 #> 745  1.668782 5.621953 -0.7406204  73.6786942  77.12900    1 #> 746  1.668782 5.621953 -0.7406204  31.1736141  71.92430    2 #> 747  1.668782 5.621953 -0.7406204  25.5612587  89.60676    1 #> 748  1.668782 5.621953 -0.7406204  -8.6963567  89.46077    1 #> 749  1.668782 5.621953 -0.7406204 -26.6067751  66.57096    2 #> 750  1.668782 5.621953 -0.7406204  57.2505420  70.30214    2 #> 751  1.668782 5.621953 -0.7406204 111.9767656  75.56339    2 #> 752  1.668782 5.621953 -0.7406204  76.0573053  60.96074    2 #> 753  1.668782 5.621953 -0.7406204  29.0669531  90.51543    2 #> 754  1.668782 5.621953 -0.7406204  57.1668329  79.69982    1 #> 755  1.668782 5.621953 -0.7406204  27.8484795  66.73348    2 #> 756  1.668782 5.621953 -0.7406204  85.4876148  74.22296    1 #> 757  1.668782 5.621953 -0.7406204 100.0837299  81.90151    1 #> 758  1.668782 5.621953 -0.7406204  46.0227120  89.35422    1 #> 759  1.668782 5.621953 -0.7406204 126.7902588  77.66575    1 #> 760  1.668782 5.621953 -0.7406204  19.1071394  80.77951    1 #> 761  1.668782 5.621953 -0.7406204  51.4319091  60.24571    2 #> 762  1.668782 5.621953 -0.7406204  65.6309065  84.63769    1 #> 763  1.668782 5.621953 -0.7406204 -13.2733730  83.71288    1 #> 764  1.668782 5.621953 -0.7406204  85.4482930  67.45798    1 #> 765  1.668782 5.621953 -0.7406204  55.1923811  92.04469    1 #> 766  1.668782 5.621953 -0.7406204  98.7165155  65.93427    2 #> 767  1.668782 5.621953 -0.7406204  65.5019725 103.28612    1 #> 768  1.668782 5.621953 -0.7406204  39.5002933  72.03163    1 #> 769  1.668782 5.621953 -0.7406204  42.5374292  82.07576    2 #> 770  1.668782 5.621953 -0.7406204  36.5696566  71.51964    1 #> 771  1.668782 5.621953 -0.7406204  81.3982645  79.04510    1 #> 772  1.668782 5.621953 -0.7406204  60.8786617  79.28927    1 #> 773  1.668782 5.621953 -0.7406204  70.7373746  83.19576    1 #> 774  1.668782 5.621953 -0.7406204  15.5478298  60.57505    2 #> 775  1.668782 5.621953 -0.7406204  72.9746357  81.74383    1 #> 776  1.668782 5.621953 -0.7406204  65.9319263  72.78060    2 #> 777  1.668782 5.621953 -0.7406204  88.3867317  63.68846    1 #> 778  1.668782 5.621953 -0.7406204  77.0011194  68.88250    1 #> 779  1.668782 5.621953 -0.7406204  85.8057743  64.98303    2 #> 780  1.668782 5.621953 -0.7406204  35.9705319  83.73558    1 #> 781  1.668782 5.621953 -0.7406204  67.3304997  86.84455    1 #> 782  1.668782 5.621953 -0.7406204  21.9524555  76.27415    1 #> 783  1.668782 5.621953 -0.7406204  -5.6352245  72.94603    2 #> 784  1.668782 5.621953 -0.7406204  52.3692116  71.22825    1 #> 785  1.668782 5.621953 -0.7406204  56.9827483  68.32436    2 #> 786  1.668782 5.621953 -0.7406204  74.3243768  91.43702    2 #> 787  1.668782 5.621953 -0.7406204  34.5160055  64.07231    1 #> 788  1.668782 5.621953 -0.7406204   2.9245152  80.98718    1 #> 789  1.668782 5.621953 -0.7406204  63.5431682  75.46948    1 #> 790  1.668782 5.621953 -0.7406204  21.2252373  61.52853    2 #> 791  1.668782 5.621953 -0.7406204  55.4826231  79.48380    2 #> 792  1.668782 5.621953 -0.7406204  54.4993559  70.46917    1 #> 793  1.668782 5.621953 -0.7406204  39.9538887  70.01352    1 #> 794  1.668782 5.621953 -0.7406204  52.8213303  75.21188    1 #> 795  1.668782 5.621953 -0.7406204  17.8784484  62.71215    1 #> 796  1.668782 5.621953 -0.7406204  69.1486342  69.49095    1 #> 797  1.668782 5.621953 -0.7406204 125.4859552  84.44350    1 #> 798  1.668782 5.621953 -0.7406204  77.9492961  77.33112    2 #> 799  1.668782 5.621953 -0.7406204  68.8333714  79.99650    1 #> 800  1.668782 5.621953 -0.7406204  63.1181812  67.00761    2 #> 801  1.589831 5.738289 -0.7595589  48.9974492  92.48121    2 #> 802  1.589831 5.738289 -0.7595589   9.2847128  81.37087    1 #> 803  1.589831 5.738289 -0.7595589  82.0302547  74.46283    2 #> 804  1.589831 5.738289 -0.7595589  53.7474361  78.08095    2 #> 805  1.589831 5.738289 -0.7595589  39.8132325  66.69704    1 #> 806  1.589831 5.738289 -0.7595589  58.5431310  79.77195    2 #> 807  1.589831 5.738289 -0.7595589  61.1797465  68.79759    1 #> 808  1.589831 5.738289 -0.7595589   2.6978623  65.68119    2 #> 809  1.589831 5.738289 -0.7595589  -2.9959481  74.07861    1 #> 810  1.589831 5.738289 -0.7595589  69.9499963  69.34748    1 #> 811  1.589831 5.738289 -0.7595589  23.1748838  68.48503    1 #> 812  1.589831 5.738289 -0.7595589 102.2255108  79.73994    2 #> 813  1.589831 5.738289 -0.7595589  24.4305703 100.22706    1 #> 814  1.589831 5.738289 -0.7595589  19.7481336  62.37810    2 #> 815  1.589831 5.738289 -0.7595589  96.4547470  68.61734    1 #> 816  1.589831 5.738289 -0.7595589 101.9418487  82.11478    2 #> 817  1.589831 5.738289 -0.7595589  86.4950177  68.86499    1 #> 818  1.589831 5.738289 -0.7595589  53.5351294  83.71468    1 #> 819  1.589831 5.738289 -0.7595589  60.2350748  74.95739    1 #> 820  1.589831 5.738289 -0.7595589  27.6376304  63.64001    2 #> 821  1.589831 5.738289 -0.7595589  76.6861986  72.81275    1 #> 822  1.589831 5.738289 -0.7595589 103.7663980  68.50690    2 #> 823  1.589831 5.738289 -0.7595589  36.1422701  59.36458    2 #> 824  1.589831 5.738289 -0.7595589  59.4754314  76.26514    1 #> 825  1.589831 5.738289 -0.7595589   9.6426331  79.35209    2 #> 826  1.589831 5.738289 -0.7595589  26.4151406  64.25640    1 #> 827  1.589831 5.738289 -0.7595589  96.3884253  70.78145    2 #> 828  1.589831 5.738289 -0.7595589  51.9134774  71.69811    1 #> 829  1.589831 5.738289 -0.7595589  68.7467603  75.20190    1 #> 830  1.589831 5.738289 -0.7595589  89.6591600  82.50803    1 #> 831  1.589831 5.738289 -0.7595589  49.9007763  59.16145    2 #> 832  1.589831 5.738289 -0.7595589  59.2548039  75.33259    1 #> 833  1.589831 5.738289 -0.7595589  60.0082121  70.27023    1 #> 834  1.589831 5.738289 -0.7595589  98.4688321  76.05810    2 #> 835  1.589831 5.738289 -0.7595589  39.4437763  77.66308    2 #> 836  1.589831 5.738289 -0.7595589  98.8925745  82.04197    1 #> 837  1.589831 5.738289 -0.7595589  35.4873664  71.06575    1 #> 838  1.589831 5.738289 -0.7595589  96.4278063  67.67618    1 #> 839  1.589831 5.738289 -0.7595589 115.1815537  84.49771    2 #> 840  1.589831 5.738289 -0.7595589  43.9022059  80.77810    2 #> 841  1.589831 5.738289 -0.7595589  94.6970963  82.54843    2 #> 842  1.589831 5.738289 -0.7595589  68.2905300  81.19173    1 #> 843  1.589831 5.738289 -0.7595589  70.4618488  75.03386    1 #> 844  1.589831 5.738289 -0.7595589  65.3453406  72.85415    2 #> 845  1.589831 5.738289 -0.7595589   8.5493994  67.85077    1 #> 846  1.589831 5.738289 -0.7595589  26.1536808  82.28340    1 #> 847  1.589831 5.738289 -0.7595589  26.0703862  73.35758    2 #> 848  1.589831 5.738289 -0.7595589  40.3849633  84.60289    2 #> 849  1.589831 5.738289 -0.7595589  29.1800568  60.90008    2 #> 850  1.589831 5.738289 -0.7595589 -32.8833387  69.53605    2 #> 851  1.589831 5.738289 -0.7595589 103.9548211  66.74417    1 #> 852  1.589831 5.738289 -0.7595589  78.4960457  66.55584    2 #> 853  1.589831 5.738289 -0.7595589  36.4818552  58.44428    1 #> 854  1.589831 5.738289 -0.7595589  76.5459964  78.62982    2 #> 855  1.589831 5.738289 -0.7595589  30.7158509  90.92795    2 #> 856  1.589831 5.738289 -0.7595589  25.1920732  61.34846    2 #> 857  1.589831 5.738289 -0.7595589  62.0165794  58.02042    2 #> 858  1.589831 5.738289 -0.7595589  49.8357389  90.59638    2 #> 859  1.589831 5.738289 -0.7595589  67.9258393  74.11929    1 #> 860  1.589831 5.738289 -0.7595589  55.4021737  72.10042    2 #> 861  1.589831 5.738289 -0.7595589  59.3635647  96.45434    1 #> 862  1.589831 5.738289 -0.7595589 -23.9923490  81.85788    1 #> 863  1.589831 5.738289 -0.7595589  87.7564769  92.13465    1 #> 864  1.589831 5.738289 -0.7595589  30.0966273  84.67296    2 #> 865  1.589831 5.738289 -0.7595589  66.8280521  88.14905    2 #> 866  1.589831 5.738289 -0.7595589  14.1272676  86.12434    1 #> 867  1.589831 5.738289 -0.7595589  67.9355537  80.70283    1 #> 868  1.589831 5.738289 -0.7595589  73.7743451  76.28507    2 #> 869  1.589831 5.738289 -0.7595589  52.5817553  75.43390    2 #> 870  1.589831 5.738289 -0.7595589  82.7847247  74.09916    2 #> 871  1.589831 5.738289 -0.7595589 119.3344072  72.45604    2 #> 872  1.589831 5.738289 -0.7595589  32.4057085  95.16381    1 #> 873  1.589831 5.738289 -0.7595589  23.4616522  51.02043    2 #> 874  1.589831 5.738289 -0.7595589  73.8724576 105.52575    2 #> 875  1.589831 5.738289 -0.7595589  95.2052909  67.49209    2 #> 876  1.589831 5.738289 -0.7595589  25.5779995  77.98522    1 #> 877  1.589831 5.738289 -0.7595589  41.3323586  97.91934    2 #> 878  1.589831 5.738289 -0.7595589  40.2603584  62.72925    2 #> 879  1.589831 5.738289 -0.7595589  35.0464101  81.22116    1 #> 880  1.589831 5.738289 -0.7595589  45.2187386  66.35779    2 #> 881  1.589831 5.738289 -0.7595589  77.5589970  87.31650    2 #> 882  1.589831 5.738289 -0.7595589  74.0977454  60.30295    1 #> 883  1.589831 5.738289 -0.7595589  79.2633304  83.93338    2 #> 884  1.589831 5.738289 -0.7595589  30.4352771  67.12438    1 #> 885  1.589831 5.738289 -0.7595589  17.2133018  84.08617    1 #> 886  1.589831 5.738289 -0.7595589  81.1112620  87.21712    1 #> 887  1.589831 5.738289 -0.7595589  23.0544113  66.02937    1 #> 888  1.589831 5.738289 -0.7595589  98.8625800  72.11651    2 #> 889  1.589831 5.738289 -0.7595589 -19.0959381  67.04116    1 #> 890  1.589831 5.738289 -0.7595589  74.4115694  52.53401    2 #> 891  1.589831 5.738289 -0.7595589  19.8049746  85.72635    1 #> 892  1.589831 5.738289 -0.7595589  76.0357495  76.12203    2 #> 893  1.589831 5.738289 -0.7595589  22.0888890  63.61794    2 #> 894  1.589831 5.738289 -0.7595589  67.4404536  84.88998    2 #> 895  1.589831 5.738289 -0.7595589  77.0286630  77.33351    2 #> 896  1.589831 5.738289 -0.7595589 118.5036480  82.51741    2 #> 897  1.589831 5.738289 -0.7595589  72.3987364  66.69147    1 #> 898  1.589831 5.738289 -0.7595589  12.2115634  71.74859    1 #> 899  1.589831 5.738289 -0.7595589  11.7928610  57.44029    1 #> 900  1.589831 5.738289 -0.7595589  53.6132611  68.94733    1 #> 901  1.613207 5.713738 -0.6484928  48.0109271  83.58202    1 #> 902  1.613207 5.713738 -0.6484928  -8.0301263  58.14177    2 #> 903  1.613207 5.713738 -0.6484928 -30.7769719  80.18095    1 #> 904  1.613207 5.713738 -0.6484928  12.7671316  79.99454    1 #> 905  1.613207 5.713738 -0.6484928  77.9824107  68.89383    2 #> 906  1.613207 5.713738 -0.6484928  77.2201927  88.51741    1 #> 907  1.613207 5.713738 -0.6484928  36.5923496  69.43529    1 #> 908  1.613207 5.713738 -0.6484928  48.9469580  90.75974    1 #> 909  1.613207 5.713738 -0.6484928  30.8224486  59.73813    1 #> 910  1.613207 5.713738 -0.6484928  35.7877271  70.84232    2 #> 911  1.613207 5.713738 -0.6484928  50.7266752  79.45346    2 #> 912  1.613207 5.713738 -0.6484928  65.2592161  57.61760    2 #> 913  1.613207 5.713738 -0.6484928  69.6026508  57.05023    1 #> 914  1.613207 5.713738 -0.6484928   0.7834984  73.61108    2 #> 915  1.613207 5.713738 -0.6484928  53.7762736  81.47588    2 #> 916  1.613207 5.713738 -0.6484928  89.3596538  80.25444    1 #> 917  1.613207 5.713738 -0.6484928  36.7637973  64.70868    1 #> 918  1.613207 5.713738 -0.6484928  32.2188928  81.81383    1 #> 919  1.613207 5.713738 -0.6484928  40.0758720  70.69324    1 #> 920  1.613207 5.713738 -0.6484928  24.8765461  72.98046    2 #> 921  1.613207 5.713738 -0.6484928  78.2716775  75.99325    2 #> 922  1.613207 5.713738 -0.6484928  -6.3395057  87.27324    2 #> 923  1.613207 5.713738 -0.6484928  22.6829677  94.22893    1 #> 924  1.613207 5.713738 -0.6484928  38.0136768  62.80747    2 #> 925  1.613207 5.713738 -0.6484928  35.1313985  68.95838    1 #> 926  1.613207 5.713738 -0.6484928  27.4797677  76.63736    2 #> 927  1.613207 5.713738 -0.6484928  30.5236960  66.16893    2 #> 928  1.613207 5.713738 -0.6484928  35.1188336  81.73566    2 #> 929  1.613207 5.713738 -0.6484928  28.4977983 104.08615    1 #> 930  1.613207 5.713738 -0.6484928  41.6466431  77.25039    1 #> 931  1.613207 5.713738 -0.6484928  45.9843787  79.00656    2 #> 932  1.613207 5.713738 -0.6484928  65.4998293  71.16540    2 #> 933  1.613207 5.713738 -0.6484928  69.3224629  82.60627    2 #> 934  1.613207 5.713738 -0.6484928  59.6321831  86.92970    2 #> 935  1.613207 5.713738 -0.6484928   8.5806949  60.81721    1 #> 936  1.613207 5.713738 -0.6484928  26.2068213  74.73239    2 #> 937  1.613207 5.713738 -0.6484928  11.2314175  63.90678    1 #> 938  1.613207 5.713738 -0.6484928  11.3707453  73.53251    2 #> 939  1.613207 5.713738 -0.6484928  78.2083687  71.39561    2 #> 940  1.613207 5.713738 -0.6484928  60.2735247  70.71942    2 #> 941  1.613207 5.713738 -0.6484928  44.8890747  81.41948    2 #> 942  1.613207 5.713738 -0.6484928  58.1814310  60.21858    1 #> 943  1.613207 5.713738 -0.6484928  84.7712213  60.52621    1 #> 944  1.613207 5.713738 -0.6484928   5.9956678  75.88211    1 #> 945  1.613207 5.713738 -0.6484928 -17.0222388  86.29289    2 #> 946  1.613207 5.713738 -0.6484928  62.7227620  73.75868    2 #> 947  1.613207 5.713738 -0.6484928  32.0911038  74.75940    1 #> 948  1.613207 5.713738 -0.6484928  78.4050789  70.20741    2 #> 949  1.613207 5.713738 -0.6484928  32.7781423  70.14355    2 #> 950  1.613207 5.713738 -0.6484928  73.4391557  81.68525    2 #> 951  1.613207 5.713738 -0.6484928  49.7361763  84.40696    1 #> 952  1.613207 5.713738 -0.6484928  57.9753483  82.18861    2 #> 953  1.613207 5.713738 -0.6484928  82.3302532  74.69445    1 #> 954  1.613207 5.713738 -0.6484928  57.6937706  88.39127    1 #> 955  1.613207 5.713738 -0.6484928  21.4806872  70.94022    1 #> 956  1.613207 5.713738 -0.6484928  41.6855276  70.52054    1 #> 957  1.613207 5.713738 -0.6484928  58.2824698  76.95454    2 #> 958  1.613207 5.713738 -0.6484928 -28.4194234 104.36439    2 #> 959  1.613207 5.713738 -0.6484928  -0.3208229  71.12139    2 #> 960  1.613207 5.713738 -0.6484928  93.8628975  64.04545    2 #> 961  1.613207 5.713738 -0.6484928  48.7233971  74.58184    1 #> 962  1.613207 5.713738 -0.6484928  -4.8453070  76.58630    1 #> 963  1.613207 5.713738 -0.6484928  59.3592742  66.97198    1 #> 964  1.613207 5.713738 -0.6484928  59.0093486  70.31729    1 #> 965  1.613207 5.713738 -0.6484928  52.2446956  74.82363    1 #> 966  1.613207 5.713738 -0.6484928  39.0863283  71.03333    1 #> 967  1.613207 5.713738 -0.6484928  57.5986251  81.46471    2 #> 968  1.613207 5.713738 -0.6484928  42.1454018  75.47601    2 #> 969  1.613207 5.713738 -0.6484928  43.1725786  66.90505    1 #> 970  1.613207 5.713738 -0.6484928  82.4901817  64.21519    1 #> 971  1.613207 5.713738 -0.6484928  60.7011635  72.24152    1 #> 972  1.613207 5.713738 -0.6484928  65.3391669  59.35424    1 #> 973  1.613207 5.713738 -0.6484928  31.9185684  66.83118    1 #> 974  1.613207 5.713738 -0.6484928  36.3661832  77.91527    1 #> 975  1.613207 5.713738 -0.6484928  59.0508009  77.52569    2 #> 976  1.613207 5.713738 -0.6484928  47.2930855  72.17148    1 #> 977  1.613207 5.713738 -0.6484928  96.8750065  73.46133    1 #> 978  1.613207 5.713738 -0.6484928  55.0212657  76.76546    2 #> 979  1.613207 5.713738 -0.6484928  62.6863454  58.77168    1 #> 980  1.613207 5.713738 -0.6484928  68.6373889  85.16956    1 #> 981  1.613207 5.713738 -0.6484928  81.2755279  48.92099    2 #> 982  1.613207 5.713738 -0.6484928 103.8595340  74.33343    1 #> 983  1.613207 5.713738 -0.6484928  28.6579149  90.43011    2 #> 984  1.613207 5.713738 -0.6484928   4.9403665  72.73476    1 #> 985  1.613207 5.713738 -0.6484928  78.8366005  74.70983    1 #> 986  1.613207 5.713738 -0.6484928  11.1238010  80.43364    1 #> 987  1.613207 5.713738 -0.6484928  63.3598971  57.93831    1 #> 988  1.613207 5.713738 -0.6484928  22.6545483  62.80785    1 #> 989  1.613207 5.713738 -0.6484928  64.5373818  90.66765    2 #> 990  1.613207 5.713738 -0.6484928  52.7217474  68.58825    1 #> 991  1.613207 5.713738 -0.6484928  36.9216153  70.37398    2 #> 992  1.613207 5.713738 -0.6484928  79.8122065  75.39207    1 #> 993  1.613207 5.713738 -0.6484928  61.5295674  77.52203    1 #> 994  1.613207 5.713738 -0.6484928  63.0572080  72.05715    1 #> 995  1.613207 5.713738 -0.6484928  99.1723557  78.37895    1 #> 996  1.613207 5.713738 -0.6484928  47.8702574  75.61264    1 #> 997  1.613207 5.713738 -0.6484928  87.0387347  73.06106    2 #> 998  1.613207 5.713738 -0.6484928  84.5713440  79.66582    2 #> 999  1.613207 5.713738 -0.6484928  27.4957126  98.71902    1 #> 1000 1.613207 5.713738 -0.6484928  45.5107794  75.38610    1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain.html","id":null,"dir":"Reference","previous_headings":"","what":"rxChain Chain or add item to solved system of equations — rxChain","title":"rxChain Chain or add item to solved system of equations — rxChain","text":"Add item solved system equations","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxChain Chain or add item to solved system of equations — rxChain","text":"","code":"rxChain(obj1, obj2)  # S3 method for class 'solveRxDll' obj1 + obj2"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxChain Chain or add item to solved system of equations — rxChain","text":"obj1 Solved object. obj2 New object added/piped/chained solved object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxChain Chain or add item to solved system of equations — rxChain","text":"newObject event table, return new solved object new event table.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxChain Chain or add item to solved system of equations — rxChain","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain2.html","id":null,"dir":"Reference","previous_headings":"","what":"Second command in chaining commands — rxChain2","title":"Second command in chaining commands — rxChain2","text":"s3 method called internally + \\%>\\% operators.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second command in chaining commands — rxChain2","text":"","code":"rxChain2(obj, solvedObject)  # Default S3 method rxChain2(obj, solvedObject)  # S3 method for class 'EventTable' rxChain2(obj, solvedObject)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second command in chaining commands — rxChain2","text":"obj object added/chained/piped solved object solvedObject solved object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second command in chaining commands — rxChain2","text":"chained operation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxChain2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Second command in chaining commands — rxChain2","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxClean.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup anonymous DLLs by unloading them — rxClean","title":"Cleanup anonymous DLLs by unloading them — rxClean","text":"cleans rxode2 loaded DLLs","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxClean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup anonymous DLLs by unloading them — rxClean","text":"","code":"rxClean(wd)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxClean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup anonymous DLLs by unloading them — rxClean","text":"wd directory cleaned; (DEPRECIATED), longer anything. unloads rxode2 anonymous dlls.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxClean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleanup anonymous DLLs by unloading them — rxClean","text":"TRUE successful","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxClean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cleanup anonymous DLLs by unloading them — rxClean","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"Combine Error Lines create rxode2 expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"","code":"rxCombineErrorLines(   uiModel,   errLines = NULL,   prefixLines = NULL,   paramsLine = NULL,   modelVars = FALSE,   cmtLines = TRUE,   dvidLine = TRUE,   lstExpr = NULL,   useIf = TRUE,   interpLines = NULL,   levelLines = NULL )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"uiModel UI model errLines Error lines; missing, get error lines rxGetDistributionSimulationLines() prefixLines Prefix lines, param statement paramsLine Params line, present. modelVars Return model vars instead rxode2 statement cmtLines Include trailing cmt lines dvidLine Include trailing dvid() specification lstExpr list expressions model, NULL.  NULL defaults model expressions accessible uiModel$lstExpr. useIf Use (CMT == X) endpoints interpLines Interpolation lines, present levelLines Levels lines assigned strings.  present, use interpolation lines current model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"quoted expression can evaluated compiled rxode2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"exported allow functions mangle error lines make types estimation methods (needed)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCombineErrorLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Error Lines and create rxode2 expression — rxCombineErrorLines","text":"","code":"# \\donttest{  one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  f <- rxode2(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  # You can get the simulation model easily by rxCombineErrorLines(f) #> rxode2({ #>     params(tka, tcl, tv, add.sd, eta.ka, eta.cl, eta.v) #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     rx_yj_ ~ 2 #>     rx_lambda_ ~ 1 #>     rx_low_ ~ 0 #>     rx_hi_ ~ 1 #>     rx_pred_f_ ~ linCmt() #>     rx_pred_ ~ rx_pred_f_ #>     rx_r_ ~ (add.sd)^2 #>     ipredSim <- rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>         rx_hi_) #>     sim <- rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.rxLinCmt, rx_lambda_,  #>         rx_yj_, rx_low_, rx_hi_) #>     cmt(rxLinCmt) #>     dvid(3) #> })  # You can then get the compiled model by simply evaluting the model: r <- eval(rxCombineErrorLines(f)) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  # This also works with multile endpoint models: pk.turnover.emax <- function() {   ini({     tktr <- log(1)     tka <- log(1)     tcl <- log(0.1)     tv <- log(10)     ##     eta.ktr ~ 1     eta.ka ~ 1     eta.cl ~ 2     eta.v ~ 1     prop.err <- 0.1     pkadd.err <- 0.1     ##     temax <- logit(0.8)     tec50 <- log(0.5)     tkout <- log(0.05)     te0 <- log(100)     ##     eta.emax ~ .5     eta.ec50  ~ .5     eta.kout ~ .5     eta.e0 ~ .5     ##     pdadd.err <- 10   })   model({     ktr <- exp(tktr + eta.ktr)     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     ##     emax=expit(temax+eta.emax)     ec50 =  exp(tec50 + eta.ec50)     kout = exp(tkout + eta.kout)     e0 = exp(te0 + eta.e0)     ##     DCP = center/v     PD=1-emax*DCP/(ec50+DCP)     ##     effect(0) = e0     kin = e0*kout     ##     d/dt(depot) = -ktr * depot     d/dt(gut) =  ktr * depot -ka * gut     d/dt(center) =  ka * gut - cl / v * center     d/dt(effect) = kin*PD -kout*effect     ##     cp = center / v     cp ~ prop(prop.err) + add(pkadd.err)     effect ~ add(pdadd.err)   }) }  f <- rxode2(pk.turnover.emax) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments rxCombineErrorLines(f) #> rxode2({ #>     params(tktr, tka, tcl, tv, prop.err, pkadd.err, temax, tec50,  #>         tkout, te0, pdadd.err, eta.ktr, eta.ka, eta.cl, eta.v,  #>         eta.emax, eta.ec50, eta.kout, eta.e0) #>     ktr <- exp(tktr + eta.ktr) #>     ka <- exp(tka + eta.ka) #>     cl <- exp(tcl + eta.cl) #>     v <- exp(tv + eta.v) #>     emax = expit(temax + eta.emax, 0, 1) #>     ec50 = exp(tec50 + eta.ec50) #>     kout = exp(tkout + eta.kout) #>     e0 = exp(te0 + eta.e0) #>     DCP = center/v #>     PD = 1 - emax * DCP/(ec50 + DCP) #>     effect(0) = e0 #>     kin = e0 * kout #>     d/dt(depot) = -ktr * depot #>     d/dt(gut) = ktr * depot - ka * gut #>     d/dt(center) = ka * gut - cl/v * center #>     d/dt(effect) = kin * PD - kout * effect #>     cp = center/v #>     if (CMT == 5) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ cp #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (pkadd.err)^2 + (rx_pred_f_)^2 * (prop.err)^2 #>         ipredSim <- rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim <- rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.cp, rx_lambda_,  #>             rx_yj_, rx_low_, rx_hi_) #>     } #>     if (CMT == 4) { #>         rx_yj_ ~ 2 #>         rx_lambda_ ~ 1 #>         rx_low_ ~ 0 #>         rx_hi_ ~ 1 #>         rx_pred_f_ ~ effect #>         rx_pred_ ~ rx_pred_f_ #>         rx_r_ ~ (pdadd.err)^2 #>         ipredSim <- rxTBSi(rx_pred_, rx_lambda_, rx_yj_, rx_low_,  #>             rx_hi_) #>         sim <- rxTBSi(rx_pred_ + sqrt(rx_r_) * rxerr.effect,  #>             rx_lambda_, rx_yj_, rx_low_, rx_hi_) #>     } #>     cmt(cp) #>     dvid(5, 4) #> })  # Note that in the parsed form, you can also get the compiled rxode2 # model with $simulationModel  f$simulationModel #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> rxode2 4.0.0 model named rx_0a4c7d037fe6ea6b425ad19f5ba49de5 model (✔ ready).  #> value$state: depot, gut, center, effect #> value$stateExtra: cp #> value$params: tktr, tka, tcl, tv, prop.err, pkadd.err, temax, tec50, tkout, te0, pdadd.err, eta.ktr, eta.ka, eta.cl, eta.v, eta.emax, eta.ec50, eta.kout, eta.e0, CMT, rxerr.cp, rxerr.effect #> value$lhs: ktr, ka, cl, v, emax, ec50, kout, e0, DCP, PD, kin, cp, ipredSim, sim  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCompile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a model if needed — rxCompile","title":"Compile a model if needed — rxCompile","text":"compilation workhorse creating rxode2 model DLL files.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCompile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a model if needed — rxCompile","text":"","code":"rxCompile(   model,   dir,   prefix,   force = FALSE,   modName = NULL,   package = NULL,   ... )  # S3 method for class 'rxModelVars' rxCompile(   model,   dir = NULL,   prefix = NULL,   force = FALSE,   modName = NULL,   package = NULL,   ... )  # S3 method for class 'character' rxCompile(   model,   dir = NULL,   prefix = NULL,   force = FALSE,   modName = NULL,   package = NULL,   ... )  # S3 method for class 'rxDll' rxCompile(model, ...)  # S3 method for class 'rxode2' rxCompile(model, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCompile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a model if needed — rxCompile","text":"model ODE model specification.  can : string containing set ordinary differential equations (ODE) expressions defining changes dynamic system. file name ODE system equation contained ODE expression enclosed \\{\\} (see also filename argument). details, see sections “Details” rxode2 Syntax . dir model directory C file stored compiling.   prefix string indicating prefix use C based functions.  missing, calculated based file name, md5 parsed model. force boolean stating (re)compile forced rxode2 detects models already generated. modName string used model name. string used naming various aspects computations, including generating C symbol names, dynamic libraries, etc. Therefore, necessary modName consists simple ASCII alphanumeric characters starting letter. package Package name pre-compiled binaries. ... arguments sent rxTrans() function.","code":"If unspecified, the C code is stored in a temporary directory, then the model is compiled and moved to the current directory. Afterwards the C code is removed.  If specified, the C code is stored in the specified directory and then compiled in that directory.  The C code is not removed after the DLL is created in the same directory.  This can be useful to debug the c-code outputs."},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCompile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a model if needed — rxCompile","text":"rxDll object following components dll DLL path model model specification .c function call C code correct context DLL using .C() function. .call function call C code correct context DLL using .Call() function. args list arguments used create rxDll object.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCompile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compile a model if needed — rxCompile","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Current Condition for rxode2 object — rxCondition","title":"Current Condition for rxode2 object — rxCondition","text":"Current Condition rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current Condition for rxode2 object — rxCondition","text":"","code":"rxCondition(obj, condition = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Current Condition for rxode2 object — rxCondition","text":"obj rxode2 object condition specified one conditions rxode2 object (determined rxExpandIfElse()), assign rxode2 current condition parameter.  condition one known condition, condition set NULL, implying conditioning currently used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCondition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current Condition for rxode2 object — rxCondition","text":"Current condition rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCondition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Current Condition for rxode2 object — rxCondition","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":null,"dir":"Reference","previous_headings":"","what":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"assumes normal ODE equations first equations ODE expanded forward sensitivities type sensitivity (like adjoint)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"","code":"rxControlUpdateSens(rxControl, sensCmt = NULL, ncmt = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"rxControl Input list rxControl type list sensCmt Number sensitivity compartments ncmt Number compartments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"Updated rxControl $atol, $rtol, $ssAtol $ssRtol updated different sensitivities normal ODEs (first) different sensitivity larger compartments (sensitivities).","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxControlUpdateSens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This updates the tolerances based on the sensitivity equations — rxControlUpdateSens","text":"","code":"tmp <- rxControl()  tmp2 <- rxControlUpdateSens(tmp, 3, 6)  tmp2$atol #> [1] 1e-08 1e-08 1e-08 1e-08 1e-08 1e-08 tmp2$rtol #> [1] 1e-06 1e-06 1e-06 1e-06 1e-06 1e-06 tmp2$ssAtol #> [1] 1e-08 1e-08 1e-08 1e-08 1e-08 1e-08 tmp2$ssRtol #> [1] 1e-06 1e-06 1e-06 1e-06 1e-06 1e-06"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCreateCache.html","id":null,"dir":"Reference","previous_headings":"","what":"This will create the cache directory for rxode2 to save between sessions — rxCreateCache","title":"This will create the cache directory for rxode2 to save between sessions — rxCreateCache","text":"run, R_user_dir rxode2's cache present, create cache","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCreateCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This will create the cache directory for rxode2 to save between sessions — rxCreateCache","text":"","code":"rxCreateCache()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCreateCache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This will create the cache directory for rxode2 to save between sessions — rxCreateCache","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxCreateCache.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This will create the cache directory for rxode2 to save between sessions — rxCreateCache","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":null,"dir":"Reference","previous_headings":"","what":"Add to rxode2's derivative tables — rxD","title":"Add to rxode2's derivative tables — rxD","text":"Add rxode2's derivative tables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add to rxode2's derivative tables — rxD","text":"","code":"rxD(name, derivatives)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add to rxode2's derivative tables — rxD","text":"name Function Name derivatives list functions. function takes number arguments original function.  first function construct derivative respect first argument; second function construct derivitive respect second argument, .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add to rxode2's derivative tables — rxD","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add to rxode2's derivative tables — rxD","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add to rxode2's derivative tables — rxD","text":"","code":"## Add an arbitrary list of derivative functions ## In this case the fun(x,y) is assumed to be 0.5*x^2+0.5*y^2  rxD(\"fun\", list(   function(x, y) {     return(x)   },   function(x, y) {     return(y)   } ))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDelete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete the DLL for the model — rxDelete","title":"Delete the DLL for the model — rxDelete","text":"function deletes DLL, delete model information object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDelete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete the DLL for the model — rxDelete","text":"","code":"rxDelete(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDelete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete the DLL for the model — rxDelete","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDelete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete the DLL for the model — rxDelete","text":"boolean stating operation successful.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDelete.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delete the DLL for the model — rxDelete","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Demote the error type — rxDemoteAddErr","title":"Demote the error type — rxDemoteAddErr","text":"Demote error type","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demote the error type — rxDemoteAddErr","text":"","code":"rxDemoteAddErr(errType)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demote the error type — rxDemoteAddErr","text":"errType Error type factor","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demote the error type — rxDemoteAddErr","text":"Demoted Error Type","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Demote the error type — rxDemoteAddErr","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDemoteAddErr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demote the error type — rxDemoteAddErr","text":"","code":"rxErrTypeCombine(\"add\") %>%   rxErrTypeCombine(\"prop\") #> $transform #> [1] untransformed #> 10 Levels: boxCox yeoJohnson untransformed lnorm logit ... probit + boxCox #>  #> $errType #> [1] add + prop #> Levels: add prop pow add + prop add + pow none #>  #> $errTypeF #> [1] untransformed #> Levels: untransformed transformed f none #>  #> $addProp #> [1] default #> Levels: combined1 combined2 default #>  #> attr(,\"class\") #> [1] \"rxCombinedErrorList\"  # This removes the internal additive error rxErrTypeCombine(\"add\") %>%   rxErrTypeCombine(\"prop\") %>%   rxDemoteAddErr() #> $transform #> [1] untransformed #> 10 Levels: boxCox yeoJohnson untransformed lnorm logit ... probit + boxCox #>  #> $errType #> [1] prop #> Levels: add prop pow add + prop add + pow none #>  #> $errTypeF #> [1] untransformed #> Levels: untransformed transformed f none #>  #> $addProp #> [1] default #> Levels: combined1 combined2 default #>  #> attr(,\"class\") #> [1] \"rxCombinedErrorList\"  # This is used for logitNorm(NA), the additive portion is stripped"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"calculates derived parameters based provided data frame arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"","code":"rxDerived(..., verbose = FALSE, digits = 0)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"... input can : data frame PK parameters ; ideally data frame one pk parameter per row since output data frame one PK parameter per row. PK parameters either vector scalar verbose boolean TRUE provides message detected pk parameters detected compartmental model.  default FALSE. digits represents number significant digits output; number zero (default), round.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"Return data.frame derived PK parameters 1-, 2-, 3-compartment linear model given provided clearances volumes based inferred model type. model parameters provided data frame : vc: Central Volume (1-, 2- 3- compartment models) kel: First-order elimination rate (1-, 2-, 3-compartment models) k12: First-order rate transfer central first peripheral compartment; (2- 3-compartment models) k21: First-order rate transfer first peripheral central compartment, (2- 3-compartment models) k13: First-order rate transfer central second peripheral compartment; (3-compartment model) k31: First-order rate transfer second peripheral central compartment (3-compartment model) vp: Peripheral Volume (2- 3- compartment models) vp2: Peripheral Volume 3rd compartment (3- compartment model) vss: Volume distribution steady state; (1-, 2-, 3-compartment models) t12alpha: \\(t_{1/2,\\alpha}\\); (1-, 2-, 3-compartment models) t12beta: \\(t_{1/2,\\beta}\\); (2- 3-compartment models) t12gamma: \\(t_{1/2,\\gamma}\\); (3-compartment model) alpha: \\(\\alpha\\); (1-, 2-, 3-compartment models) beta: \\(\\beta\\); (2- 3-compartment models) gamma: \\(\\beta\\); (3-compartment model) : true ; (1-, 2-, 3-compartment models) B: true B; (2- 3-compartment models) C: true C; (3-compartment model) fracA: fractional ; (1-, 2-, 3-compartment models) fracB: fractional B; (2- 3-compartment models) fracC: fractional C; (3-compartment model)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"Shafer S. L. CONVERT.XLS Rowland M, Tozer TN. Clinical Pharmacokinetics Pharmacodynamics: Concepts Applications (4th). Clipping Williams & Wilkins, Philadelphia, 2010.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"Matthew Fidler documentation Justin Wilkins, justin.wilkins@occams.com","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDerived.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate derived parameters for the 1-, 2-, and 3- compartment linear models. — rxDerived","text":"","code":"## Note that rxode2 parses the names to figure out the best PK parameter  params <- rxDerived(cl = 29.4, v = 23.4, Vp = 114, vp2 = 4614, q = 270, q2 = 73)  ## That is why this gives the same results as the value before  params <- rxDerived(CL = 29.4, V1 = 23.4, V2 = 114, V3 = 4614, Q2 = 270, Q3 = 73)  ## You may also use micro-constants alpha/beta etc.  params <- rxDerived(k12 = 0.1, k21 = 0.2, k13 = 0.3, k31 = 0.4, kel = 10, v = 10)  ## or you can mix vectors and scalars  params <- rxDerived(CL = 29.4, V = 1:3)  ## If you want, you can round to a number of significant digits ## with the `digits` argument:  params <- rxDerived(CL = 29.4, V = 1:3, digits = 2)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDfdy.html","id":null,"dir":"Reference","previous_headings":"","what":"Jacobian and parameter derivatives — rxDfdy","title":"Jacobian and parameter derivatives — rxDfdy","text":"Return Jacobain parameter derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDfdy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jacobian and parameter derivatives — rxDfdy","text":"","code":"rxDfdy(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDfdy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jacobian and parameter derivatives — rxDfdy","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDfdy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jacobian and parameter derivatives — rxDfdy","text":"list jacobian parameters defined rxode2 object.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDfdy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Jacobian and parameter derivatives — rxDfdy","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDll.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the DLL associated with the rxode2 object — rxDll","title":"Return the DLL associated with the rxode2 object — rxDll","text":"return dynamic load library shared object used run C code rxode2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the DLL associated with the rxode2 object — rxDll","text":"","code":"rxDll(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the DLL associated with the rxode2 object — rxDll","text":"obj rxode2 family objects character string model specification location file model specification.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the DLL associated with the rxode2 object — rxDll","text":"path library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the DLL associated with the rxode2 object — rxDll","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Load rxode2 object — rxDynLoad","title":"Load rxode2 object — rxDynLoad","text":"Load rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load rxode2 object — rxDynLoad","text":"","code":"rxDynLoad(obj)  rxLoad(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load rxode2 object — rxDynLoad","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynLoad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load rxode2 object — rxDynLoad","text":"Boolean returning rxode2 library loaded.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynLoad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load rxode2 object — rxDynLoad","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynUnload.html","id":null,"dir":"Reference","previous_headings":"","what":"Unload rxode2 object — rxDynUnload","title":"Unload rxode2 object — rxDynUnload","text":"Unload rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynUnload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unload rxode2 object — rxDynUnload","text":"","code":"rxDynUnload(obj)  rxUnload(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynUnload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unload rxode2 object — rxDynUnload","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynUnload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unload rxode2 object — rxDynUnload","text":"Boolean returning rxode2 library loaded.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxDynUnload.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unload rxode2 object — rxDynUnload","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine transformations and error structures — rxErrTypeCombine","title":"Combine transformations and error structures — rxErrTypeCombine","text":"Combine error information figure transformation applied current endpoint","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine transformations and error structures — rxErrTypeCombine","text":"","code":"rxErrTypeCombine(oldErrType, newErrType)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine transformations and error structures — rxErrTypeCombine","text":"oldErrType old transformation, default zero representing prior transformation. parameter first allow piping. parameter addTransform missing oldErrType character value, functions swaps oldErrType addTransform assigns oldErrType zero assuming prior distribution. newErrType new distribution \"added\" current transformation.  assumes inputs preferred distribution name, determined rxPreferredDistributionName()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine transformations and error structures — rxErrTypeCombine","text":"new transformation factor","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine transformations and error structures — rxErrTypeCombine","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxErrTypeCombine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine transformations and error structures — rxErrTypeCombine","text":"","code":"rxErrTypeCombine(\"probitNorm\") #> $transform #> [1] probit #> 10 Levels: boxCox yeoJohnson untransformed lnorm logit ... probit + boxCox #>  #> $errType #> [1] add #> Levels: add prop pow add + prop add + pow none #>  #> $errTypeF #> [1] none #> Levels: untransformed transformed f none #>  #> $addProp #> [1] default #> Levels: combined1 combined2 default #>  #> attr(,\"class\") #> [1] \"rxCombinedErrorList\"  rxErrTypeCombine(\"probitNorm\") %>%   rxErrTypeCombine(\"boxCox\") #> $transform #> [1] probit + boxCox #> 10 Levels: boxCox yeoJohnson untransformed lnorm logit ... probit + boxCox #>  #> $errType #> [1] add #> Levels: add prop pow add + prop add + pow none #>  #> $errTypeF #> [1] none #> Levels: untransformed transformed f none #>  #> $addProp #> [1] default #> Levels: combined1 combined2 default #>  #> attr(,\"class\") #> [1] \"rxCombinedErrorList\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEtDispatchSolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","title":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","text":"Dispatch solve 'rxode2' solve","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEtDispatchSolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","text":"","code":"rxEtDispatchSolve(x, ...)  # Default S3 method rxEtDispatchSolve(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEtDispatchSolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","text":"x rxode2 solve dispatch object ... arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEtDispatchSolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","text":"'rxode2'  loaded, solved object, otherwise error","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEtDispatchSolve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dispatch solve to 'rxode2' solve — rxEtDispatchSolve","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEvid.html","id":null,"dir":"Reference","previous_headings":"","what":"EVID formatting for tibble and other places. — rxEvid","title":"EVID formatting for tibble and other places. — rxEvid","text":"make EVID readable non pharmacometricians. displays means allows displayed tibble.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEvid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EVID formatting for tibble and other places. — rxEvid","text":"","code":"rxEvid(x)  as.rxEvid(x)  # S3 method for class 'rxEvid' c(x, ...)  # S3 method for class 'rxEvid' x[...]  # S3 method for class 'rxEvid' as.character(x, ...)  # S3 method for class 'rxEvid' x[[...]]  # S3 method for class 'rxEvid' units(x) <- value  # S3 method for class 'rxRateDur' c(x, ...)  # S3 method for class 'rxEvid' format(x, ...)  # S3 method for class 'rxRateDur' format(x, ...)  # S3 method for class 'rxEvid' print(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEvid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EVID formatting for tibble and other places. — rxEvid","text":"x Item converted rxode2 EVID specification. ... parameters value error set units evid","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEvid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EVID formatting for tibble and other places. — rxEvid","text":"rxEvid specification","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxEvid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EVID formatting for tibble and other places. — rxEvid","text":"","code":"rxEvid(1:7) #> 1:Dose (Add)                 #> 2:Other                      #> 3:Reset                      #> 4:Reset&Dose #> 5:Replace                    #> 6:Multiply                   #> 7:Transit"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandFEta_.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand d(f)/d(eta) — rxExpandFEta_","title":"Expand d(f)/d(eta) — rxExpandFEta_","text":"Expand d(f)/d(eta)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandFEta_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand d(f)/d(eta) — rxExpandFEta_","text":"","code":"rxExpandFEta_(state, neta, pred, isTheta = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandFEta_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand d(f)/d(eta) — rxExpandFEta_","text":"state state expand neta number etas pred type prediction isTheta logical, expansion actually thetas instead etas","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandFEta_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand d(f)/d(eta) — rxExpandFEta_","text":"String symengine expressions evaluate calculate df/deta","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Faster expand.grid — rxExpandGrid","title":"Faster expand.grid — rxExpandGrid","text":"support x y characters right now","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faster expand.grid — rxExpandGrid","text":"","code":"rxExpandGrid(x, y, type = 0L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faster expand.grid — rxExpandGrid","text":"x first element (must character) y second element (must character) type Internal type=0L traditional expand grid type=1L Jacobian expand grid (adds symbols)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Faster expand.grid — rxExpandGrid","text":"Expand grid","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Faster expand.grid — rxExpandGrid","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faster expand.grid — rxExpandGrid","text":"","code":"## rxExpandGrid(letters, letters) #>     Var1 Var2 #> 1      a    a #> 2      b    a #> 3      c    a #> 4      d    a #> 5      e    a #> 6      f    a #> 7      g    a #> 8      h    a #> 9      i    a #> 10     j    a #> 11     k    a #> 12     l    a #> 13     m    a #> 14     n    a #> 15     o    a #> 16     p    a #> 17     q    a #> 18     r    a #> 19     s    a #> 20     t    a #> 21     u    a #> 22     v    a #> 23     w    a #> 24     x    a #> 25     y    a #> 26     z    a #> 27     a    b #> 28     b    b #> 29     c    b #> 30     d    b #> 31     e    b #> 32     f    b #> 33     g    b #> 34     h    b #> 35     i    b #> 36     j    b #> 37     k    b #> 38     l    b #> 39     m    b #> 40     n    b #> 41     o    b #> 42     p    b #> 43     q    b #> 44     r    b #> 45     s    b #> 46     t    b #> 47     u    b #> 48     v    b #> 49     w    b #> 50     x    b #> 51     y    b #> 52     z    b #> 53     a    c #> 54     b    c #> 55     c    c #> 56     d    c #> 57     e    c #> 58     f    c #> 59     g    c #> 60     h    c #> 61     i    c #> 62     j    c #> 63     k    c #> 64     l    c #> 65     m    c #> 66     n    c #> 67     o    c #> 68     p    c #> 69     q    c #> 70     r    c #> 71     s    c #> 72     t    c #> 73     u    c #> 74     v    c #> 75     w    c #> 76     x    c #> 77     y    c #> 78     z    c #> 79     a    d #> 80     b    d #> 81     c    d #> 82     d    d #> 83     e    d #> 84     f    d #> 85     g    d #> 86     h    d #> 87     i    d #> 88     j    d #> 89     k    d #> 90     l    d #> 91     m    d #> 92     n    d #> 93     o    d #> 94     p    d #> 95     q    d #> 96     r    d #> 97     s    d #> 98     t    d #> 99     u    d #> 100    v    d #> 101    w    d #> 102    x    d #> 103    y    d #> 104    z    d #> 105    a    e #> 106    b    e #> 107    c    e #> 108    d    e #> 109    e    e #> 110    f    e #> 111    g    e #> 112    h    e #> 113    i    e #> 114    j    e #> 115    k    e #> 116    l    e #> 117    m    e #> 118    n    e #> 119    o    e #> 120    p    e #> 121    q    e #> 122    r    e #> 123    s    e #> 124    t    e #> 125    u    e #> 126    v    e #> 127    w    e #> 128    x    e #> 129    y    e #> 130    z    e #> 131    a    f #> 132    b    f #> 133    c    f #> 134    d    f #> 135    e    f #> 136    f    f #> 137    g    f #> 138    h    f #> 139    i    f #> 140    j    f #> 141    k    f #> 142    l    f #> 143    m    f #> 144    n    f #> 145    o    f #> 146    p    f #> 147    q    f #> 148    r    f #> 149    s    f #> 150    t    f #> 151    u    f #> 152    v    f #> 153    w    f #> 154    x    f #> 155    y    f #> 156    z    f #> 157    a    g #> 158    b    g #> 159    c    g #> 160    d    g #> 161    e    g #> 162    f    g #> 163    g    g #> 164    h    g #> 165    i    g #> 166    j    g #> 167    k    g #> 168    l    g #> 169    m    g #> 170    n    g #> 171    o    g #> 172    p    g #> 173    q    g #> 174    r    g #> 175    s    g #> 176    t    g #> 177    u    g #> 178    v    g #> 179    w    g #> 180    x    g #> 181    y    g #> 182    z    g #> 183    a    h #> 184    b    h #> 185    c    h #> 186    d    h #> 187    e    h #> 188    f    h #> 189    g    h #> 190    h    h #> 191    i    h #> 192    j    h #> 193    k    h #> 194    l    h #> 195    m    h #> 196    n    h #> 197    o    h #> 198    p    h #> 199    q    h #> 200    r    h #> 201    s    h #> 202    t    h #> 203    u    h #> 204    v    h #> 205    w    h #> 206    x    h #> 207    y    h #> 208    z    h #> 209    a    i #> 210    b    i #> 211    c    i #> 212    d    i #> 213    e    i #> 214    f    i #> 215    g    i #> 216    h    i #> 217    i    i #> 218    j    i #> 219    k    i #> 220    l    i #> 221    m    i #> 222    n    i #> 223    o    i #> 224    p    i #> 225    q    i #> 226    r    i #> 227    s    i #> 228    t    i #> 229    u    i #> 230    v    i #> 231    w    i #> 232    x    i #> 233    y    i #> 234    z    i #> 235    a    j #> 236    b    j #> 237    c    j #> 238    d    j #> 239    e    j #> 240    f    j #> 241    g    j #> 242    h    j #> 243    i    j #> 244    j    j #> 245    k    j #> 246    l    j #> 247    m    j #> 248    n    j #> 249    o    j #> 250    p    j #> 251    q    j #> 252    r    j #> 253    s    j #> 254    t    j #> 255    u    j #> 256    v    j #> 257    w    j #> 258    x    j #> 259    y    j #> 260    z    j #> 261    a    k #> 262    b    k #> 263    c    k #> 264    d    k #> 265    e    k #> 266    f    k #> 267    g    k #> 268    h    k #> 269    i    k #> 270    j    k #> 271    k    k #> 272    l    k #> 273    m    k #> 274    n    k #> 275    o    k #> 276    p    k #> 277    q    k #> 278    r    k #> 279    s    k #> 280    t    k #> 281    u    k #> 282    v    k #> 283    w    k #> 284    x    k #> 285    y    k #> 286    z    k #> 287    a    l #> 288    b    l #> 289    c    l #> 290    d    l #> 291    e    l #> 292    f    l #> 293    g    l #> 294    h    l #> 295    i    l #> 296    j    l #> 297    k    l #> 298    l    l #> 299    m    l #> 300    n    l #> 301    o    l #> 302    p    l #> 303    q    l #> 304    r    l #> 305    s    l #> 306    t    l #> 307    u    l #> 308    v    l #> 309    w    l #> 310    x    l #> 311    y    l #> 312    z    l #> 313    a    m #> 314    b    m #> 315    c    m #> 316    d    m #> 317    e    m #> 318    f    m #> 319    g    m #> 320    h    m #> 321    i    m #> 322    j    m #> 323    k    m #> 324    l    m #> 325    m    m #> 326    n    m #> 327    o    m #> 328    p    m #> 329    q    m #> 330    r    m #> 331    s    m #> 332    t    m #> 333    u    m #> 334    v    m #> 335    w    m #> 336    x    m #> 337    y    m #> 338    z    m #> 339    a    n #> 340    b    n #> 341    c    n #> 342    d    n #> 343    e    n #> 344    f    n #> 345    g    n #> 346    h    n #> 347    i    n #> 348    j    n #> 349    k    n #> 350    l    n #> 351    m    n #> 352    n    n #> 353    o    n #> 354    p    n #> 355    q    n #> 356    r    n #> 357    s    n #> 358    t    n #> 359    u    n #> 360    v    n #> 361    w    n #> 362    x    n #> 363    y    n #> 364    z    n #> 365    a    o #> 366    b    o #> 367    c    o #> 368    d    o #> 369    e    o #> 370    f    o #> 371    g    o #> 372    h    o #> 373    i    o #> 374    j    o #> 375    k    o #> 376    l    o #> 377    m    o #> 378    n    o #> 379    o    o #> 380    p    o #> 381    q    o #> 382    r    o #> 383    s    o #> 384    t    o #> 385    u    o #> 386    v    o #> 387    w    o #> 388    x    o #> 389    y    o #> 390    z    o #> 391    a    p #> 392    b    p #> 393    c    p #> 394    d    p #> 395    e    p #> 396    f    p #> 397    g    p #> 398    h    p #> 399    i    p #> 400    j    p #> 401    k    p #> 402    l    p #> 403    m    p #> 404    n    p #> 405    o    p #> 406    p    p #> 407    q    p #> 408    r    p #> 409    s    p #> 410    t    p #> 411    u    p #> 412    v    p #> 413    w    p #> 414    x    p #> 415    y    p #> 416    z    p #> 417    a    q #> 418    b    q #> 419    c    q #> 420    d    q #> 421    e    q #> 422    f    q #> 423    g    q #> 424    h    q #> 425    i    q #> 426    j    q #> 427    k    q #> 428    l    q #> 429    m    q #> 430    n    q #> 431    o    q #> 432    p    q #> 433    q    q #> 434    r    q #> 435    s    q #> 436    t    q #> 437    u    q #> 438    v    q #> 439    w    q #> 440    x    q #> 441    y    q #> 442    z    q #> 443    a    r #> 444    b    r #> 445    c    r #> 446    d    r #> 447    e    r #> 448    f    r #> 449    g    r #> 450    h    r #> 451    i    r #> 452    j    r #> 453    k    r #> 454    l    r #> 455    m    r #> 456    n    r #> 457    o    r #> 458    p    r #> 459    q    r #> 460    r    r #> 461    s    r #> 462    t    r #> 463    u    r #> 464    v    r #> 465    w    r #> 466    x    r #> 467    y    r #> 468    z    r #> 469    a    s #> 470    b    s #> 471    c    s #> 472    d    s #> 473    e    s #> 474    f    s #> 475    g    s #> 476    h    s #> 477    i    s #> 478    j    s #> 479    k    s #> 480    l    s #> 481    m    s #> 482    n    s #> 483    o    s #> 484    p    s #> 485    q    s #> 486    r    s #> 487    s    s #> 488    t    s #> 489    u    s #> 490    v    s #> 491    w    s #> 492    x    s #> 493    y    s #> 494    z    s #> 495    a    t #> 496    b    t #> 497    c    t #> 498    d    t #> 499    e    t #> 500    f    t #> 501    g    t #> 502    h    t #> 503    i    t #> 504    j    t #> 505    k    t #> 506    l    t #> 507    m    t #> 508    n    t #> 509    o    t #> 510    p    t #> 511    q    t #> 512    r    t #> 513    s    t #> 514    t    t #> 515    u    t #> 516    v    t #> 517    w    t #> 518    x    t #> 519    y    t #> 520    z    t #> 521    a    u #> 522    b    u #> 523    c    u #> 524    d    u #> 525    e    u #> 526    f    u #> 527    g    u #> 528    h    u #> 529    i    u #> 530    j    u #> 531    k    u #> 532    l    u #> 533    m    u #> 534    n    u #> 535    o    u #> 536    p    u #> 537    q    u #> 538    r    u #> 539    s    u #> 540    t    u #> 541    u    u #> 542    v    u #> 543    w    u #> 544    x    u #> 545    y    u #> 546    z    u #> 547    a    v #> 548    b    v #> 549    c    v #> 550    d    v #> 551    e    v #> 552    f    v #> 553    g    v #> 554    h    v #> 555    i    v #> 556    j    v #> 557    k    v #> 558    l    v #> 559    m    v #> 560    n    v #> 561    o    v #> 562    p    v #> 563    q    v #> 564    r    v #> 565    s    v #> 566    t    v #> 567    u    v #> 568    v    v #> 569    w    v #> 570    x    v #> 571    y    v #> 572    z    v #> 573    a    w #> 574    b    w #> 575    c    w #> 576    d    w #> 577    e    w #> 578    f    w #> 579    g    w #> 580    h    w #> 581    i    w #> 582    j    w #> 583    k    w #> 584    l    w #> 585    m    w #> 586    n    w #> 587    o    w #> 588    p    w #> 589    q    w #> 590    r    w #> 591    s    w #> 592    t    w #> 593    u    w #> 594    v    w #> 595    w    w #> 596    x    w #> 597    y    w #> 598    z    w #> 599    a    x #> 600    b    x #> 601    c    x #> 602    d    x #> 603    e    x #> 604    f    x #> 605    g    x #> 606    h    x #> 607    i    x #> 608    j    x #> 609    k    x #> 610    l    x #> 611    m    x #> 612    n    x #> 613    o    x #> 614    p    x #> 615    q    x #> 616    r    x #> 617    s    x #> 618    t    x #> 619    u    x #> 620    v    x #> 621    w    x #> 622    x    x #> 623    y    x #> 624    z    x #> 625    a    y #> 626    b    y #> 627    c    y #> 628    d    y #> 629    e    y #> 630    f    y #> 631    g    y #> 632    h    y #> 633    i    y #> 634    j    y #> 635    k    y #> 636    l    y #> 637    m    y #> 638    n    y #> 639    o    y #> 640    p    y #> 641    q    y #> 642    r    y #> 643    s    y #> 644    t    y #> 645    u    y #> 646    v    y #> 647    w    y #> 648    x    y #> 649    y    y #> 650    z    y #> 651    a    z #> 652    b    z #> 653    c    z #> 654    d    z #> 655    e    z #> 656    f    z #> 657    g    z #> 658    h    z #> 659    i    z #> 660    j    z #> 661    k    z #> 662    l    z #> 663    m    z #> 664    n    z #> 665    o    z #> 666    p    z #> 667    q    z #> 668    r    z #> 669    s    z #> 670    t    z #> 671    u    z #> 672    v    z #> 673    w    z #> 674    x    z #> 675    y    z #> 676    z    z  ## Another fast method; See ## https://stackoverflow.com/questions/10405637/use-outer-instead-of-expand-grid  expand.grid.jc <- function(seq1, seq2) {   cbind(     Var1 = rep.int(seq1, length(seq2)),     Var2 = rep.int(seq2, rep.int(length(seq1), length(seq2)))   ) } # \\donttest{ microbenchmark::microbenchmark(rxExpandGrid(letters, letters), expand.grid.jc(letters, letters)) #> Unit: microseconds #>                              expr    min      lq     mean  median      uq #>    rxExpandGrid(letters, letters) 22.161 22.7230 39.90005 23.8095 24.7415 #>  expand.grid.jc(letters, letters) 15.780 16.4305 42.84317 17.2220 18.1085 #>       max neval #>  1040.142   100 #>  2538.239   100 # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid_.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand grid internal function — rxExpandGrid_","title":"Expand grid internal function — rxExpandGrid_","text":"Expand grid internal function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand grid internal function — rxExpandGrid_","text":"","code":"rxExpandGrid_(c1, c2, type)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand grid internal function — rxExpandGrid_","text":"c1 character vector items expanded c2 second character vector items expanded type 0 typical data frame, 1 symengine sensitivity expansion","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandGrid_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand grid internal function — rxExpandGrid_","text":"data frame (type = 0) symengine string (type=1)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandIfElse.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","title":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","text":"Expand /else clauses multiple different types lines.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandIfElse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","text":"","code":"rxExpandIfElse(model, removeInis = TRUE, removePrint = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandIfElse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","text":"model Model can character, rxode2 model.  needs normalized syntax, (...){} line.  else statement must line closing bracket statement previous line.  else statment must also contain opening bracket, like code else {} removeInis boolean indicating parameter initializations removed model. removePrint boolean indicating printing statements removed model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandIfElse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","text":"named character vector. names vector logical conditions, values lines satisfy logical conditions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandIfElse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expand if/else clauses into multiple different types of lines. — rxExpandIfElse","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens2_.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand second order sensitivity — rxExpandSens2_","title":"Expand second order sensitivity — rxExpandSens2_","text":"Expand second order sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens2_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand second order sensitivity — rxExpandSens2_","text":"","code":"rxExpandSens2_(state, s1, s2)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens2_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand second order sensitivity — rxExpandSens2_","text":"state state expand s1 variables calculate sensitivity s2 variables calculate second order sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens2_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand second order sensitivity — rxExpandSens2_","text":"string symengine second order sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens_.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand sensitivity — rxExpandSens_","title":"Expand sensitivity — rxExpandSens_","text":"Expand sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand sensitivity — rxExpandSens_","text":"","code":"rxExpandSens_(state, calcSens)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand sensitivity — rxExpandSens_","text":"state state expand calcSens variables calculate sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxExpandSens_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand sensitivity — rxExpandSens_","text":"symengine string expanded sensitivity","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the fixed population estimated parameters — rxFixPop","title":"Apply the fixed population estimated parameters — rxFixPop","text":"Apply fixed population estimated parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the fixed population estimated parameters — rxFixPop","text":"","code":"rxFixPop(ui, returnNull = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the fixed population estimated parameters — rxFixPop","text":"ui rxode2 ui function returnNull boolean unchanged values return original ui (FALSE) null (TRUE)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the fixed population estimated parameters — rxFixPop","text":"returnNull TRUE, NULL nothing changed, changed model ui.  returnNull FALSE, return ui matter changed .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply the fixed population estimated parameters — rxFixPop","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixPop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the fixed population estimated parameters — rxFixPop","text":"","code":"One.comp.transit.allo <- function() {  ini({    # Where initial conditions/variables are specified    lktr <- log(1.15)  #log k transit (/h)    lcl  <- log(0.15)  #log Cl (L/hr)    lv   <- log(7)     #log V (L)    ALLC <- fix(0.75)  #allometric exponent cl    ALLV <- fix(1.00)  #allometric exponent v    prop.err <- 0.15   #proportional error (SD/mean)    add.err <- 0.6     #additive error (mg/L)    eta.ktr ~ 0.5    eta.cl ~ 0.1    eta.v ~ 0.1  })  model({    #Allometric scaling on weight    cl <- exp(lcl + eta.cl + ALLC * logWT70)    v  <- exp(lv + eta.v + ALLV * logWT70)    ktr <- exp(lktr + eta.ktr)    # RxODE-style differential equations are supported    d/dt(depot)   = -ktr * depot    d/dt(central) =  ktr * trans - (cl/v) * central    d/dt(trans)   =  ktr * depot - ktr * trans    ## Concentration is calculated    cp = central/v    # And is assumed to follow proportional and additive error    cp ~ prop(prop.err) + add(add.err)  }) }  m <- rxFixPop(One.comp.transit.allo) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments m #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       lktr        lcl         lv   prop.err    add.err  #>  0.1397619 -1.8971200  1.9459101  0.1500000  0.6000000  #>  #> Omega ($omega):  #>         eta.ktr eta.cl eta.v #> eta.ktr     0.5    0.0   0.0 #> eta.cl      0.0    0.1   0.0 #> eta.v       0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2          central #> 3                  3            trans #>  ── μ-referencing ($muRefTable): ──   #>   theta     eta level #> 1   lcl  eta.cl    id #> 2    lv   eta.v    id #> 3  lktr eta.ktr    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         lktr <- 0.139761942375159 #>         lcl <- -1.89711998488588 #>         lv <- 1.94591014905531 #>         prop.err <- c(0, 0.15) #>         add.err <- c(0, 0.6) #>         eta.ktr ~ 0.5 #>         eta.cl ~ 0.1 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         cl <- exp(lcl + eta.cl + 0.75 * logWT70) #>         v <- exp(lv + eta.v + 1 * logWT70) #>         ktr <- exp(lktr + eta.ktr) #>         d/dt(depot) = -ktr * depot #>         d/dt(central) = ktr * trans - (cl/v) * central #>         d/dt(trans) = ktr * depot - ktr * trans #>         cp = central/v #>         cp ~ prop(prop.err) + add(add.err) #>     }) #> }  # now everything is already fixed, so calling again will do nothing  rxFixPop(m) #>  ── rxode2-based free-form 3-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       lktr        lcl         lv   prop.err    add.err  #>  0.1397619 -1.8971200  1.9459101  0.1500000  0.6000000  #>  #> Omega ($omega):  #>         eta.ktr eta.cl eta.v #> eta.ktr     0.5    0.0   0.0 #> eta.cl      0.0    0.1   0.0 #> eta.v       0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2          central #> 3                  3            trans #>  ── μ-referencing ($muRefTable): ──   #>   theta     eta level #> 1   lcl  eta.cl    id #> 2    lv   eta.v    id #> 3  lktr eta.ktr    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         lktr <- 0.139761942375159 #>         lcl <- -1.89711998488588 #>         lv <- 1.94591014905531 #>         prop.err <- c(0, 0.15) #>         add.err <- c(0, 0.6) #>         eta.ktr ~ 0.5 #>         eta.cl ~ 0.1 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         cl <- exp(lcl + eta.cl + 0.75 * logWT70) #>         v <- exp(lv + eta.v + 1 * logWT70) #>         ktr <- exp(lktr + eta.ktr) #>         d/dt(depot) = -ktr * depot #>         d/dt(central) = ktr * trans - (cl/v) * central #>         d/dt(trans) = ktr * depot - ktr * trans #>         cp = central/v #>         cp ~ prop(prop.err) + add(add.err) #>     }) #> }  # if you call it with returnNull=TRUE when no changes have been # performed, the function will return NULL  rxFixPop(m, returnNull=TRUE) #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Literally fix residual parameters — rxFixRes","title":"Literally fix residual parameters — rxFixRes","text":"Literally fix residual parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Literally fix residual parameters — rxFixRes","text":"","code":"rxFixRes(ui, returnNull = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Literally fix residual parameters — rxFixRes","text":"ui rxode2 ui function returnNull boolean unchanged values return original ui (FALSE) null (TRUE)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Literally fix residual parameters — rxFixRes","text":"model residual parameters literally fixed model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Literally fix residual parameters — rxFixRes","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFixRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Literally fix residual parameters — rxFixRes","text":"","code":"One.comp.transit.allo <- function() {  ini({    # Where initial conditions/variables are specified    lktr <- log(1.15)  #log k transit (/h)    lcl  <- log(0.15)  #log Cl (L/hr)    lv   <- log(7)     #log V (L)    ALLC <- 0.75  #allometric exponent cl    ALLV <- 1.00  #allometric exponent v    prop.err <- fix(0.15)   #proportional error (SD/mean)    add.err <- fix(0.6)     #additive error (mg/L)    eta.ktr ~ 0.5    eta.cl ~ 0.1    eta.v ~ 0.1  })  model({    #Allometric scaling on weight    cl <- exp(lcl + eta.cl + ALLC * logWT70)    v  <- exp(lv + eta.v + ALLV * logWT70)    ktr <- exp(lktr + eta.ktr)    # RxODE-style differential equations are supported    d/dt(depot)   = -ktr * depot    d/dt(central) =  ktr * trans - (cl/v) * central    d/dt(trans)   =  ktr * depot - ktr * trans    ## Concentration is calculated    cp = central/v    # And is assumed to follow proportional and additive error    cp ~ prop(prop.err) + add(add.err)  }) }  m <- rxFixRes(One.comp.transit.allo) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxForget.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear memoise cache for rxode2 — rxForget","title":"Clear memoise cache for rxode2 — rxForget","text":"Clear memoise cache rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxForget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear memoise cache for rxode2 — rxForget","text":"","code":"rxForget()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxForget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear memoise cache for rxode2 — rxForget","text":"nothing; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxForget.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clear memoise cache for rxode2 — rxForget","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFun.html","id":null,"dir":"Reference","previous_headings":"","what":"Add/Create C functions for use in rxode2 — rxFun","title":"Add/Create C functions for use in rxode2 — rxFun","text":"Add/Create C functions use rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add/Create C functions for use in rxode2 — rxFun","text":"","code":"rxFun(name, args, cCode)  rxRmFun(name)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add/Create C functions for use in rxode2 — rxFun","text":"name can either give name user function simple R function wish convert C.  rxode2 convert R function C, name function match function name provided number arguments match R function provided.  Hence, providing R function conversion C, rest arguments implied. args gives arguments user function cCode C-code new function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add/Create C functions for use in rxode2 — rxFun","text":"","code":"# \\donttest{ # Right now rxode2 is not aware of the function fun # Therefore it cannot translate it to symengine or # Compile a model with it.  try(rxode2(\"a=fun(a,b,c)\")) #>   #>   #> Error : syntax errors (see above)  # Note for this approach to work, it cannot interfere with C # function names or reserved rxode2 special terms.  Therefore # f(x) would not work since f is an alias for bioavailability.  fun <- \" double fun(double a, double b, double c) {   return a*a+b*a+c; } \" # C-code for function  rxFun(\"fun\", c(\"a\", \"b\", \"c\"), fun) ## Added function  # Now rxode2 knows how to translate this function to symengine  rxToSE(\"fun(a,b,c)\") #> [1] \"fun(a,b,c)\"  # And will take a central difference when calculating derivatives  rxFromSE(\"Derivative(fun(a,b,c),a)\") #> [1] \"(fun((a)+6.05545445239334e-06,b,c)-fun(a,b,c))/6.05545445239334e-06\"  ## Of course, you could specify the derivative table manually rxD(\"fun\", list(   function(a, b, c) {     paste0(\"2*\", a, \"+\", b)   },   function(a, b, c) {     return(a)   },   function(a, b, c) {     return(\"0.0\")   } ))  rxFromSE(\"Derivative(fun(a,b,c),a)\") #> [1] \"2*a+b\"  # You can also remove the functions by `rxRmFun`  rxRmFun(\"fun\")  # you can also use R functions directly in rxode2   gg <- function(x, y) {   x + y }  f <- rxode2({  z = gg(x, y) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’   e <- et(1:10) %>% as.data.frame()  e$x <- 1:10 e$y <- 21:30  rxSolve(f, e) #> Warning: not thread safe method, using 1 core #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 4 #>    time     z     x     y #>   <dbl> <dbl> <dbl> <dbl> #> 1     1    22     1    21 #> 2     2    24     2    22 #> 3     3    26     3    23 #> 4     4    28     4    24 #> 5     5    30     5    25 #> 6     6    32     6    26 #> # ℹ 4 more rows  # Note that since it touches R, it can only run single-threaded. # There are also requirements for the function: # # 1. It accepts one value per argument (numeric) # # 2. It returns one numeric value  # If it is a simple function (like gg) you can also convert it to C # using rxFun and load it into rxode2  rxFun(gg) #> → finding duplicate expressions in d(gg)/d(x)... #> → finding duplicate expressions in d(gg)/d(y)... #> converted R function 'gg' to C (will now use in rxode2) #> converted R function 'rx_gg_d_x' to C (will now use in rxode2) #> converted R function 'rx_gg_d_y' to C (will now use in rxode2) #> Added derivative table for 'gg'  rxSolve(f, e) #> compiled with R user function 'gg'; now there is a clashing C user function #> triggered a recompile to use the C user function (they are always preferred) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 4 #>    time     z     x     y #>   <dbl> <dbl> <dbl> <dbl> #> 1     1    22     1    21 #> 2     2    24     2    22 #> 3     3    26     3    23 #> 4     4    28     4    24 #> 5     5    30     5    25 #> 6     6    32     6    26 #> # ℹ 4 more rows  # to stop the recompile simply reassign the function f <- rxode2(f) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  rxSolve(f, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 10 × 4 #>    time     z     x     y #>   <dbl> <dbl> <dbl> <dbl> #> 1     1    22     1    21 #> 2     2    24     2    22 #> 3     3    26     3    23 #> 4     4    28     4    24 #> 5     5    30     5    25 #> 6     6    32     6    26 #> # ℹ 4 more rows  rxRmFun(\"gg\") rm(gg) rm(f)   # You can also automatically convert a R function to R code (and # calculate first derivatives)  fun <- function(a, b, c) {   a^2+b*a+c }  rxFun(fun) #> → finding duplicate expressions in d(fun)/d(a)... #> → finding duplicate expressions in d(fun)/d(b)... #> → finding duplicate expressions in d(fun)/d(c)... #> converted R function 'fun' to C (will now use in rxode2) #> converted R function 'rx_fun_d_a' to C (will now use in rxode2) #> converted R function 'rx_fun_d_b' to C (will now use in rxode2) #> converted R function 'rx_fun_d_c' to C (will now use in rxode2) #> Added derivative table for 'fun'  # You can see the R code if you want with rxC  message(rxC(\"fun\")) #> double fun(double  a, double  b, double  c) { #>   double _lastValue=NA_REAL; #>   _lastValue = R_pow_di(a,2)+b*a+c; #>   return _lastValue; #> }  # you can also remove both the function and the # derivatives with rxRmFun(\"fun\")  rxRmFun(\"fun\")  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFunParse.html","id":null,"dir":"Reference","previous_headings":"","what":"Add user function to rxode2 — rxFunParse","title":"Add user function to rxode2 — rxFunParse","text":"adds user function rxode2 can called.  needed, functions can differentiated numerical differences adding derivatives rxode2's internal derivative table rxode2's rxD function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFunParse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add user function to rxode2 — rxFunParse","text":"","code":"rxFunParse(name, args, cCode)  rxRmFunParse(name)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFunParse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add user function to rxode2 — rxFunParse","text":"name gives name user function args gives arguments user function cCode C-code new function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFunParse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add user function to rxode2 — rxFunParse","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxFunParse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add user function to rxode2 — rxFunParse","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetControl.html","id":null,"dir":"Reference","previous_headings":"","what":"rxGetControl option from ui — rxGetControl","title":"rxGetControl option from ui — rxGetControl","text":"rxGetControl option ui","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxGetControl option from ui — rxGetControl","text":"","code":"rxGetControl(ui, option, default)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxGetControl option from ui — rxGetControl","text":"ui rxode2 ui object option Option get default Default value","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxGetControl option from ui — rxGetControl","text":"Option (present) default value","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxGetControl option from ui — rxGetControl","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetDistributionSimulationLines.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","title":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","text":"S3 method getting distribution lines rxode2 simulation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetDistributionSimulationLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","text":"","code":"rxGetDistributionSimulationLines(line)  # S3 method for class 'norm' rxGetDistributionSimulationLines(line)  # S3 method for class 'dnorm' rxGetDistributionSimulationLines(line)  # S3 method for class 't' rxGetDistributionSimulationLines(line)  # S3 method for class 'cauchy' rxGetDistributionSimulationLines(line)  # S3 method for class 'ordinal' rxGetDistributionSimulationLines(line)  # Default S3 method rxGetDistributionSimulationLines(line)  # S3 method for class 'rxUi' rxGetDistributionSimulationLines(line)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetDistributionSimulationLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","text":"line Parsed rxode2 model environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetDistributionSimulationLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","text":"Lines simulation ipred dv. based idea focei parameters defined","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetDistributionSimulationLines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This is a S3 method for getting the distribution lines for a rxode2 simulation — rxGetDistributionSimulationLines","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetLin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the linear compartment model true function — rxGetLin","title":"Get the linear compartment model true function — rxGetLin","text":"Get linear compartment model true function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetLin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the linear compartment model true function — rxGetLin","text":"","code":"rxGetLin(model, linCmtSens = c(\"linCmtA\", \"linCmtB\"), verbose = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetLin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the linear compartment model true function — rxGetLin","text":"model ODE model specification.  can : string containing set ordinary differential equations (ODE) expressions defining changes dynamic system. file name ODE system equation contained ODE expression enclosed \\{\\} (see also filename argument). details, see sections “Details” rxode2 Syntax . linCmtSens method calculate linCmt() solutions verbose TRUE verbose linear compartmental model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetLin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the linear compartment model true function — rxGetLin","text":"model linCmt() replaced linCmtA()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetLin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the linear compartment model true function — rxGetLin","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model properties without compiling it. — rxGetModel","title":"Get model properties without compiling it. — rxGetModel","text":"Get model properties without compiling .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model properties without compiling it. — rxGetModel","text":"","code":"rxGetModel(   model,   calcSens = NULL,   calcJac = NULL,   collapseModel = NULL,   indLin = FALSE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model properties without compiling it. — rxGetModel","text":"model rxode2 specification calcSens boolean indicating rxode2 calculate sensitivities according specified ODEs. calcJac boolean indicating rxode2 calculate Jacobain according specified ODEs. collapseModel boolean indicating rxode2 remove LHS variables calculating sensitivities. indLin Calculate inductive linearization matrices compile inductive linearization support.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model properties without compiling it. — rxGetModel","text":"rxode2 trans list","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get model properties without compiling it. — rxGetModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the rxode2 seed — rxGetSeed","title":"Get the rxode2 seed — rxGetSeed","text":"Get rxode2 seed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the rxode2 seed — rxGetSeed","text":"","code":"rxGetSeed()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the rxode2 seed — rxGetSeed","text":"rxode2 seed state -1 seed set","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetSeed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the rxode2 seed — rxGetSeed","text":"","code":"# without setting seed  rxGetSeed() #> [1] -1 # Now set the seed rxSetSeed(42)  rxGetSeed() #> [1] 42  rxnorm() #> [1] -0.640542  rxGetSeed() #> [1] 44  # don't use the rxode2 seed again  rxSetSeed(-1)  rxGetSeed() #> [1] -1  rxnorm() #> [1] -0.4821452  rxGetSeed() #> [1] -1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetrxode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rxode2 model from object — rxGetrxode2","title":"Get rxode2 model from object — rxGetrxode2","text":"Get rxode2 model object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetrxode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rxode2 model from object — rxGetrxode2","text":"","code":"rxGetrxode2(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetrxode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rxode2 model from object — rxGetrxode2","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxGetrxode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get rxode2 model from object — rxGetrxode2","text":"rxode2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxHtml.html","id":null,"dir":"Reference","previous_headings":"","what":"Format rxSolve and related objects as html. — rxHtml","title":"Format rxSolve and related objects as html. — rxHtml","text":"Format rxSolve related objects html.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxHtml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format rxSolve and related objects as html. — rxHtml","text":"","code":"rxHtml(x, ...)  # S3 method for class 'rxSolve' rxHtml(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxHtml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format rxSolve and related objects as html. — rxHtml","text":"x rxode2 object ... Extra arguments sent kable","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxHtml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format rxSolve and related objects as html. — rxHtml","text":"html code rxSolve object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxHtml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format rxSolve and related objects as html. — rxHtml","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinState.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the preferred factoring by state — rxIndLinState","title":"Set the preferred factoring by state — rxIndLinState","text":"Set preferred factoring state","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the preferred factoring by state — rxIndLinState","text":"","code":"rxIndLinState(preferred = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the preferred factoring by state — rxIndLinState","text":"preferred list state's preferred factorization","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the preferred factoring by state — rxIndLinState","text":"Nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinState.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the preferred factoring by state — rxIndLinState","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinStrategy.html","id":null,"dir":"Reference","previous_headings":"","what":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","title":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","text":"one state ODE separated specifies incorporated matrix exponential.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinStrategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","text":"","code":"rxIndLinStrategy(strategy = c(\"curState\", \"split\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinStrategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","text":"strategy strategy inductive linearization matrix building curState Prefer parameterizing terms current state, followed first state observed term. split Split parameterization states term dividing number states term adding matrix term state.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinStrategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","text":"Nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIndLinStrategy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This sets the inductive linearization strategy for matrix building — rxIndLinStrategy","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInits.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Values and State values for a rxode2 object — rxInits","title":"Initial Values and State values for a rxode2 object — rxInits","text":"Returns initial values rxDll object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Values and State values for a rxode2 object — rxInits","text":"","code":"rxInits(   obj,   vec = NULL,   req = NULL,   defaultValue = 0,   noerror = FALSE,   noini = FALSE,   rxLines = FALSE )  rxInit(   obj,   vec = NULL,   req = NULL,   defaultValue = 0,   noerror = FALSE,   noini = FALSE,   rxLines = FALSE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Values and State values for a rxode2 object — rxInits","text":"obj rxDll, rxode2, named vector representing default initial arguments vec supplied, named vector model. req Required names, required order ODE solver defaultValue number NA representing default value parameters missing vec, required req. noerror boolean specifying error thrown missing parameter values default = NA","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial Values and State values for a rxode2 object — rxInits","text":"Initial values rxDll object","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initial Values and State values for a rxode2 object — rxInits","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a positive base — rxIntToBase","title":"Convert a positive base — rxIntToBase","text":"Convert positive  base","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a positive base — rxIntToBase","text":"","code":"rxIntToBase(x, base = 36L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a positive base — rxIntToBase","text":"x integer convert base can 2 36","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a positive base — rxIntToBase","text":"sequence letters representing number(s) input","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a positive base — rxIntToBase","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToBase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a positive base — rxIntToBase","text":"","code":"rxIntToBase(1:100) #>   [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"a\"  \"b\"  \"c\"  \"d\"  \"e\"  \"f\"  #>  [16] \"g\"  \"h\"  \"i\"  \"j\"  \"k\"  \"l\"  \"m\"  \"n\"  \"o\"  \"p\"  \"q\"  \"r\"  \"s\"  \"t\"  \"u\"  #>  [31] \"v\"  \"w\"  \"x\"  \"y\"  \"z\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" #>  [46] \"1a\" \"1b\" \"1c\" \"1d\" \"1e\" \"1f\" \"1g\" \"1h\" \"1i\" \"1j\" \"1k\" \"1l\" \"1m\" \"1n\" \"1o\" #>  [61] \"1p\" \"1q\" \"1r\" \"1s\" \"1t\" \"1u\" \"1v\" \"1w\" \"1x\" \"1y\" \"1z\" \"20\" \"21\" \"22\" \"23\" #>  [76] \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"2a\" \"2b\" \"2c\" \"2d\" \"2e\" \"2f\" \"2g\" \"2h\" \"2i\" #>  [91] \"2j\" \"2k\" \"2l\" \"2m\" \"2n\" \"2o\" \"2p\" \"2q\" \"2r\" \"2s\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a positive integer to a letter series — rxIntToLetter","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"Convert positive integer letter series","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"","code":"rxIntToLetter(x, base = 26L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"x integer convert base can 2 26","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"sequence letters representing number(s) input","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIntToLetter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a positive integer to a letter series — rxIntToLetter","text":"","code":"rxIntToLetter(1:100) #>   [1] \"b\"  \"c\"  \"d\"  \"e\"  \"f\"  \"g\"  \"h\"  \"i\"  \"j\"  \"k\"  \"l\"  \"m\"  \"n\"  \"o\"  \"p\"  #>  [16] \"q\"  \"r\"  \"s\"  \"t\"  \"u\"  \"v\"  \"w\"  \"x\"  \"y\"  \"z\"  \"ba\" \"bb\" \"bc\" \"bd\" \"be\" #>  [31] \"bf\" \"bg\" \"bh\" \"bi\" \"bj\" \"bk\" \"bl\" \"bm\" \"bn\" \"bo\" \"bp\" \"bq\" \"br\" \"bs\" \"bt\" #>  [46] \"bu\" \"bv\" \"bw\" \"bx\" \"by\" \"bz\" \"ca\" \"cb\" \"cc\" \"cd\" \"ce\" \"cf\" \"cg\" \"ch\" \"ci\" #>  [61] \"cj\" \"ck\" \"cl\" \"cm\" \"cn\" \"co\" \"cp\" \"cq\" \"cr\" \"cs\" \"ct\" \"cu\" \"cv\" \"cw\" \"cx\" #>  [76] \"cy\" \"cz\" \"da\" \"db\" \"dc\" \"dd\" \"de\" \"df\" \"dg\" \"dh\" \"di\" \"dj\" \"dk\" \"dl\" \"dm\" #>  [91] \"dn\" \"do\" \"dp\" \"dq\" \"dr\" \"ds\" \"dt\" \"du\" \"dv\" \"dw\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInv.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert matrix using RcppArmadillo. — rxInv","title":"Invert matrix using RcppArmadillo. — rxInv","text":"Invert matrix using RcppArmadillo.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert matrix using RcppArmadillo. — rxInv","text":"","code":"rxInv(matrix)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert matrix using RcppArmadillo. — rxInv","text":"matrix matrix inverted.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxInv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert matrix using RcppArmadillo. — rxInv","text":"inverse pseudo inverse matrix.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the type of an object using Rcpp — rxIs","title":"Check the type of an object using Rcpp — rxIs","text":"Check type object using Rcpp","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the type of an object using Rcpp — rxIs","text":"","code":"rxIs(obj, cls)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the type of an object using Rcpp — rxIs","text":"obj Object check cls Type class.  s3 classes lists/environments primitive classes checked.  matrix types distinguished numeric.matrix, integer.matrix, logical.matrix, character.matrix well traditional matrix class. Additionally checks event.data.frame data.frame object time, evid amt. (UPPER, lower Title cases accepted)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the type of an object using Rcpp — rxIs","text":"boolean indicating object member class.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the type of an object using Rcpp — rxIs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsCurrent.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if the rxode2 object was built with the current build — rxIsCurrent","title":"Checks if the rxode2 object was built with the current build — rxIsCurrent","text":"Checks rxode2 object built current build","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsCurrent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the rxode2 object was built with the current build — rxIsCurrent","text":"","code":"rxIsCurrent(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsCurrent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if the rxode2 object was built with the current build — rxIsCurrent","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsCurrent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if the rxode2 object was built with the current build — rxIsCurrent","text":"boolean indicating built current rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsLoaded.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","title":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","text":"Determine DLL associated rxode2 object loaded","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsLoaded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","text":"","code":"rxIsLoaded(obj)  rxDllLoaded(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsLoaded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsLoaded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","text":"Boolean returning rxode2 library loaded.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxIsLoaded.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine if the DLL associated with the rxode2 object is loaded — rxIsLoaded","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Left handed Variables — rxLhs","title":"Left handed Variables — rxLhs","text":"returns model calculated variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left handed Variables — rxLhs","text":"","code":"rxLhs(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left handed Variables — rxLhs","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left handed Variables — rxLhs","text":"character vector listing calculated parameters","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLhs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Left handed Variables — rxLhs","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLock.html","id":null,"dir":"Reference","previous_headings":"","what":"Lock/unlocking of rxode2 dll file — rxLock","title":"Lock/unlocking of rxode2 dll file — rxLock","text":"Lock/unlocking rxode2 dll file","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lock/unlocking of rxode2 dll file — rxLock","text":"","code":"rxLock(obj)  rxUnlock(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lock/unlocking of rxode2 dll file — rxLock","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxLock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lock/unlocking of rxode2 dll file — rxLock","text":"nothing; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxMd5.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the md5 of an rxode2 object or file — rxMd5","title":"Return the md5 of an rxode2 object or file — rxMd5","text":"md5 based model possibly extra c code supplied model.  addition md5 based syntax options, compiled rxode2 library md5, rxode2 version/repository.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxMd5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the md5 of an rxode2 object or file — rxMd5","text":"","code":"rxMd5(model, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxMd5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the md5 of an rxode2 object or file — rxMd5","text":"model ODE model specification.  can : string containing set ordinary differential equations (ODE) expressions defining changes dynamic system. file name ODE system equation contained ODE expression enclosed \\{\\} (see also filename argument). details, see sections “Details” rxode2 Syntax . ... ignored arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxMd5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the md5 of an rxode2 object or file — rxMd5","text":"rxode2 object, return named list: file_md5 model's file's md5 parsed_md5  parsed model's file's md5. Otherwise return md5 based arguments provided","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxMd5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the md5 of an rxode2 object or file — rxMd5","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":null,"dir":"Reference","previous_headings":"","what":"All model variables for a rxode2 object — rxModelVars","title":"All model variables for a rxode2 object — rxModelVars","text":"Return known model variables specified rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All model variables for a rxode2 object — rxModelVars","text":"","code":"rxModelVars(obj)  rxModelVarsS3(obj)  # S3 method for class 'rxUi' rxModelVarsS3(obj)  # Default S3 method rxModelVarsS3(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All model variables for a rxode2 object — rxModelVars","text":"obj rxode2 family objects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All model variables for a rxode2 object — rxModelVars","text":"list rxode2 model properties including: params  character vector names model parameters lhs character vector names model calculated parameters state character vector compartments rxode2 object trans named vector translated model properties including type jacobian specified, C function prefixes, well C functions names called compiled model. md5 named vector gives digest model (file_md5) parsed model (parsed_md5) model  named vector giving input model (model), normalized model (comments standard syntax parsing, normModel), interim code used generate final C file parseModel","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All model variables for a rxode2 object — rxModelVars","text":"items calculated compilation; built-rxode2 compiled DLL. allow extension, s3 hook added function rxModelVarsS3.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModelVars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"All model variables for a rxode2 object — rxModelVars","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModels_.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the rxModels information — rxModels_","title":"Get the rxModels information — rxModels_","text":"Get rxModels  information","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModels_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the rxModels information — rxModels_","text":"","code":"rxModels_(env = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModels_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the rxModels information — rxModels_","text":"env boolean returns environment models stored (TRUE), currently assigned rxode2 model variables (FALSE).","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxModels_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the rxModels information — rxModels_","text":"internal rxModels information environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the normalized model — rxNorm","title":"Get the normalized model — rxNorm","text":"get syntax preferred model processing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the normalized model — rxNorm","text":"","code":"rxNorm(obj, condition = NULL, removeInis, removeJac, removeSens)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the normalized model — rxNorm","text":"obj rxode2 family objects condition Character string logical condition use subsetting normalized model.  missing, condition set via rxCondition, return whole code conditional settings intact.  condition set rxCondition, use condition. removeInis boolean indicating parameter initialization removed model removeJac boolean indicating Jacobians removed. removeSens boolean indicating sensitivities removed.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxNorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the normalized model — rxNorm","text":"Normalized Normal syntax (comments)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxNorm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the normalized model — rxNorm","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxOptExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize rxode2 for computer evaluation — rxOptExpr","title":"Optimize rxode2 for computer evaluation — rxOptExpr","text":"optimizes rxode2 code computer evaluation calculating redundant expressions .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxOptExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize rxode2 for computer evaluation — rxOptExpr","text":"","code":"rxOptExpr(x, msg = \"model\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxOptExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize rxode2 for computer evaluation — rxOptExpr","text":"x rxode2 model can accessed rxNorm msg name type object rxode2 optimizing message optimizing.  example \"model\" produce following message optimizing model: finding duplicate expressions model...","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxOptExpr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize rxode2 for computer evaluation — rxOptExpr","text":"Optimized rxode2 model text.  order type lhs state variables maintained evaluation sped . parameters names maintained, order may modified.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxOptExpr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Optimize rxode2 for computer evaluation — rxOptExpr","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters specified by the model — rxParams","title":"Parameters specified by the model — rxParams","text":"returns model's parameters required solve ODE system, can used pipe parameters rxode2 solve","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters specified by the model — rxParams","text":"","code":"rxParams(obj, ...)  # S3 method for class 'rxode2' rxParams(   obj,   constants = TRUE,   ...,   params = NULL,   inits = NULL,   iCov = NULL,   keep = NULL,   thetaMat = NULL,   omega = NULL,   dfSub = NULL,   sigma = NULL,   dfObs = NULL,   nSub = NULL,   nStud = NULL )  # S3 method for class 'rxSolve' rxParams(   obj,   constants = TRUE,   ...,   params = NULL,   inits = NULL,   iCov = NULL,   keep = NULL,   thetaMat = NULL,   omega = NULL,   dfSub = NULL,   sigma = NULL,   dfObs = NULL,   nSub = NULL,   nStud = NULL )  # S3 method for class 'rxEt' rxParams(   obj,   ...,   params = NULL,   inits = NULL,   iCov = NULL,   keep = NULL,   thetaMat = NULL,   omega = NULL,   dfSub = NULL,   sigma = NULL,   dfObs = NULL,   nSub = NULL,   nStud = NULL )  rxParam(obj, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters specified by the model — rxParams","text":"obj rxode2 family objects ... arguments including scaling factors compartment.  includes S# = numeric scale compartment # dividing compartment amount scale factor, like NONMEM. constants boolean indicting constants included list parameters. Currently rxode2 parses constants variables case wish change without recompiling rxode2 model. params numeric named vector values every parameter ODE system; names must correspond parameter identifiers used ODE specification; inits vector initial values state variables (e.g., amounts compartment), order vector must state variables (e.g., PK/PD compartments); iCov data frame individual non-time varying covariates combine events dataset.  iCov dataset one covariate per ID match event table keep Columns keep either input dataset iCov dataset.  iCov dataset, column kept per line.  input dataset, records added data LOCF (Last Observation Carried forward) imputation performed. thetaMat Named theta matrix. omega Estimate Covariance matrix. omega list, assume block matrix convert full matrix simulations.  omega NA using rxode2 ui model, subject variability described omega matrix set zero. dfSub Degrees freedom sample subject variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. sigma Named sigma covariance Cholesky decomposition covariance matrix.  names columns indicate parameters simulated.  simulated every observation solved system. sigma NA using rxode2 ui model, unexplained variability described sigma matrix set zero. dfObs Degrees freedom sample unexplained variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. nSub Number subject variabilities (ETAs) simulated every realization parameters. nStud Number virtual studies characterize uncertainty estimated parameters.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters specified by the model — rxParams","text":"extracting parameters rxode2 model, character vector listing parameters model.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParams.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameters specified by the model — rxParams","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Error function for inclusion in rxode2 — rxParseErr","title":"Prepare Error function for inclusion in rxode2 — rxParseErr","text":"Prepare Error function inclusion rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Error function for inclusion in rxode2 — rxParseErr","text":"","code":"rxParseErr(   x,   baseTheta,   ret = \"rx_r_\",   init = NULL,   addProp = c(\"combined2\", \"combined1\") )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Error function for inclusion in rxode2 — rxParseErr","text":"x error function baseTheta Base theta start numbering add(.) prop(.) . ret Internal return type.  changed user... init Initialization vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Error function for inclusion in rxode2 — rxParseErr","text":"rxode2 transformed text","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseErr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare Error function for inclusion in rxode2 — rxParseErr","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePk.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse PK function for inclusion in rxode2 — rxParsePk","title":"Parse PK function for inclusion in rxode2 — rxParsePk","text":"Parse PK function inclusion rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse PK function for inclusion in rxode2 — rxParsePk","text":"","code":"rxParsePk(x, init = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse PK function for inclusion in rxode2 — rxParsePk","text":"x PK function init Initialization vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse PK function for inclusion in rxode2 — rxParsePk","text":"rxode2 transformed text.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse PK function for inclusion in rxode2 — rxParsePk","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePred.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Pred function for inclusion in rxode2 — rxParsePred","title":"Prepare Pred function for inclusion in rxode2 — rxParsePred","text":"Prepare Pred function inclusion rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Pred function for inclusion in rxode2 — rxParsePred","text":"","code":"rxParsePred(x, init = NULL, err = NULL, addProp = c(\"combined2\", \"combined1\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Pred function for inclusion in rxode2 — rxParsePred","text":"x pred function init Initialization vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Pred function for inclusion in rxode2 — rxParsePred","text":"rxode2 transformed text.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParsePred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare Pred function for inclusion in rxode2 — rxParsePred","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSetSilentErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Silence some of rxode2's C/C++ messages — rxParseSetSilentErr","title":"Silence some of rxode2's C/C++ messages — rxParseSetSilentErr","text":"Silence rxode2's C/C++ messages","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSetSilentErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silence some of rxode2's C/C++ messages — rxParseSetSilentErr","text":"","code":"rxParseSetSilentErr(silent)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSetSilentErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silence some of rxode2's C/C++ messages — rxParseSetSilentErr","text":"silent can 0L \"noisy\"  1L \"silent\"","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSetSilentErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Silence some of rxode2's C/C++ messages — rxParseSetSilentErr","text":"TRUE; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSuppressMsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Respect suppress messages — rxParseSuppressMsg","title":"Respect suppress messages — rxParseSuppressMsg","text":"turns silent REprintf C suppressMessages() turned . makes REprintf act like messages R, can suppressed suppressMessages()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSuppressMsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respect suppress messages — rxParseSuppressMsg","text":"","code":"rxParseSuppressMsg()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSuppressMsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respect suppress messages — rxParseSuppressMsg","text":"Nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSuppressMsg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respect suppress messages — rxParseSuppressMsg","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxParseSuppressMsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respect suppress messages — rxParseSuppressMsg","text":"","code":"# rxParseSuppressMsg() is called with rxode2()  # Note the errors are output to the console  try(rxode2parse(\"d/dt(matt)=/3\"), silent = TRUE) #>    # When using suppressMessages, the output is suppressed  suppressMessages(try(rxode2parse(\"d/dt(matt)=/3\"), silent = TRUE))  # In rxode2, we use REprintf so that interrupted threads do not crash R # if there is a user interrupt. This isn't captured by R's messages, but # This interface allows the `suppressMessages()` to suppress the C printing # as well  # If you  want to suppress messages from rxode2 in other packages, you can use # this function"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a package from compiled rxode2 models — rxPkg","title":"Creates a package from compiled rxode2 models — rxPkg","text":"Creates package compiled rxode2 models","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a package from compiled rxode2 models — rxPkg","text":"","code":"rxPkg(   ...,   package,   wd = getwd(),   action = c(\"install\", \"build\", \"binary\", \"create\"),   license = c(\"gpl3\", \"lgpl\", \"mit\", \"agpl3\"),   name = \"Firstname Lastname\",   fields = list() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a package from compiled rxode2 models — rxPkg","text":"... Models build package package String package name create wd character string working directory create subdirectory according modName. specified, subdirectory named “modName.d” created populated C file, dynamic loading library, plus various working files. missing, files created (removed) temporary directory, rxode2 DLL model created current directory named rx_????_platform, example rx_129f8f97fb94a87ca49ca8dafe691e1e_i386.dll action Type action take package created license type license package. name Full name author fields named list fields add DESCRIPTION, potentially overriding default values. See use_description() can set personalized defaults using package options.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a package from compiled rxode2 models — rxPkg","text":"function returns nothing used side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPkg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates a package from compiled rxode2 models — rxPkg","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a from a Poisson process — rxPp","title":"Simulate a from a Poisson process — rxPp","text":"Simulate Poisson process","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a from a Poisson process — rxPp","text":"","code":"rxPp(   n,   lambda,   gamma = 1,   prob = NULL,   t0 = 0,   tmax = Inf,   randomOrder = FALSE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a from a Poisson process — rxPp","text":"n Number time points simulate Poisson process lambda Rate Poisson process gamma Asymmetry rate Poisson process.  gamma=1.0, simulates homogenous Poisson process.  gamma<1.0, Poisson process events early, gamma > 1.0, Poisson process events late process. gamma non-zero, tmax infinite indicate end Poisson process simulated.  pharamcometric cases, end study. Internally uses rate : l(t) = lambdagamma(t/tmax)^(gamma-1) prob specified, probability function one argument, time, gives probability Poisson time t accepted rejection time. t0 starting time Poisson process tmax maximum time Poisson process randomOrder TRUE randomize order Poisson events.  default (FALSE) returns Poisson process order events occurred.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a from a Poisson process — rxPp","text":"returns vector Poisson process times; dropout >= tmax, rest times = tmax indicate dropout equal tmax.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a from a Poisson process — rxPp","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a from a Poisson process — rxPp","text":"","code":"## Sample homogenous Poisson process of rate 1/10 rxPp(10, 1 / 10) #>  [1]  0.1418592  3.0551066 17.5266217 18.9209061 23.5764622 32.0313849 #>  [7] 34.5432774 39.6298088 58.8308591 58.9267474  ## Sample inhomogenous Poisson rate of 1/10  rxPp(10, 1 / 10, gamma = 2, tmax = 100) #>  [1]  55.09252  90.40874  96.89581  99.67418 100.00000 100.00000 100.00000 #>  [8] 100.00000 100.00000 100.00000  ## Typically the Poisson process times are in a sequential order, ## using randomOrder gives the Poisson process in random order  rxPp(10, 1 / 10, gamma = 2, tmax = 10, randomOrder = TRUE) #>  [1] 10 10 10 10 10 10 10 10 10 10  ## This uses an arbitrary function to sample a non-homogenous Poisson process  rxPp(10, 1 / 10, prob = function(x) {   1/(1+abs(x)) }) #>  [1]  11.89423 114.97292 279.79528 331.31831 370.20997 480.07313 604.24600 #>  [8] 633.01980 797.29489 799.28924"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":null,"dir":"Reference","previous_headings":"","what":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"determined internal preferred condition name list .errIdenticalDists","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"","code":"rxPreferredDistributionName(dist)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"dist input distribution","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"Preferred distribution term","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPreferredDistributionName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change distribution name to the preferred distribution name term — rxPreferredDistributionName","text":"","code":"rxPreferredDistributionName(\"dt\") #> [1] \"t\"  rxPreferredDistributionName(\"add\") #> [1] \"add\"  # can be vectorized  rxPreferredDistributionName(c(\"add\",\"dt\")) #>   add    dt  #> \"add\"   \"t\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"rxode2 progress bar functions — rxProgress","title":"rxode2 progress bar functions — rxProgress","text":"rxProgress sets progress bar","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxode2 progress bar functions — rxProgress","text":"","code":"rxProgress(num, core = 0L)  rxTick()  rxProgressStop(clear = TRUE)  rxProgressAbort(error = \"Aborted calculation\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxode2 progress bar functions — rxProgress","text":"num Tot number operations track core Number cores show.  1, show number cores clear Boolean telling clear progress bar completion (displayed).  default TRUE error rxProgressAbort error displayed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxode2 progress bar functions — rxProgress","text":"return NULL invisibly.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rxode2 progress bar functions — rxProgress","text":"rxTick progress bar tick rxProgressStop stop progress bar rxProgressAbort shows abort rxProgressStop called.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxode2 progress bar functions — rxProgress","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxProgress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rxode2 progress bar functions — rxProgress","text":"","code":"f <- function() {   on.exit({     rxProgressAbort()   })   rxProgress(100)   for (i in 1:100) {     rxTick()     Sys.sleep(1 / 100)   }   rxProgressStop() } # \\donttest{ f() # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPrune.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune branches (ie if/else) from rxode2 — rxPrune","title":"Prune branches (ie if/else) from rxode2 — rxPrune","text":"prunes branches (ie /else) rxode2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPrune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune branches (ie if/else) from rxode2 — rxPrune","text":"","code":"rxPrune(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPrune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune branches (ie if/else) from rxode2 — rxPrune","text":"x rxode2 model can accessed rxNorm","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPrune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune branches (ie if/else) from rxode2 — rxPrune","text":"Pruned rxode2 model text.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxPrune.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prune branches (ie if/else) from rxode2 — rxPrune","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRateDur.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a rxRateDur object — rxRateDur","title":"Creates a rxRateDur object — rxRateDur","text":"primarily display information rate","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRateDur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a rxRateDur object — rxRateDur","text":"","code":"rxRateDur(x)  # S3 method for class 'rxRateDur' x[...]  as.rxRateDur(x)  # S3 method for class 'rxRateDur' as.character(x, ...)  # S3 method for class 'rxRateDur' x[[...]]"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRateDur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a rxRateDur object — rxRateDur","text":"x rxRateDur data ... parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRateDur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a rxRateDur object — rxRateDur","text":"rxRateDur object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReload.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload rxode2 DLL — rxReload","title":"Reload rxode2 DLL — rxReload","text":"Can useful debugging","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload rxode2 DLL — rxReload","text":"","code":"rxReload()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload rxode2 DLL — rxReload","text":"boolean object reloaded","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReload.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reload rxode2 DLL — rxReload","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRemoveControl.html","id":null,"dir":"Reference","previous_headings":"","what":"rxRemoveControl options for UI object — rxRemoveControl","title":"rxRemoveControl options for UI object — rxRemoveControl","text":"rxRemoveControl options UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRemoveControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxRemoveControl options for UI object — rxRemoveControl","text":"","code":"rxRemoveControl(ui)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRemoveControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxRemoveControl options for UI object — rxRemoveControl","text":"ui rxode2 ui object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRemoveControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxRemoveControl options for UI object — rxRemoveControl","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRemoveControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxRemoveControl options for UI object — rxRemoveControl","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename items inside of a rxode2 ui model — rxRename","title":"Rename items inside of a rxode2 ui model — rxRename","text":"rxRename() changes names individual variables, lhs, ode states using new_name = old_name syntax","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename items inside of a rxode2 ui model — rxRename","text":"","code":"rxRename(.data, ..., envir = parent.frame())  .rxRename(.data, ..., envir = parent.frame())  rename.rxUi(.data, ...)  rename.function(.data, ...)  # S3 method for class 'rxUi' rxRename(.data, ...)  # S3 method for class '`function`' rxRename(.data, ...)  # Default S3 method rxRename(.data, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename items inside of a rxode2 ui model — rxRename","text":".data rxode2 ui function, named data consistent dplyr::rename() ... rename items envir Environment evaluation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename items inside of a rxode2 ui model — rxRename","text":"New model items renamed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename items inside of a rxode2 ui model — rxRename","text":"similar dplyr's rename() function.  dplyr loaded, s3 methods work ui objects. Note .rxRename() internal function called renaming likely need call unless writing extension function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename items inside of a rxode2 ui model — rxRename","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename items inside of a rxode2 ui model — rxRename","text":"","code":"ocmt <- function() {   ini({     tka <- exp(0.45) # Ka     tcl <- exp(1) # Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- exp(3.45) # log V     ## the label(\"Label name\") works with all models     add.sd <- 0.7   })   model({     ka <- tka     cl <- tcl     v <- tv     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  ocmt %>% rxRename(cpParent=cp) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd  #>  1.568312  2.718282 31.500392  0.700000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 1.56831218549017 #>         tcl <- 2.71828182845905 #>         tv <- 31.5003923087479 #>         add.sd <- c(0, 0.7) #>     }) #>     model({ #>         ka <- tka #>         cl <- tcl #>         v <- tv #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cpParent = center/v #>         cpParent ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRepR0_.html","id":null,"dir":"Reference","previous_headings":"","what":"Rep R0 for foce — rxRepR0_","title":"Rep R0 for foce — rxRepR0_","text":"Rep R0 foce","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRepR0_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rep R0 for foce — rxRepR0_","text":"","code":"rxRepR0_(neta)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRepR0_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rep R0 for foce — rxRepR0_","text":"neta ETA substitute","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRepR0_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rep R0 for foce — rxRepR0_","text":"Returns string R code substitute rx_r expression symengine environment .s","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReq.html","id":null,"dir":"Reference","previous_headings":"","what":"Require namespace, otherwise throw error. — rxReq","title":"Require namespace, otherwise throw error. — rxReq","text":"Require namespace, otherwise throw error.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require namespace, otherwise throw error. — rxReq","text":"","code":"rxReq(pkg)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require namespace, otherwise throw error. — rxReq","text":"pkg Package required function work.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require namespace, otherwise throw error. — rxReq","text":"Nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Require namespace, otherwise throw error. — rxReq","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReservedKeywords.html","id":null,"dir":"Reference","previous_headings":"","what":"A list and description of rxode2 supported reserved keywords — rxReservedKeywords","title":"A list and description of rxode2 supported reserved keywords — rxReservedKeywords","text":"list description rxode2 supported reserved keywords","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReservedKeywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list and description of rxode2 supported reserved keywords — rxReservedKeywords","text":"","code":"rxReservedKeywords"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxReservedKeywords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list and description of rxode2 supported reserved keywords — rxReservedKeywords","text":"data frame 3 columns 31 rows Reserved Name Reserved Keyword Name Meaning Reserved Keyword Meaning Alias Keyword Alias","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxResidualError.html","id":null,"dir":"Reference","previous_headings":"","what":"A description of Rode2 supported residual errors — rxResidualError","title":"A description of Rode2 supported residual errors — rxResidualError","text":"description Rode2 supported residual errors","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxResidualError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A description of Rode2 supported residual errors — rxResidualError","text":"","code":"rxResidualError"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxResidualError.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A description of Rode2 supported residual errors — rxResidualError","text":"data frame 6 columns 181 rows Error model description type residual error Functional Form additive proportional functional form used Transformation type transformation done DV prediction code Example code residual error type addProp type add+prop residual error default equivalent lhs left handed side specification represents, either response variable, compartment specification","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a (truncated) multivariate normal — rxRmvn","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"simulated fast, thread-safe threefry simulator can use multiple cores generate random deviates.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"","code":"rxRmvn(   n,   mu = NULL,   sigma,   lower = -Inf,   upper = Inf,   ncores = 1,   isChol = FALSE,   keepNames = TRUE,   a = 0.4,   tol = 2.05,   nlTol = 1e-10,   nlMaxiter = 100L )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"n Number random row vectors simulated matrix use simulation (faster). mu mean vector sigma Covariance matrix multivariate normal list covariance matrices. list covariance matrix, matrix simulate n matrices combine full matrix lower vector lower bound truncated multivariate norm upper vector upper bound truncated multivariate norm ncores Number cores used simulation isChol boolean indicating sigma cholesky decomposition covariance matrix. keepNames Keep names either mean covariance matrix. threshold switching methods; can tuned maximum speed;  three cases considered: case 1: < l < u case 2: l < u < -case 3: otherwise l=lower u = upper tol case 3 used possibilities, tol value controls acceptance rejection inverse-transformation; abs(u-l)>tol, uses accept-reject randn nlTol Tolerance newton line-search nlMaxiter Maximum iterations newton line-search","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"n==integer (default) output (n x d) matrix -th row -th simulated vector. .matrix(n) random vector store n, provided user, function returns NULL invisibly.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"John K. Salmon, Mark . Moraes, Ron O. Dror, David E. Shaw (2011). Parallel Random Numbers: Easy 1, 2, 3. D. E. Shaw Research, New York, NY 10036, USA. thread safe multivariate normal inspired mvnfast package Matteo Fasiolo https://CRAN.R-project.org/package=mvnfast concept truncated multivariate normal taken Zdravko Botev Botev (2017) doi:10.1111/rssb.12162  Botev L'Ecuyer (2015) doi:10.1109/WSC.2015.7408180  converted thread safe simulation;","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"Matthew Fidler, Zdravko Botev Matteo Fasiolo","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxRmvn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from a (truncated) multivariate normal — rxRmvn","text":"","code":"## From mvnfast ## Unlike mvnfast, uses threefry simulation  d <- 5 mu <- 1:d  # Creating covariance matrix tmp <- matrix(rnorm(d^2), d, d) mcov <- tcrossprod(tmp, tmp)   set.seed(414) rxRmvn(4, 1:d, mcov) #>            [,1]     [,2]     [,3]      [,4]     [,5] #> [1,]  5.2707258 2.214025 8.168778 4.4070379 6.877293 #> [2,] -0.7423343 3.576793 6.292510 3.8644209 4.419573 #> [3,]  2.2540013 3.829004 3.153675 5.6056976 4.855277 #> [4,]  1.2524875 1.269743 3.569747 0.9088226 4.692126  set.seed(414) rxRmvn(4, 1:d, mcov) #>            [,1]     [,2]     [,3]      [,4]     [,5] #> [1,]  5.2707258 2.214025 8.168778 4.4070379 6.877293 #> [2,] -0.7423343 3.576793 6.292510 3.8644209 4.419573 #> [3,]  2.2540013 3.829004 3.153675 5.6056976 4.855277 #> [4,]  1.2524875 1.269743 3.569747 0.9088226 4.692126  set.seed(414) rxRmvn(4, 1:d, mcov, ncores = 2) # r.v. generated on the second core are different #>            [,1]       [,2]     [,3]     [,4]     [,5] #> [1,]  5.2707258  1.3074571 5.218499 3.900613 7.624714 #> [2,]  4.9851967 -0.5606283 9.972658 3.066770 8.264613 #> [3,] -0.7423343  2.7629370 4.680670 5.007808 5.204537 #> [4,]  0.5167397  3.5193389 2.134059 4.771087 3.984363  ###### Here we create the matrix that will hold the simulated #  random variables upfront. A <- matrix(NA, 4, d) class(A) <- \"numeric\" # This is important. We need the elements of A to be of class \"numeric\".  set.seed(414) rxRmvn(A, 1:d, mcov, ncores = 2) # This returns NULL ... A # ... but the result is here #>            [,1]       [,2]     [,3]     [,4]     [,5] #> [1,]  5.2707258  1.3074571 5.218499 3.900613 7.624714 #> [2,]  4.9851967 -0.5606283 9.972658 3.066770 8.264613 #> [3,] -0.7423343  2.7629370 4.680670 5.007808 5.204537 #> [4,]  0.5167397  3.5193389 2.134059 4.771087 3.984363  ## You can also simulate from a truncated normal:  rxRmvn(10, 1:d, mcov, lower = 1:d - 1, upper = 1:d + 1) #>            [,1]     [,2]     [,3]     [,4]     [,5] #>  [1,] 1.0653597 2.133787 2.946986 4.287025 4.817676 #>  [2,] 1.2074339 2.603705 3.066479 4.373026 4.958052 #>  [3,] 0.6601250 2.163003 2.777882 3.298368 5.450638 #>  [4,] 1.1891312 1.803473 3.188579 4.272920 4.176795 #>  [5,] 0.8202332 1.982613 2.780687 3.742501 4.803707 #>  [6,] 0.7800441 1.544914 3.233315 4.346761 4.647580 #>  [7,] 0.9219472 1.580757 2.811885 4.969403 5.721241 #>  [8,] 1.2795017 2.621243 2.792514 3.260261 4.962780 #>  [9,] 1.0539189 1.885283 3.351143 4.736703 4.661864 #> [10,] 0.9404057 2.057468 3.130754 4.055279 4.661319   # You can also simulate from different matrices (if they match # dimensions) by using a list of matrices.  matL <- lapply(1:4, function(...) {   tmp <- matrix(rnorm(d^2), d, d)   tcrossprod(tmp, tmp) })   rxRmvn(4, setNames(1:d, paste0(\"a\", 1:d)), matL) #>               a1         a2         a3         a4       a5 #>  [1,]  3.8274046  2.1035743  0.5028009  4.5098402 5.189021 #>  [2,] -0.9871330  3.8835057  6.0910523  5.1594862 4.132973 #>  [3,]  3.4611290  6.9818905  2.4784421  5.1440327 8.310619 #>  [4,] -2.6283293 -5.0190437  2.8076771 -0.5884730 1.060942 #>  [5,]  0.3451536  0.5718889  3.7057607  4.3772555 3.829498 #>  [6,] -1.1689889  1.9051966  4.0675628  2.0180889 5.571646 #>  [7,] -1.7018538 -0.7786124  5.4574824  3.9037163 6.126236 #>  [8,] -3.9766942 -0.8582446  5.4820712 -0.5706566 4.047896 #>  [9,]  0.8420574 -0.4096991  3.9764994  4.7655857 4.167223 #> [10,]  1.3644751  5.2068446  1.3430378  3.6687705 8.175402 #> [11,]  1.5705584  3.1771677  1.9140454  6.9388794 5.757319 #> [12,]  0.6404211 11.0776336  5.3814729 10.6267879 6.349803 #> [13,]  0.2352059  0.8413157 -0.6291679  3.7003445 4.517157 #> [14,]  3.7622838 -1.0087429  0.1514493  0.7595107 4.988589 #> [15,]  0.4968318  3.1695539  6.2533925  3.9780854 5.781146 #> [16,] -3.7275917  2.3933661  1.3926983  6.3064293 2.905874"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxS.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a model into a symengine environment — rxS","title":"Load a model into a symengine environment — rxS","text":"Load model symengine environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a model into a symengine environment — rxS","text":"","code":"rxS(x, doConst = TRUE, promoteLinSens = FALSE, envir = parent.frame())"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a model into a symengine environment — rxS","text":"x rxode2 object doConst Load constants environment well. promoteLinSens Promote solved linear compartment systems sensitivity-based solutions. envir default NULL; Environment put symengine variables .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a model into a symengine environment — rxS","text":"rxode2/symengine environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load a model into a symengine environment — rxS","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSeedEng.html","id":null,"dir":"Reference","previous_headings":"","what":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","title":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","text":"seeds engine based number cores used random number generation","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSeedEng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","text":"","code":"rxSeedEng(ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSeedEng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","text":"ncores number cores use.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSeedEng.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSeedEng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This seeds the engine based on the number of cores used in random number generation — rxSeedEng","text":"","code":"rxSeedEng() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetControl.html","id":null,"dir":"Reference","previous_headings":"","what":"rxSetControl options for UI object — rxSetControl","title":"rxSetControl options for UI object — rxSetControl","text":"rxSetControl options UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxSetControl options for UI object — rxSetControl","text":"","code":"rxSetControl(ui, control)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxSetControl options for UI object — rxSetControl","text":"ui rxode2 ui object control Default value","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxSetControl options for UI object — rxSetControl","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxSetControl options for UI object — rxSetControl","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign covariates for piping — rxSetCovariateNamesForPiping","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"Assign covariates piping","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"","code":"rxSetCovariateNamesForPiping(covariates = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"covariates NULL (covariates), list covariates. nlmixr uses function set covariates pipe nlmixr fit.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetCovariateNamesForPiping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign covariates for piping — rxSetCovariateNamesForPiping","text":"","code":"# First set the name of known covariates # Note this is case sensitive  rxSetCovariateNamesForPiping(c(\"WT\",\"HT\", \"TC\"))  one.compartment <- function() {  ini({    tka <- 0.45 ; label(\"Log Ka\")    tcl <- 1 ; label(\"Log Cl\")    tv <- 3.45 ; label(\"Log V\")    eta.ka ~ 0.6    eta.cl ~ 0.3    eta.v ~ 0.1    add.err <- 0.7  })  model({    ka <- exp(tka + eta.ka)    cl <- exp(tcl + eta.cl)    v <- exp(tv + eta.v)    d / dt(depot) <- -ka * depot    d/dt(depot) <- -ka * depot    d / dt(center) <- ka * depot - cl / v * center    cp <- center / v    cp ~ add(add.err)  }) }  # now TC is detected as a covariate instead of a population parameter  one.compartment %>%   model({ka <- exp(tka + eta.ka + TC * cov_C)}) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ add covariate `TC` (known covariate) #> ℹ add population parameter `cov_C` and set estimate to 1 #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>     tka     tcl      tv add.err   cov_C  #>    0.45    1.00    3.45    0.70    1.00  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level covariates #> 1   tka eta.ka    id   TC*cov_C #> 2   tcl eta.cl    id            #> 3    tv  eta.v    id            #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Log Ka\") #>         tcl <- 1 #>         label(\"Log Cl\") #>         tv <- 3.45 #>         label(\"Log V\") #>         add.err <- c(0, 0.7) #>         cov_C <- 1 #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka + TC * cov_C) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.err) #>     }) #> }  # You can turn it off by simply adding it back  rxSetCovariateNamesForPiping()  one.compartment %>%   model({ka <- exp(tka + eta.ka + TC * cov_C)}) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> ℹ add population parameter `TC` and set estimate to 1 #> ℹ add population parameter `cov_C` and set estimate to 1 #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>     tka     tcl      tv add.err      TC   cov_C  #>    0.45    1.00    3.45    0.70    1.00    1.00  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka    0.6    0.0   0.0 #> eta.cl    0.0    0.3   0.0 #> eta.v     0.0    0.0   0.1 #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.45 #>         label(\"Log Ka\") #>         tcl <- 1 #>         label(\"Log Cl\") #>         tv <- 3.45 #>         label(\"Log V\") #>         add.err <- c(0, 0.7) #>         TC <- 1 #>         cov_C <- 1 #>         eta.ka ~ 0.6 #>         eta.cl ~ 0.3 #>         eta.v ~ 0.1 #>     }) #>     model({ #>         ka <- exp(tka + eta.ka + TC * cov_C) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) <- -ka * depot #>         d/dt(depot) <- -ka * depot #>         d/dt(center) <- ka * depot - cl/v * center #>         cp <- center/v #>         cp ~ add(add.err) #>     }) #> }  # The covariates you set with `rxSetCovariateNamesForPiping()` # are turned off every time you solve (or fit in nlmixr)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetIni0.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Initial conditions to time zero instead of the first observed/dosed time — rxSetIni0","title":"Set Initial conditions to time zero instead of the first observed/dosed time — rxSetIni0","text":"Set Initial conditions time zero instead first observed/dosed time","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetIni0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Initial conditions to time zero instead of the first observed/dosed time — rxSetIni0","text":"","code":"rxSetIni0(ini0 = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetIni0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Initial conditions to time zero instead of the first observed/dosed time — rxSetIni0","text":"ini0 TRUE (default), set initial conditions time zero. Otherwise initial conditions first observed time.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetIni0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Initial conditions to time zero instead of the first observed/dosed time — rxSetIni0","text":"boolean ini0, though called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"Set variables model piping automatic covarite selection","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"","code":"rxSetPipingAuto(   thetamodelVars = rex::rex(or(\"tv\", \"t\", \"pop\", \"POP\", \"Pop\", \"TV\", \"T\", \"cov\", \"err\",     \"eff\")),   covariateExceptions = rex::rex(start, or(\"wt\", \"sex\", \"crcl\", \"kout\"), end),   etaParts = c(\"eta\", \"ETA\", \"Eta\", \"ppv\", \"PPV\", \"Ppv\", \"iiv\", \"Iiv\", \"bsv\", \"Bsv\",     \"BSV\", \"bpv\", \"Bpv\", \"BPV\", \"psv\", \"PSV\", \"Psv\") )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"thetamodelVars prefixes theta model variables regular expression covariateExceptions regular expression covariates always covariates etaParts list eta prefixes/post-fixes identify variable subject variability","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"called startup set defaults, though can change wish piping can work differently individual setup","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetPipingAuto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the variables for the model piping automatic covarite selection — rxSetPipingAuto","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProd.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct setting of product — rxSetProd","title":"Defunct setting of product — rxSetProd","text":"Defunct setting product","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct setting of product — rxSetProd","text":"","code":"rxSetProd(type = c(\"long double\", \"double\", \"logify\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defunct setting of product — rxSetProd","text":"type used type product","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defunct setting of product — rxSetProd","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProgressBar.html","id":null,"dir":"Reference","previous_headings":"","what":"Set timing for progress bar — rxSetProgressBar","title":"Set timing for progress bar — rxSetProgressBar","text":"Set timing progress bar","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProgressBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set timing for progress bar — rxSetProgressBar","text":"","code":"rxSetProgressBar(seconds = 1)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProgressBar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set timing for progress bar — rxSetProgressBar","text":"seconds sets number seconds need elapse drawing next segment progress bar.  zero turns progress bar.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProgressBar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set timing for progress bar — rxSetProgressBar","text":"nothing, used side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetProgressBar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set timing for progress bar — rxSetProgressBar","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the parallel seed for rxode2 random number generation — rxSetSeed","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"sets seed rxode2 parallel random number generation. set, whenever seed set threefry vandercorput simulation engine, use seed, increment number seeds continue sequence next time random number generator called.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"","code":"rxSetSeed(seed)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"seed integer represents rxode2 parallel internal random number generator seed.  positive, use seed random number generation increment reseed parallel new engines called. negative, turn rxode2 seed generate seed R's uniform random number generator.  Best practice set seed.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"contrast, called, time vandercorput threefry simulation engines seeded comes uniform random number generated standard R random seed.  may cause duplicate seed based R seed state. means correlations simulations exist avoid birthday problem picking exactly seed using seed state R random number generator.  times seed called, likely becomes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"JD Cook. (2016). Random number generator seed mistakes. https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSeed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the parallel seed for rxode2 random number generation — rxSetSeed","text":"","code":"rxSetSeed(42)  # seed with generator 42 rxnorm() #> [1] -0.640542  # Use R's random number generator rnorm(1) #> [1] 0.5756458  rxSetSeed(42)  # reproduces the same number rxnorm() #> [1] -0.640542  # But R's random number is not the same  rnorm(1) #> [1] -1.388039  # If we reset this to use the R's seed # (internally rxode2 uses a uniform random number to span seeds) # This can lead to duplicate sequences and seeds  rxSetSeed(-1)  # Now set seed works for both.  # This is not recommended, but illustrates the different types of # seeds that can be generated.  set.seed(42)  rxnorm() #> [1] 0.235007  rnorm(1) #> [1] -0.5646982  set.seed(42)  rxnorm() #> [1] 0.235007  rnorm(1) #> [1] -0.5646982"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSilentErr.html","id":null,"dir":"Reference","previous_headings":"","what":"Silence some of rxode2's C/C++ messages — rxSetSilentErr","title":"Silence some of rxode2's C/C++ messages — rxSetSilentErr","text":"Silence rxode2's C/C++ messages","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSilentErr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silence some of rxode2's C/C++ messages — rxSetSilentErr","text":"","code":"rxSetSilentErr(silent)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSilentErr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silence some of rxode2's C/C++ messages — rxSetSilentErr","text":"silent can 0L \"noisy\"  1L \"silent\"","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSilentErr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Silence some of rxode2's C/C++ messages — rxSetSilentErr","text":"TRUE; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct setting of sum — rxSetSum","title":"Defunct setting of sum — rxSetSum","text":"Defunct setting sum","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct setting of sum — rxSetSum","text":"","code":"rxSetSum(type = c(\"pairwise\", \"fsum\", \"kahan\", \"neumaier\", \"c\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defunct setting of sum — rxSetSum","text":"type used type product","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defunct setting of sum — rxSetSum","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupIni.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the initial conditions. — rxSetupIni","title":"Setup the initial conditions. — rxSetupIni","text":"Setup initial conditions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupIni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the initial conditions. — rxSetupIni","text":"","code":"rxSetupIni(obj, inits = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupIni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the initial conditions. — rxSetupIni","text":"obj rxode2 object inits numeric vector initial conditions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupIni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the initial conditions. — rxSetupIni","text":"initial conditions setup","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupIni.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Setup the initial conditions. — rxSetupIni","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup the initial conditions. — rxSetupScale","title":"Setup the initial conditions. — rxSetupScale","text":"Setup initial conditions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup the initial conditions. — rxSetupScale","text":"","code":"rxSetupScale(obj, scale = NULL, extraArgs = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup the initial conditions. — rxSetupScale","text":"obj rxode2 object scale numeric vector scales extraArgs list extra args parse initial conditions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup the initial conditions. — rxSetupScale","text":"setup scale changing compartment values","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSetupScale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Setup the initial conditions. — rxSetupScale","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxShiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Shiny to help develop an rxode2 model — rxShiny","title":"Use Shiny to help develop an rxode2 model — rxShiny","text":"Use Shiny help develop rxode2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxShiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Shiny to help develop an rxode2 model — rxShiny","text":"","code":"rxShiny(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   data = data.frame() )  # S3 method for class 'rxSolve' rxShiny(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   data = data.frame() )  # Default S3 method rxShiny(   object = NULL,   params = NULL,   events = NULL,   inits = NULL,   ...,   data = data.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxShiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Shiny to help develop an rxode2 model — rxShiny","text":"object rxode2 family objects. supplied 2-compartment indirect effect model used.  supplied, use model associated rxode2 object model exploration. params Initial parameters model events Event information (currently ignored) inits Initial estimates model ... arguments passed rxShiny.  Currently anything. data data like plot.  data time variable well compartment calculated variable matches rxode2 model, data added plot specific compartment calculated variable.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxShiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Shiny to help develop an rxode2 model — rxShiny","text":"Nothing; Starts shiny server","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxShiny.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use Shiny to help develop an rxode2 model — rxShiny","text":"Zufar Mulyukov Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSimThetaOmega.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","title":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","text":"Simulate Parameters Theta/Omega specification","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSimThetaOmega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","text":"","code":"rxSimThetaOmega(   params = NULL,   omega = NULL,   omegaDf = NULL,   omegaLower = as.numeric(c(R_NegInf)),   omegaUpper = as.numeric(c(R_PosInf)),   omegaIsChol = FALSE,   omegaSeparation = \"auto\",   omegaXform = 1L,   nSub = 1L,   thetaMat = NULL,   thetaLower = as.numeric(c(R_NegInf)),   thetaUpper = as.numeric(c(R_PosInf)),   thetaDf = NULL,   thetaIsChol = FALSE,   nStud = 1L,   sigma = NULL,   sigmaLower = as.numeric(c(R_NegInf)),   sigmaUpper = as.numeric(c(R_PosInf)),   sigmaDf = NULL,   sigmaIsChol = FALSE,   sigmaSeparation = \"auto\",   sigmaXform = 1L,   nCoresRV = 1L,   nObs = 1L,   dfSub = 0,   dfObs = 0,   simSubjects = TRUE,   simVariability = as.logical(c(NA_LOGICAL)) )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSimThetaOmega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","text":"params Named Vector rxode2 model parameters omega Estimate Covariance matrix. omega list, assume block matrix convert full matrix simulations.  omega NA using rxode2 ui model, subject variability described omega matrix set zero. omegaDf degrees freedom t-distribution simulation.  default NULL equivalent Inf degrees, simulate normal distribution instead t-distribution. omegaLower Lower bounds simulated ETAs (default -Inf) omegaUpper Upper bounds simulated ETAs (default Inf) omegaIsChol Indicates omega supplied Cholesky decomposed matrix instead traditional symmetric matrix. omegaSeparation Omega separation strategy Tells type separation strategy simulating covariance parameter uncertainty standard deviations modeled thetaMat matrix. \"lkj\" simulates correlation matrix rLKJ1 matrix distribution parameter eta equal degrees freedom nu (nu-1)/2 \"separation\" simulates identity inverse Wishart covariance matrix nu degrees freedom.  converted covariance matrix augmented modeled standard deviations.  computationally complex \"lkj\" prior, performs better covariance matrix size greater equal 10 \"auto\" chooses \"lkj\" dimension matrix less 10 \"separation\" greater equal 10. omegaXform taking omega values thetaMat simulations (using separation strategy covariance simulation), thetaMat values turned int standard deviation values: identity standard deviation values directly modeled params thetaMat matrix variance params thetaMat simulates variance directly modeled thetaMat matrix log params thetaMat simulates log(sd) nlmixrSqrt params thetaMat simulates inverse cholesky decomposed matrix x\\^2 modeled along diagonal.  works diagonal matrix. nlmixrLog params thetaMat simulates inverse cholesky decomposed matrix exp(x\\^2) along diagonal.  works diagonal matrix. nlmixrIdentity params thetaMat simulates inverse cholesky decomposed matrix. works diagonal matrix. nSub Number subject variabilities (ETAs) simulated every realization parameters. thetaMat Named theta matrix. thetaLower Lower bounds simulated population parameter variability (default -Inf) thetaUpper Upper bounds simulated population unexplained variability (default Inf) thetaDf degrees freedom t-distribution simulation.  default NULL equivalent Inf degrees, simulate normal distribution instead t-distribution. thetaIsChol Indicates theta supplied Cholesky decomposed matrix instead traditional symmetric matrix. nStud Number virtual studies characterize uncertainty estimated parameters. sigma Named sigma covariance Cholesky decomposition covariance matrix.  names columns indicate parameters simulated.  simulated every observation solved system. sigma NA using rxode2 ui model, unexplained variability described sigma matrix set zero. sigmaLower Lower bounds simulated unexplained variability (default -Inf) sigmaUpper Upper bounds simulated unexplained variability (default Inf) sigmaDf Degrees freedom sigma t-distribution.  default equivalent Inf, normal distribution. sigmaIsChol Boolean indicating sigma Cholesky decomposition instead symmetric covariance sigmaSeparation separation strategy sigma; Tells type separation strategy simulating covariance parameter uncertainty standard deviations modeled thetaMat matrix. \"lkj\" simulates correlation matrix rLKJ1 matrix distribution parameter eta equal degrees freedom nu (nu-1)/2 \"separation\" simulates identity inverse Wishart covariance matrix nu degrees freedom.  converted covariance matrix augmented modeled standard deviations.  computationally complex \"lkj\" prior, performs better covariance matrix size greater equal 10 \"auto\" chooses \"lkj\" dimension matrix less 10 \"separation\" greater equal 10. sigmaXform taking sigma values thetaMat simulations (using separation strategy covariance simulation), thetaMat values turned int standard deviation values: identity standard deviation values directly modeled params thetaMat matrix variance params thetaMat simulates variance directly modeled thetaMat matrix log params thetaMat simulates log(sd) nlmixrSqrt params thetaMat simulates inverse cholesky decomposed matrix x\\^2 modeled along diagonal.  works diagonal matrix. nlmixrLog params thetaMat simulates inverse cholesky decomposed matrix exp(x\\^2) along diagonal.  works diagonal matrix. nlmixrIdentity params thetaMat simulates inverse cholesky decomposed matrix. works diagonal matrix. nCoresRV Number cores used simulation sigma variables.  default 1. reproduce results need run platform number cores. reason set one, regardless number cores used threaded ODE solving. nObs Number observations simulate (sigma matrix) dfSub Degrees freedom sample subject variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. dfObs Degrees freedom sample unexplained variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. simSubjects boolean indicated rxode2 simulate subjects studies (TRUE, default) studies (FALSE) simVariability determines variability simulated. NA (default) determined solver.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSimThetaOmega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","text":"data frame simulated subjects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSimThetaOmega.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Parameters from a Theta/Omega specification — rxSimThetaOmega","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Options, Solving & Simulation of an ODE/solved system — rxSolve","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"uses rxode2 family objects, file, model specification solve ODE system.  many options solved rxode2 model, first required object, events -times optional params inits.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"","code":"rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   scale = NULL,   method = c(\"liblsoda\", \"lsoda\", \"dop853\", \"indLin\"),   sigdig = NULL,   atol = 1e-08,   rtol = 1e-06,   maxsteps = 70000L,   hmin = 0,   hmax = NA_real_,   hmaxSd = 0,   hini = 0,   maxordn = 12L,   maxords = 5L,   ...,   cores,   covsInterpolation = c(\"locf\", \"linear\", \"nocb\", \"midpoint\"),   naInterpolation = c(\"locf\", \"nocb\"),   keepInterpolation = c(\"na\", \"locf\", \"nocb\"),   addCov = TRUE,   sigma = NULL,   sigmaDf = NULL,   sigmaLower = -Inf,   sigmaUpper = Inf,   nCoresRV = 1L,   sigmaIsChol = FALSE,   sigmaSeparation = c(\"auto\", \"lkj\", \"separation\"),   sigmaXform = c(\"identity\", \"variance\", \"log\", \"nlmixrSqrt\", \"nlmixrLog\",     \"nlmixrIdentity\"),   nDisplayProgress = 10000L,   amountUnits = NA_character_,   timeUnits = \"hours\",   theta = NULL,   thetaLower = -Inf,   thetaUpper = Inf,   eta = NULL,   addDosing = FALSE,   stateTrim = Inf,   updateObject = FALSE,   omega = NULL,   omegaDf = NULL,   omegaIsChol = FALSE,   omegaSeparation = c(\"auto\", \"lkj\", \"separation\"),   omegaXform = c(\"variance\", \"identity\", \"log\", \"nlmixrSqrt\", \"nlmixrLog\",     \"nlmixrIdentity\"),   omegaLower = -Inf,   omegaUpper = Inf,   nSub = 1L,   thetaMat = NULL,   thetaDf = NULL,   thetaIsChol = FALSE,   nStud = 1L,   dfSub = 0,   dfObs = 0,   returnType = c(\"rxSolve\", \"matrix\", \"data.frame\", \"data.frame.TBS\", \"data.table\",     \"tbl\", \"tibble\"),   seed = NULL,   nsim = NULL,   minSS = 10L,   maxSS = 10000L,   infSSstep = 12,   strictSS = TRUE,   istateReset = TRUE,   subsetNonmem = TRUE,   maxAtolRtolFactor = 0.1,   from = NULL,   to = NULL,   by = NULL,   length.out = NULL,   iCov = NULL,   keep = NULL,   indLinPhiTol = 1e-07,   indLinPhiM = 0L,   indLinMatExpType = c(\"expokit\", \"Al-Mohy\", \"arma\"),   indLinMatExpOrder = 6L,   drop = NULL,   idFactor = TRUE,   mxhnil = 0,   hmxi = 0,   warnIdSort = TRUE,   warnDrop = TRUE,   ssAtol = 1e-08,   ssRtol = 1e-06,   safeZero = TRUE,   safeLog = TRUE,   safePow = TRUE,   sumType = c(\"pairwise\", \"fsum\", \"kahan\", \"neumaier\", \"c\"),   prodType = c(\"long double\", \"double\", \"logify\"),   resample = NULL,   resampleID = TRUE,   maxwhile = 1e+05,   atolSens = 1e-08,   rtolSens = 1e-06,   ssAtolSens = 1e-08,   ssRtolSens = 1e-06,   simVariability = NA,   nLlikAlloc = NULL,   useStdPow = FALSE,   naTimeHandle = c(\"ignore\", \"warn\", \"error\"),   addlKeepsCov = FALSE,   addlDropSs = TRUE,   ssAtDoseTime = TRUE,   ss2cancelAllPending = FALSE,   ssSolved = TRUE,   linCmtSensType = c(\"auto\", \"endpoint5\", \"endpoint5G\", \"forward3\", \"forward3G\", \"AD\",     \"central\", \"forward\", \"forwardG\", \"forwardH\", \"centralH\", \"forward3H\", \"endpointH5\",     \"forwardG\"),   linCmtSensH = 1e-04,   linCmtGillFtol = 0,   linCmtGillK = 20L,   linCmtGillStep = 4,   linCmtGillRtol = sqrt(.Machine$double.eps),   linCmtShiErr = sqrt(.Machine$double.eps),   linCmtShiMax = 20L,   linCmtScale = FALSE,   linCmtHcmt = NULL,   linCmtHmeanI = c(\"geometric\", \"arithmetic\", \"harmonic\"),   linCmtHmeanO = c(\"geometric\", \"arithmetic\", \"harmonic\"),   linCmtSuspect = 1e-06,   linCmtForwardMax = 2L,   envir = parent.frame() )  # S3 method for class '`function`' rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # S3 method for class 'rxUi' rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # S3 method for class 'rxode2tos' rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # S3 method for class 'nlmixr2FitData' rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # S3 method for class 'nlmixr2FitCore' rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # Default S3 method rxSolve(   object,   params = NULL,   events = NULL,   inits = NULL,   ...,   theta = NULL,   eta = NULL,   envir = parent.frame() )  # S3 method for class 'rxSolve' update(object, ...)  # S3 method for class 'rxode2' predict(object, ...)  # S3 method for class '`function`' predict(object, ...)  # S3 method for class 'rxUi' predict(object, ...)  # S3 method for class 'rxSolve' predict(object, ...)  # S3 method for class 'rxEt' predict(object, ...)  # S3 method for class 'rxParams' predict(object, ...)  # S3 method for class 'rxode2' simulate(object, nsim = 1L, seed = NULL, ...)  # S3 method for class 'rxSolve' simulate(object, nsim = 1L, seed = NULL, ...)  # S3 method for class 'rxParams' simulate(object, nsim = 1L, seed = NULL, ...)  # S3 method for class 'rxSolve' solve(a, b, ...)  # S3 method for class 'rxUi' solve(a, b, ...)  # S3 method for class '`function`' solve(a, b, ...)  # S3 method for class 'rxode2' solve(a, b, ...)  # S3 method for class 'rxParams' solve(a, b, ...)  # S3 method for class 'rxEt' solve(a, b, ...)  rxControl(   ...,   params = NULL,   events = NULL,   inits = NULL,   envir = parent.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"object either rxode2 family objects, file-name rxode2 model specification, string rxode2 model specification. params numeric named vector values every parameter ODE system; names must correspond parameter identifiers used ODE specification; events eventTable object describing input (e.g., doses) dynamic system observation sampling time points (see eventTable()); inits vector initial values state variables (e.g., amounts compartment), order vector must state variables (e.g., PK/PD compartments); scale numeric named vector scaling ode parameters system.  names must correspond parameter identifiers ODE specification. ODE variables divided scaling factor.  example scale=c(center=2) divide center ODE variable 2. method method solving ODEs.  Currently supports: \"liblsoda\" thread safe lsoda.  supports parallel thread-based solving, ignores user Jacobian specification. \"lsoda\" – LSODA solver.  support parallel thread-based solving, allows user Jacobian specification. \"dop853\" – DOP853 solver.  support parallel thread-based solving user Jacobian specification \"indLin\" – Solving inductive linearization.  rxode2 dll must setup specially use solving routine. sigdig Specifies \"significant digits\" ode solving requests.  specified controls relative absolute tolerances ODE solvers.  default tolerance 0.5*10^(-sigdig-2) regular ODEs. sensitivity equations default 0.5*10\\^(-sigdig-1.5) (sensitivity changes applicable liblsoda).  also controls atol/rtol steady state solutions. ssAtol/ssRtol 0.5*10\\^(-sigdig) sensitivities 0.5*10\\^(-sigdig+0.625).  default unspecified (NULL) uses standard atol/rtol. atol numeric absolute tolerance (1e-8 default) used ODE solver determine good solution achieved;  also used solved linear model check prior doses add anything solution. rtol numeric relative tolerance (1e-6 default) used ODE solver determine good solution achieved. also used solved linear model check prior doses add anything solution. maxsteps maximum number (internally defined) steps allowed one call solver. (5000 default) hmin minimum absolute step size allowed. default value 0. hmax maximum absolute step size allowed.  hmax=NA (default), uses average difference + hmaxSd*sd times sampling events. hmaxSd user specified parameter defaults zero.  hmax=NULL rxode2 uses maximum difference times sampling events.  value 0 equivalent infinite maximum absolute step size. hmaxSd number standard deviations time difference add hmax. default 0 hini step size attempted first step. default value determined solver (hini = 0) maxordn maximum order allowed nonstiff (Adams) method.  default 12.  can 1 12. maxords maximum order allowed stiff (BDF) method.  default value 5.  can 1 5. ... arguments including scaling factors compartment.  includes S# = numeric scale compartment # dividing compartment amount scale factor, like NONMEM. cores Number cores used parallel ODE solving.  equivalent calling setRxThreads() covsInterpolation specifies interpolation method time-varying covariates. solving ODEs often samples times outside sampling time specified events. happens, time varying covariates interpolated.  Currently can : \"linear\" interpolation, interpolates covariate solving line observed covariates extrapolating new covariate value. \"locf\" – Last observation carried forward (default). \"nocb\" – Next Observation Carried Backward.  method NONMEM uses. \"midpoint\" Last observation carried forward midpoint; Next observation carried backward midpoint. time-varying covariates missing value present, interpolation method use either \"locf\" \"nocb\" throughout type covariate interpolation selected. using linear midpoint interpolation, lower point interpolation use locf interpolate missing covariates upper point use nocb interpolate missing covariates. naInterpolation specifies interpolation method time-varying covariates instantaneous value NA (explicit interpolation) covsInterpolation either \"midpoint\" \"linear\". can : \"locf\" – last observation carried forward (default) \"nocb\" – next observation carried backward. look prior value (backwards/locf) instantaneously missing, next value instantaneously missing.  covariates missing find end/beginning individual record, switch direction.  really missing, return missing. keepInterpolation specifies interpolation method variables keep column.  nlmixr2 creates mtime, addl doses etc, items originally dataset. interpolation methods can choose : \"locf\" – last observation carried forward (default) \"nocb\" – next observation carried backward. \"na\" – interpolation, simply put NA interpolated keep covariates. addCov boolean indicating covariates added output matrix data frame. default disabled. sigma Named sigma covariance Cholesky decomposition covariance matrix.  names columns indicate parameters simulated.  simulated every observation solved system. sigma NA using rxode2 ui model, unexplained variability described sigma matrix set zero. sigmaDf Degrees freedom sigma t-distribution.  default equivalent Inf, normal distribution. sigmaLower Lower bounds simulated unexplained variability (default -Inf) sigmaUpper Upper bounds simulated unexplained variability (default Inf) nCoresRV Number cores used simulation sigma variables.  default 1. reproduce results need run platform number cores. reason set one, regardless number cores used threaded ODE solving. sigmaIsChol Boolean indicating sigma Cholesky decomposition instead symmetric covariance sigmaSeparation separation strategy sigma; Tells type separation strategy simulating covariance parameter uncertainty standard deviations modeled thetaMat matrix. \"lkj\" simulates correlation matrix rLKJ1 matrix distribution parameter eta equal degrees freedom nu (nu-1)/2 \"separation\" simulates identity inverse Wishart covariance matrix nu degrees freedom.  converted covariance matrix augmented modeled standard deviations.  computationally complex \"lkj\" prior, performs better covariance matrix size greater equal 10 \"auto\" chooses \"lkj\" dimension matrix less 10 \"separation\" greater equal 10. sigmaXform taking sigma values thetaMat simulations (using separation strategy covariance simulation), thetaMat values turned int standard deviation values: identity standard deviation values directly modeled params thetaMat matrix variance params thetaMat simulates variance directly modeled thetaMat matrix log params thetaMat simulates log(sd) nlmixrSqrt params thetaMat simulates inverse cholesky decomposed matrix x\\^2 modeled along diagonal.  works diagonal matrix. nlmixrLog params thetaMat simulates inverse cholesky decomposed matrix exp(x\\^2) along diagonal.  works diagonal matrix. nlmixrIdentity params thetaMat simulates inverse cholesky decomposed matrix. works diagonal matrix. nDisplayProgress integer indicating minimum number c-based solves progress bar shown.  default 10,000. amountUnits supplies dose units data frame supplied instead event table.  importing data rxode2 event table. timeUnits supplies time units data frame supplied instead event table.  importing data rxode2 event table. theta vector parameters named THETA\\[#\\] added parameters thetaLower Lower bounds simulated population parameter variability (default -Inf) thetaUpper Upper bounds simulated population unexplained variability (default Inf) eta vector parameters named ETA\\[#\\] added parameters addDosing Boolean indicating solve add rxode2 EVID related columns.  also include dosing information estimates doses.  default, rxode2 includes estimates observations. (default FALSE). addDosing NULL, include EVID=0 solve exclude model-times EVID=2. addDosing NA classic rxode2 EVID events returned. addDosing TRUE add event information NONMEM-style format; subsetNonmem=FALSE rxode2 also include extra event types (EVID) ending infusion modeled times: EVID=-1 modeled rate infusions turned (matches rate=-1) EVID=-2 modeled duration infusions turned (matches rate=-2) EVID=-10 specified rate infusions turned (matches rate>0) EVID=-20 specified dur infusions turned (matches dur>0) EVID=101,102,103,... Modeled time 101 first model time, 102 second etc. stateTrim amounts/concentrations one states value, trim value. default Inf.  Also trims -stateTrim large negative amounts/concentrations.  want trim range say c(0, 2000000) may specify 2 values lower upper range make sure state values reasonable range. updateObject internally used flag update rxode2 solved object (supplying rxode2 solved object) well returning new object.  probably modify FALSE default unless willing unexpected results. omega Estimate Covariance matrix. omega list, assume block matrix convert full matrix simulations.  omega NA using rxode2 ui model, subject variability described omega matrix set zero. omegaDf degrees freedom t-distribution simulation.  default NULL equivalent Inf degrees, simulate normal distribution instead t-distribution. omegaIsChol Indicates omega supplied Cholesky decomposed matrix instead traditional symmetric matrix. omegaSeparation Omega separation strategy Tells type separation strategy simulating covariance parameter uncertainty standard deviations modeled thetaMat matrix. \"lkj\" simulates correlation matrix rLKJ1 matrix distribution parameter eta equal degrees freedom nu (nu-1)/2 \"separation\" simulates identity inverse Wishart covariance matrix nu degrees freedom.  converted covariance matrix augmented modeled standard deviations.  computationally complex \"lkj\" prior, performs better covariance matrix size greater equal 10 \"auto\" chooses \"lkj\" dimension matrix less 10 \"separation\" greater equal 10. omegaXform taking omega values thetaMat simulations (using separation strategy covariance simulation), thetaMat values turned int standard deviation values: identity standard deviation values directly modeled params thetaMat matrix variance params thetaMat simulates variance directly modeled thetaMat matrix log params thetaMat simulates log(sd) nlmixrSqrt params thetaMat simulates inverse cholesky decomposed matrix x\\^2 modeled along diagonal.  works diagonal matrix. nlmixrLog params thetaMat simulates inverse cholesky decomposed matrix exp(x\\^2) along diagonal.  works diagonal matrix. nlmixrIdentity params thetaMat simulates inverse cholesky decomposed matrix. works diagonal matrix. omegaLower Lower bounds simulated ETAs (default -Inf) omegaUpper Upper bounds simulated ETAs (default Inf) nSub Number subject variabilities (ETAs) simulated every realization parameters. thetaMat Named theta matrix. thetaDf degrees freedom t-distribution simulation.  default NULL equivalent Inf degrees, simulate normal distribution instead t-distribution. thetaIsChol Indicates theta supplied Cholesky decomposed matrix instead traditional symmetric matrix. nStud Number virtual studies characterize uncertainty estimated parameters. dfSub Degrees freedom sample subject variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. dfObs Degrees freedom sample unexplained variability matrix inverse Wishart distribution (scaled) scaled inverse chi squared distribution. returnType tells type object returned.  currently supported types : \"rxSolve\" (default) return reactive data frame can change easily change different pieces solve update data frame.  currently standard solving method rxode2,  used rxSolve(object, ...), solve(object,...), \"data.frame\" – returns plain, non-reactive data frame; Currently slightly faster returnType=\"matrix\" \"matrix\" – returns plain matrix column names attached solved object.  used object$run well object$solve \"data.table\" – returns data.table; data.table created reference (ie setDt()), fast. \"tbl\" \"tibble\" returns tibble format. seed object specifying random number generator initialized nsim represents number simulations.  rxode2, supply single subject event tables (created [eventTable()]) minSS Minimum number iterations steady-state dose maxSS Maximum number iterations steady-state dose infSSstep Step size determining constant infusion reached steady state.  default large value, 12. strictSS Boolean indicating strict steady-state required. strict steady-state (TRUE) required least minSS doses administered total number steady states doses continue maxSS reached, atol rtol every compartment reached.  However, ODE solving problems occur minSS reached whole subject considered invalid solve. strictSS FALSE long minSS reached last good solve ODE solving problems occur considered steady state, even though either atol, rtol maxSS achieved. istateReset TRUE, reset ISTATE variable 1 lsoda liblsoda doses, like deSolve; FALSE, reset ISTATE variable doses. subsetNonmem subset NONMEM compatible EVIDs .  default TRUE. maxAtolRtolFactor maximum atol/rtol FOCEi routines may adjust .  default 0.1 observations event table, start observations value. default zero. observations event table, end observations value. default 24 + maximum dose time. observations event table, amount increment observations . length.number observations create observations event table. default 200. iCov data frame individual non-time varying covariates combine events dataset.  iCov dataset one covariate per ID match event table keep Columns keep either input dataset iCov dataset.  iCov dataset, column kept per line.  input dataset, records added data LOCF (Last Observation Carried forward) imputation performed. indLinPhiTol requested accuracy tolerance exponential matrix. indLinPhiM maximum size Krylov basis indLinMatExpType matrix exponential type use rxode2.  Currently following supported: Al-Mohy Uses exponential matrix method Al-Mohy Higham (2009) arma Use exponential matrix RcppArmadillo expokit Use exponential matrix Roger B. Sidje (1998) indLinMatExpOrder integer, order approximation used, Al-Mohy expokit values. best value depends machine precision (slightly matrix). use 6 default. drop Columns drop output idFactor boolean indicates original ID values maintained. changes default sequentially ordered ID factor original ID values original dataset.  default enabled. mxhnil maximum number messages printed (per problem) warning T + H = T step (H = step size).  must positive result non-default value.  default value 0 (infinite). hmxi inverse maximum absolute value H used. hmxi = 0.0 allowed corresponds infinite hmax1 (default).  hminandhmximay changed time, take effect next change ofHis considered. option considered withmethod=\"liblsoda\"`. warnIdSort Warn ID present rxode2 assumes order parameters/iCov order parameters input dataset. warnDrop Warn column(s) supposed dropped, present. ssAtol Steady state atol convergence factor.  Can vector based state. ssRtol Steady state rtol convergence factor.  Can vector based state. safeZero Use safe zero divide. default turned may turn wish. safeLog Use safe log.  enabled value taking log() negative zero, return log(machine epsilon).  default turned . safePow Use safe powers.  enabled power negative base zero, return machine epsilon^(negative power).  default turned . sumType Sum type use sum() rxode2 code blocks. pairwise uses pairwise sum (fast, default) fsum uses PreciseSum package's fsum function (accurate) kahan uses Kahan correction neumaier uses Neumaier correction c uses correction: default/native summing prodType Product use prod() rxode2 blocks long double converts long double, performs multiplication converts back. double uses standard double scale multiplication. resample character vector model variables resample input dataset; sampling done replacement. NULL FALSE resampling done.  TRUE resampling done covariates input dataset resampleID boolean representing resampling done individual basis TRUE (ie. whole patient selected) covariate resampled independent subject identifier FALSE.  resampleID=TRUE correlations parameters retained, resampleID=FALSE ignores patient covariate correaltions. Hence default resampleID=TRUE. maxwhile represents maximum times loop evaluated exiting.  default 100000 atolSens Sensitivity atol, can different atol liblsoda.  allows less accurate solve gradients (desired) rtolSens Sensitivity rtol, can different rtol liblsoda.  allows less accurate solve gradients (desired) ssAtolSens Sensitivity absolute tolerance (atol) calculating steady state achieved sensitivity compartments. ssRtolSens Sensitivity relative tolerance (rtol) calculating steady state achieved sensitivity compartments. simVariability determines variability simulated. NA (default) determined solver. nLlikAlloc number log likelihood endpoints used model.  allows independent log likelihood per endpoint focei nlmixr2.  likely set, though hurt anything (just may take memory larger allocations). useStdPow uses C's pow exponentiation instead R's R_pow R_pow_di.  default FALSE naTimeHandle Determines time handling happens time becomes NA: current options : ignore ignores NA time input passes . warn (default) produce warning end solve, continues solving passing NA time error stop solve parallel solved ODE (otherwise stopping can crash R) addlKeepsCov determines additional dosing items repeats dose (FALSE) keeps covariates record dose (TRUE) addlDropSs steady state doses addl specification steady state flag dropped repeated doses (TRUE) retained (FALSE) ssAtDoseTime Boolean TRUE back calculates steady concentration actual time dose, otherwise FALSE doses shifted ss2cancelAllPending TRUE SS=2 event type cancels pending doses like SS=1.  FALSE pending doses canceled SS=2 (infusions started SS=2 occurred canceled, though). ssSolved TRUE return solved steady state solutions linear compartment model.  FALSE solve steady state using linear solutions instead.  used method linCmt() mix ODEs solution.  default TRUE. linCmtSensType type linear compartment sensitivity/gradients use.  current options : auto – one compartment models use AD method, 2 3 compartment model use forwardG. AD – automatic differentiation (using stan math) forward – forward sensitivity step size determined shi 2021 optimization (per problem) forwardG – forward sensitivity step size determined Gill 1983 optimization forward differences (per problem). central – central sensitivity step size determined shi 2021 optimization (per problem) forward3 – three point central difference step size determined shi 2021 optimization central differences (per problem) endpoint5 – five point endpoint difference step size determined shi 2021 optimization central differences (per problem) fowardH – forward sensitivity step size fixed centralH – central sensitivity step size fixed forward3H – three point central difference step size fixed endpoint5H – five point endpoint difference step size fixed linCmtSensH step size forward central differences using option centralH, forwardH, foward3H endpoint5H options. #' linCmtGillFtol gillFtol gradient error tolerance acceptable issuing warning/error gradient estimates. linCmtGillK total number possible steps determine optimal forward/central difference step size per parameter (Gill 1983 method).  0, optimal step size determined.  Otherwise optimal step size determined. linCmtGillStep looking optimal forward difference step size, step size increase initial estimate .  iteration new step size = (prior step size)*gillStep linCmtGillRtol relative tolerance used Gill 1983 optimal step size determination. linCmtShiErr Shi difference error linCmtShiMax maximum number steps optimization forward-difference step size linear compartment numeric difference. linCmtScale scale linear compartment model.  applied sensitivity approximation using numeric differences.  TRUE NULL use default scaling, FALSE use scaling.  one elment numeric, value duplicated 7 times applies parameters. Otherwise seven element numeric vector implying scaling linear compartmental model parameters. linCmtHcmt represents compartments considered optimizing forward difference step size.  character vector can following (multiple allowed): \"depot\" – depot compartment \"central\" – central compartment \"peripheral1\" – peripheral compartment \"peripheral2\" – second peripheral compartment \"concentration\" – concentration value (.e. central compartment/volume) linCmtHmeanI represents type sum done time-point linear solved systems (defined \"linCmtHcmt\"). \"arithmetic\" – gives arithmetic mean \"geometric\" – gives geometric mean \"harmonic\" – gives harmonic mean linCmtHmeanO represents type sum done overall problem linear solved systems (first time point mean calculated linCmtHmeanI). \"arithmetic\" – gives arithmetic mean \"geometric\" – gives geometric mean \"harmonic\" – gives harmonic mean linCmtSuspect tolerance gradients linear compartment solutions re-compute gradients seem zero. linCmtForwardMax maximum number points forward difference take calculating gradients.  integer 1 3.  least 1 extra point taken gradient calculation, gradient suspect another taken (value 2), finally third calculated gradient still suspect. envir environment look R user functions (defaults parent environment) using solve(), equivalent object argument.  specify object later argument list overwrites parameter. b using solve(), equivalent params argument.  specify params named argument, overwrites output","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"“rxSolve” solve object stores solved value special data.frame type determined returnType. default many rows sampled time points many columns system variables (defined ODEs additional assignments rxode2 model code).  also stores information call allow dynamic updating solved object. operations object similar data-frame, expand $ [[\"\"]] access operators assignment operators resolve based different parameter values, initial conditions, solver parameters, events (updating time variable). can call eventTable() methods solved object update event table resolve system equations.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"rest document focus different ODE solving methods, followed core solving method's options, rxode2 event handling options, rxode2's numerical stability options, rxode2's output options, finally internal rxode2 options compatibility options.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"\"New Scaling Squaring Algorithm Matrix Exponential\", Awad H. Al-Mohy Nicholas J. Higham, August 2009 Roger B. Sidje (1998).  EXPOKIT: Software package computing matrix exponentials.  ACM - Transactions Mathematical Software 24(1), 130-156. Hindmarsh, . C. ODEPACK, Systematized Collection ODE Solvers. Scientific Computing, R. S. Stepleman et al. (Eds.), North-Holland, Amsterdam, 1983, pp. 55-64. Petzold, L. R. Automatic Selection Methods Solving Stiff Nonstiff Systems Ordinary Differential Equations. Siam J. Sci. Stat. Comput. 4 (1983), pp. 136-148. Hairer, E., Norsett, S. P., Wanner, G. Solving ordinary differential equations , nonstiff problems. 2nd edition, Springer Series Computational Mathematics, Springer-Verlag (1993).","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolve.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Options, Solving & Simulation of an ODE/solved system — rxSolve","text":"Matthew Fidler, Melissa Hallow  Wenping Wang","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveFree.html","id":null,"dir":"Reference","previous_headings":"","what":"Free the C solving/parsing information. — rxSolveFree","title":"Free the C solving/parsing information. — rxSolveFree","text":"Take ODE C system free .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveFree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Free the C solving/parsing information. — rxSolveFree","text":"","code":"rxSolveFree()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveFree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Free the C solving/parsing information. — rxSolveFree","text":"logical indicating memory successfully freed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveSetup.html","id":null,"dir":"Reference","previous_headings":"","what":"See if the memory is installed for a solve — rxSolveSetup","title":"See if the memory is installed for a solve — rxSolveSetup","text":"See memory installed solve","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveSetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See if the memory is installed for a solve — rxSolveSetup","text":"","code":"rxSolveSetup()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveSetup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See if the memory is installed for a solve — rxSolveSetup","text":"boolean saying memnory currently free rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSolveSetup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"See if the memory is installed for a solve — rxSolveSetup","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":null,"dir":"Reference","previous_headings":"","what":"This function splits a function based on + or - terms — rxSplitPlusQ","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"uses parser disturb terms within functions.  example:","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"","code":"rxSplitPlusQ(x, level = 0, mult = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"x Quoted R expression splitting level Internal level parsing mult boolean split based * / expressions instead. default turned .","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"character vector split expressions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"aexp(b+c)+dlog(e-f)-g*f return c(\"* exp(b + c)\", \"d * log(e - f)\", \"- g * f\")","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSplitPlusQ.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function splits a function based on + or - terms — rxSplitPlusQ","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStack.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack a solved object for things like default ggplot2 plot — rxStack","title":"Stack a solved object for things like default ggplot2 plot — rxStack","text":"Stack solved object things like default ggplot2 plot","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack a solved object for things like default ggplot2 plot — rxStack","text":"","code":"rxStack(data, vars = NULL, doSim = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stack a solved object for things like default ggplot2 plot — rxStack","text":"data rxode2 object stacked. vars Variables include stacked data; default variables vars NULL. vars sim comes rxode2 ui simulation multiple endpoints (ie CMT simulation), rework data stacked based value based compartments multiple endpoint model. vars sim.endpoint1 subset stack endpoint1, can also `c(\"sim.endpoint1\", \"sim.endpoint2\") \"stack\" subset endpoint1 endpoint2. specify sim type variables prefixed sim otherwise, stack treat differently. doSim boolean determines \"sim\" variable rxSolve dataset actually \"stacking\" based endpoint (TRUE) simply treating sim variable.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stack a solved object for things like default ggplot2 plot — rxStack","text":"Stacked data value trt, value values trt state lhs variables.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stack a solved object for things like default ggplot2 plot — rxStack","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxState.html","id":null,"dir":"Reference","previous_headings":"","what":"State variables — rxState","title":"State variables — rxState","text":"returns model's compartments states.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State variables — rxState","text":"","code":"rxState(obj = NULL, state = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"State variables — rxState","text":"obj rxode2 family objects state string indicating state compartment like lookup.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"State variables — rxState","text":"state missing, return character vector states. state string, return compartment number named state.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxState.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"State variables — rxState","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ODE states only — rxStateOde","title":"Get the ODE states only — rxStateOde","text":"Get ODE states ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ODE states only — rxStateOde","text":"","code":"rxStateOde(obj)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ODE states only — rxStateOde","text":"obj rxode2 object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the ODE states only — rxStateOde","text":"ODE states ","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the ODE states only — rxStateOde","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxStateOde.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the ODE states only — rxStateOde","text":"","code":"mod <- rxode2({   Cp <- linCmt(Cl, V, Q2, V2, Q3, V3)   ke0 <- log(2)/(50)   d/dt(Ce) <- (Cp-Ce)*ke0 }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  rxStateOde(mod) #> [1] \"Ce\"  rxState(mod) #> [1] \"Ce\"          \"central\"     \"peripheral1\" \"peripheral2\"  mod <- rxode2({   Cp <- linCmt(Cl, V, Q2, V2, Q3, V3, ka)   ke0 <- log(2)/(50)   d/dt(Ce) <- (Cp-Ce)*ke0 }, linCmtSens=\"linCmtB\") #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  rxStateOde(mod) #> [1] \"Ce\"  rxState(mod) #>  [1] \"Ce\"                         \"depot\"                      #>  [3] \"central\"                    \"peripheral1\"                #>  [5] \"peripheral2\"                \"rx__sens_central_BY_p1\"     #>  [7] \"rx__sens_central_BY_v1\"     \"rx__sens_central_BY_p2\"     #>  [9] \"rx__sens_central_BY_p3\"     \"rx__sens_central_BY_p4\"     #> [11] \"rx__sens_central_BY_p5\"     \"rx__sens_central_BY_ka\"     #> [13] \"rx__sens_peripheral1_BY_p1\" \"rx__sens_peripheral1_BY_v1\" #> [15] \"rx__sens_peripheral1_BY_p2\" \"rx__sens_peripheral1_BY_p3\" #> [17] \"rx__sens_peripheral1_BY_p4\" \"rx__sens_peripheral1_BY_p5\" #> [19] \"rx__sens_peripheral1_BY_ka\" \"rx__sens_peripheral2_BY_p1\" #> [21] \"rx__sens_peripheral2_BY_v1\" \"rx__sens_peripheral2_BY_p2\" #> [23] \"rx__sens_peripheral2_BY_p3\" \"rx__sens_peripheral2_BY_p4\" #> [25] \"rx__sens_peripheral2_BY_p5\" \"rx__sens_peripheral2_BY_ka\" #> [27] \"rx__sens_depot_BY_ka\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSumProdModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Recast model in terms of sum/prod — rxSumProdModel","title":"Recast model in terms of sum/prod — rxSumProdModel","text":"Recast model terms sum/prod","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSumProdModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recast model in terms of sum/prod — rxSumProdModel","text":"","code":"rxSumProdModel(model, expand = FALSE, sum = TRUE, prod = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSumProdModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recast model in terms of sum/prod — rxSumProdModel","text":"model rxode2 model expand Boolean indicating expression expanded. sum Use sum(...) prod Use prod(...)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSumProdModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recast model in terms of sum/prod — rxSumProdModel","text":"model string prod(.) sum(.) operations.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSumProdModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recast model in terms of sum/prod — rxSumProdModel","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSupportedFuns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of supported functions — rxSupportedFuns","title":"Get list of supported functions — rxSupportedFuns","text":"Get list supported functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSupportedFuns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of supported functions — rxSupportedFuns","text":"","code":"rxSupportedFuns()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSupportedFuns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of supported functions — rxSupportedFuns","text":"list supported functions rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSupportedFuns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of supported functions — rxSupportedFuns","text":"","code":"rxSupportedFuns() #>   [1] \"gammafn\"              \"lgammafn\"             \"lgamma\"               #>   [4] \"loggamma\"             \"digamma\"              \"trigamma\"             #>   [7] \"tetragamma\"           \"pentagamma\"           \"cospi\"                #>  [10] \"sinpi\"                \"tanpi\"                \"log1p\"                #>  [13] \"expm1\"                \"factorial\"            \"lfactorial\"           #>  [16] \"lgamma1p\"             \"log10\"                \"log2\"                 #>  [19] \"log1pexp\"             \"phi\"                  \"pnorm\"                #>  [22] \"normcdf\"              \"qnorm\"                \"fabs\"                 #>  [25] \"pow\"                  \"R_pow\"                \"R_pow_di\"             #>  [28] \"Rx_pow_di\"            \"Rx_pow\"               \"lbeta\"                #>  [31] \"abs\"                  \"acos\"                 \"acosh\"                #>  [34] \"asin\"                 \"asinh\"                \"atan\"                 #>  [37] \"atan2\"                \"atanh\"                \"beta\"                 #>  [40] \"cos\"                  \"cosh\"                 \"erf\"                  #>  [43] \"erfc\"                 \"exp\"                  \"gamma\"                #>  [46] \"log\"                  \"polygamma\"            \"rxTBS\"                #>  [49] \"rxTBSi\"               \"rxTBSd\"               \"rxTBSd2\"              #>  [52] \"sin\"                  \"sinh\"                 \"sqrt\"                 #>  [55] \"tan\"                  \"tanh\"                 \"gammap\"               #>  [58] \"floor\"                \"round\"                \"ceil\"                 #>  [61] \"trunc\"                \"bessel_i\"             \"bessel_j\"             #>  [64] \"bessel_k\"             \"bessel_y\"             \"logspace_add\"         #>  [67] \"logspace_sub\"         \"fmax2\"                \"fmin2\"                #>  [70] \"sign\"                 \"fsign\"                \"fprec\"                #>  [73] \"fround\"               \"ftrunc\"               \"transit\"              #>  [76] \"gammaq\"               \"gammapDer\"            \"gammapInv\"            #>  [79] \"gammapInva\"           \"gammaqInv\"            \"gammaqInva\"           #>  [82] \"lowergamma\"           \"uppergamma\"           \"linCmtA\"              #>  [85] \"linCmtB\"              \"max\"                  \"min\"                  #>  [88] \"logit\"                \"expit\"                \"probit\"               #>  [91] \"probitInv\"            \"tlast\"                \"tlast0\"               #>  [94] \"tfirst\"               \"tfirst0\"              \"lag\"                  #>  [97] \"lead\"                 \"dose\"                 \"podo\"                 #> [100] \"dose0\"                \"podo0\"                \"dabs\"                 #> [103] \"dabs2\"                \"abs1\"                 \"dabs1\"                #> [106] \"erfinv\"               \"abs0\"                 \"dosenum\"              #> [109] \"first\"                \"last\"                 \"diff\"                 #> [112] \"is.nan\"               \"is.na\"                \"is.finite\"            #> [115] \"is.infinite\"          \"llikPois\"             \"llikPoisDlambda\"      #> [118] \"llikBinom\"            \"llikBinomDprob\"       \"llikNbinom\"           #> [121] \"llikNbinomDprob\"      \"llikNbinomMu\"         \"llikNbinomMuDmu\"      #> [124] \"llikBeta\"             \"llikBetaDshape1\"      \"llikBetaDshape2\"      #> [127] \"llikT\"                \"llikTDdf\"             \"llikTDmean\"           #> [130] \"llikTDsd\"             \"llikChisq\"            \"llikChisqDdf\"         #> [133] \"llikExp\"              \"llikExpDrate\"         \"llikF\"                #> [136] \"llikFDdf1\"            \"llikFDdf2\"            \"llikGeom\"             #> [139] \"llikGeomDprob\"        \"llikUnif\"             \"llikUnifDalpha\"       #> [142] \"llikUnifDbeta\"        \"llikWeibull\"          \"llikWeibullDshape\"    #> [145] \"llikWeibullDscale\"    \"llikGamma\"            \"llikGammaDshape\"      #> [148] \"llikGammaDrate\"       \"llikCauchy\"           \"llikCauchyDlocation\"  #> [151] \"llikCauchyDscale\"     \"llikNorm\"             \"llikNormDmean\"        #> [154] \"llikNormDsd\"          \"llikXPois\"            \"llikXPoisDlambda\"     #> [157] \"llikXBinom\"           \"llikXBinomDprob\"      \"llikXNbinomMu\"        #> [160] \"llikXNbinomMuDmu\"     \"llikXNbinom\"          \"llikXNbinomDprob\"     #> [163] \"llikXBeta\"            \"llikXBetaDshape1\"     \"llikXBetaDshape2\"     #> [166] \"llikXT\"               \"llikXTDdf\"            \"llikXTDmean\"          #> [169] \"llikXTDsd\"            \"llikXChisq\"           \"llikXChisqDdf\"        #> [172] \"llikXExp\"             \"llikXExpDrate\"        \"llikXF\"               #> [175] \"llikXFDdf1\"           \"llikXFDdf2\"           \"llikXGeom\"            #> [178] \"llikXGeomDprob\"       \"llikXUnif\"            \"llikXUnifDalpha\"      #> [181] \"llikXUnifDbeta\"       \"llikXWeibull\"         \"llikXWeibullDshape\"   #> [184] \"llikXWeibullDscale\"   \"llikXGamma\"           \"llikXGammaDshape\"     #> [187] \"llikXGammaDrate\"      \"llikXCauchy\"          \"llikXCauchyDlocation\" #> [190] \"llikXCauchyDscale\"    \"llikXNorm\"            \"llikXNormDmean\"       #> [193] \"llikXNormDsd\"         \"ReLU\"                 \"dReLU\"                #> [196] \"GELU\"                 \"dGELU\"                \"d2GELU\"               #> [199] \"d3GELU\"               \"d4GELU\"               \"ELU\"                  #> [202] \"dELU\"                 \"d2ELU\"                \"d2aELU\"               #> [205] \"dELUa\"                \"d2ELUa\"               \"softplus\"             #> [208] \"dsoftplus\"            \"d2softplus\"           \"d3softplus\"           #> [211] \"d4softplus\"           \"SELU\"                 \"dSELU\"                #> [214] \"lReLU\"                \"dlReLU\"               \"PReLU\"                #> [217] \"dPReLU\"               \"d2PReLU\"              \"dPReLUa\"              #> [220] \"dPReLUa1\"             \"Swish\"                \"dSwish\"               #> [223] \"linCmt\"               \"rnorm\"                \"rxnorm\"               #> [226] \"rxbinom\"              \"rbinom\"               \"rxcauchy\"             #> [229] \"rcauchy\"              \"rchisq\"               \"rxchisq\"              #> [232] \"rexp\"                 \"rxexp\"                \"rbeta\"                #> [235] \"rxbeta\"               \"rgeom\"                \"rxgeom\"               #> [238] \"rxpois\"               \"rpois\"                \"rxt\"                  #> [241] \"rt\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSuppressMsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Respect suppress messages — rxSuppressMsg","title":"Respect suppress messages — rxSuppressMsg","text":"turns silent REprintf C suppressMessages() turned . makes REprintf act like messages R, can suppressed suppressMessages()","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSuppressMsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respect suppress messages — rxSuppressMsg","text":"","code":"rxSuppressMsg()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSuppressMsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respect suppress messages — rxSuppressMsg","text":"Nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSuppressMsg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respect suppress messages — rxSuppressMsg","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSuppressMsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respect suppress messages — rxSuppressMsg","text":"","code":"# rxSupressMsg() is called with rxode2()  # Note the errors are output to the console  try(rxode2(\"d/dt(matt)=/3\"), silent = TRUE) #>   #>    # When using suppressMessages, the output is suppressed  suppressMessages(try(rxode2(\"d/dt(matt)=/3\"), silent = TRUE))  # In rxode2, we use REprintf so that interrupted threads do not crash R # if there is a user interrupt. This isn't captured by R's messages, but # This interface allows the `suppressMessages()` to suppress the C printing # as well  # If you  want to suppress messages from rxode2 in other packages, you can use # this function"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvChol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Omega^-1 and derivatives — rxSymInvChol","title":"Get Omega^-1 and derivatives — rxSymInvChol","text":"Get Omega^-1 derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvChol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Omega^-1 and derivatives — rxSymInvChol","text":"","code":"rxSymInvChol(   invObjOrMatrix,   theta = NULL,   type = \"cholOmegaInv\",   thetaNumber = 0L )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvChol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Omega^-1 and derivatives — rxSymInvChol","text":"invObjOrMatrix Object inverse-type calculations.  matrix, setup object inversion rxSymInvCholCreate() default arguments return reactive s3 object.  Otherwise, use inversion object calculate requested derivative/inverse. theta Thetas used calculation.  missing (NULL), special s3 class created returned access Omega^1 objects needed cache based theta used. type type object.  Currently following types supported: cholOmegaInv gives Cholesky decomposition Omega Inverse matrix. omegaInv gives Omega Inverse matrix. d(omegaInv) gives d(Omega^-1) withe respect theta parameter specified thetaNumber. d(D) gives d(diagonal(Omega^-1)) respect theta parameter specified thetaNumber parameter thetaNumber types d(omegaInv) d(D), theta number derivative taken .  must positive 1 number thetas defining Omega matrix.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvChol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Omega^-1 and derivatives — rxSymInvChol","text":"Matrix based parameters environment matrixes calculated variables omega, omegaInv, dOmega, dOmegaInv.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvChol.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Omega^-1 and derivatives — rxSymInvChol","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholCreate.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","title":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","text":"Creates object calculating Omega/Omega^-1 derivatives","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholCreate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","text":"","code":"rxSymInvCholCreate(   mat,   diag.xform = c(\"sqrt\", \"log\", \"identity\"),   create.env = TRUE,   envir = parent.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholCreate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","text":"mat Initial Omega matrix diag.xform transformation diagonal elements OMEGA. chol(Omega^-1) create.env – Create environment calculate inverses. (default TRUE) envir – Environment evaluate function, bu default parent frame.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholCreate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","text":"rxSymInv object rxSymInv environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholCreate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates an object for calculating Omega/Omega^-1 and derivatives — rxSymInvCholCreate","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholN.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the dimension of the built-in derivatives/inverses — rxSymInvCholN","title":"Return the dimension of the built-in derivatives/inverses — rxSymInvCholN","text":"Return dimension built-derivatives/inverses","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the dimension of the built-in derivatives/inverses — rxSymInvCholN","text":"","code":"rxSymInvCholN()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSymInvCholN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the dimension of the built-in derivatives/inverses — rxSymInvCholN","text":"dimension built-derivatives/inverses","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyncOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync options with rxode2 variables — rxSyncOptions","title":"Sync options with rxode2 variables — rxSyncOptions","text":"Accessing rxode2 options via getOption slows solving.  allows options synced variables.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyncOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync options with rxode2 variables — rxSyncOptions","text":"","code":"rxSyncOptions(setDefaults = c(\"none\", \"permissive\", \"strict\"))"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyncOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync options with rxode2 variables — rxSyncOptions","text":"setDefaults setup rxode2's default solving options following options: \"none\" leave options alone \"permissive\" permissive option set similar R language specifications. \"strict\" strict option set similar original rxode2(). requires semicolons end lines equals assignment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyncOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync options with rxode2 variables — rxSyncOptions","text":"nothing; called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyncOptions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sync options with rxode2 variables — rxSyncOptions","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyntaxFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"A list and description of Rode supported syntax functions — rxSyntaxFunctions","title":"A list and description of Rode supported syntax functions — rxSyntaxFunctions","text":"list description Rode supported syntax functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyntaxFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list and description of Rode supported syntax functions — rxSyntaxFunctions","text":"","code":"rxSyntaxFunctions"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxSyntaxFunctions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list and description of Rode supported syntax functions — rxSyntaxFunctions","text":"data frame 3 columns 102 rows Function Reserved function Name Description Description function Aliases Function Aliases","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTempDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the rxode2 temporary directory — rxTempDir","title":"Get the rxode2 temporary directory — rxTempDir","text":"Get rxode2 temporary directory","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTempDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the rxode2 temporary directory — rxTempDir","text":"","code":"rxTempDir()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTempDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the rxode2 temporary directory — rxTempDir","text":"rxode2 temporary directory.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"rxTheme is the ggplot2 theme for rxode2 plots — rxTheme","title":"rxTheme is the ggplot2 theme for rxode2 plots — rxTheme","text":"rxTheme ggplot2 theme rxode2 plots","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxTheme is the ggplot2 theme for rxode2 plots — rxTheme","text":"","code":"rxTheme(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22,   grid = TRUE )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxTheme is the ggplot2 theme for rxode2 plots — rxTheme","text":"base_size base font size, given pts. base_family base font family base_line_size base size line elements base_rect_size base size rect elements grid Boolean indicating grid (TRUE) (FALSE). also character indicating x y.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxTheme is the ggplot2 theme for rxode2 plots — rxTheme","text":"ggplot2 theme used rxode2","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxToSE.html","id":null,"dir":"Reference","previous_headings":"","what":"rxode2 to symengine environment — rxToSE","title":"rxode2 to symengine environment — rxToSE","text":"rxode2 symengine environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxToSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rxode2 to symengine environment — rxToSE","text":"","code":"rxToSE(   x,   envir = NULL,   progress = FALSE,   promoteLinSens = TRUE,   parent = parent.frame() )  .rxToSE(x, envir = NULL, progress = FALSE)  rxFromSE(   x,   unknownDerivatives = c(\"forward\", \"central\", \"error\"),   parent = parent.frame() )  .rxFromSE(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxToSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rxode2 to symengine environment — rxToSE","text":"x expression envir default NULL; Environment put symengine variables . progress shows progress bar true. promoteLinSens Promote solved linear compartment systems sensitivity-based solutions. parent parent environment look R-based user functions unknownDerivatives handling derivatives unknown functions, translator translate different types numeric derivatives.  currently supported methods :","code":"- `forward` for forward differences - `central` for central differences - `error` for throwing an error for unknown derivatives"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxToSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rxode2 to symengine environment — rxToSE","text":"rxode2 symengine environment","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxToSE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rxode2 to symengine environment — rxToSE","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTrans.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate the model to C code if needed — rxTrans","title":"Translate the model to C code if needed — rxTrans","text":"function translates model C code, needed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTrans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate the model to C code if needed — rxTrans","text":"","code":"rxTrans(   model,   modelPrefix = \"\",   md5 = \"\",   modName = NULL,   modVars = FALSE,   ... )  # Default S3 method rxTrans(   model,   modelPrefix = \"\",   md5 = \"\",   modName = NULL,   modVars = FALSE,   ... )  # S3 method for class 'character' rxTrans(   model,   modelPrefix = \"\",   md5 = \"\",   modName = NULL,   modVars = FALSE,   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTrans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate the model to C code if needed — rxTrans","text":"model ODE model specification.  can : string containing set ordinary differential equations (ODE) expressions defining changes dynamic system. file name ODE system equation contained ODE expression enclosed \\{\\} (see also filename argument). details, see sections “Details” rxode2 Syntax . modelPrefix Prefix model functions compiled make sure multiple rxode2 objects can coexist R session. md5 md5 model parsing, used embed md5 DLL, provide functions like rxModelVars(). modName string used model name. string used naming various aspects computations, including generating C symbol names, dynamic libraries, etc. Therefore, necessary modName consists simple ASCII alphanumeric characters starting letter. modVars returns model variables instead named vector translated properties. ... Ignored parameters.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTrans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate the model to C code if needed — rxTrans","text":"named vector translated model properties including type jacobian specified, C function prefixes, well C functions names called compiled model.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxTrans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate the model to C code if needed — rxTrans","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUi.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is called when processing rxode2 user functions from the models — rxUdfUi","title":"This function is called when processing rxode2 user functions from the models — rxUdfUi","text":"function called processing rxode2 user functions models","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is called when processing rxode2 user functions from the models — rxUdfUi","text":"","code":"rxUdfUi(fun)  # S3 method for class 'rinbinom' rxUdfUi(fun)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is called when processing rxode2 user functions from the models — rxUdfUi","text":"fun function needs parsed changed.  R language expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is called when processing rxode2 user functions from the models — rxUdfUi","text":"needs return list following elements: iniDf – modified initial estimate data.frame – model code needs added current line – model code needs added current line replace – replacement code user function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function is called when processing rxode2 user functions from the models — rxUdfUi","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the control that is being processed or setup control for processing — rxUdfUiControl","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"Return control processed setup control processing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"","code":"rxUdfUiControl(value)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"value specified, assigns control processed, resets assigning NULL.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"value data.frame processed NULL.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiControl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the control that is being processed or setup control for processing — rxUdfUiControl","text":"","code":"rxUdfUiControl()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"Return data.frame processed setup data.frame processing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"","code":"rxUdfUiData(value)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"value specified, assigns data.frame processed, resets assigning NULL.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"value data.frame processed NULL.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the data.frame that is being processed or setup data.frame for processing — rxUdfUiData","text":"","code":"rxUdfUiData() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the current estimation method for the UI processing — rxUdfUiEst","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"Return current estimation method UI processing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"","code":"rxUdfUiEst(value)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"value specified, assigns character value estimation method NULL nothing estimated","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"value estimation method processed NULL","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiEst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the current estimation method for the UI processing — rxUdfUiEst","text":"","code":"rxUdfUiEst() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","title":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","text":"Get rxode2 iniDf current UI processed (return NULL)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","text":"","code":"rxUdfUiIniDf()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","text":"Initial data.frame processed NULL nothing.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniDf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniDf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the rxode2 iniDf of the current UI being processed (or return NULL) — rxUdfUiIniDf","text":"","code":"rxUdfUiIniDf() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniLhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the lhs parsed language expression — rxUdfUiIniLhs","title":"Return the lhs parsed language expression — rxUdfUiIniLhs","text":"Return lhs parsed language expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniLhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the lhs parsed language expression — rxUdfUiIniLhs","text":"","code":"rxUdfUiIniLhs()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniLhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the lhs parsed language expression — rxUdfUiIniLhs","text":"lhs language expression NULL","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniLhs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the lhs parsed language expression — rxUdfUiIniLhs","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiIniLhs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the lhs parsed language expression — rxUdfUiIniLhs","text":"","code":"rxUdfUiIniLhs() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"Return model variables processed setup model variables processing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"","code":"rxUdfUiMv(value)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"value specified, assigns model variables processed, resets assigning NULL.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"value modelVariables processed NULL.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiMv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the model variables that is being processed or setup model variables for processing — rxUdfUiMv","text":"","code":"rxUdfUiMv() #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiNum.html","id":null,"dir":"Reference","previous_headings":"","what":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","title":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","text":"called outside function parsing input unexpected returns 1L. useful writing replacement UI functions","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","text":"","code":"rxUdfUiNum()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","text":"integer greater 1L","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiNum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiNum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This gives the current number in the ui of the particular function being called. — rxUdfUiNum","text":"","code":"rxUdfUiNum() #> [1] 1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiParsing.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns if the current ui function is being parsed — rxUdfUiParsing","title":"Returns if the current ui function is being parsed — rxUdfUiParsing","text":"Returns current ui function parsed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiParsing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns if the current ui function is being parsed — rxUdfUiParsing","text":"","code":"rxUdfUiParsing()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiParsing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns if the current ui function is being parsed — rxUdfUiParsing","text":"logical current ui function parsed","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiParsing.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns if the current ui function is being parsed — rxUdfUiParsing","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiParsing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns if the current ui function is being parsed — rxUdfUiParsing","text":"","code":"rxUdfUiParsing() #> [1] FALSE"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiReset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the rxode2 ui environment variables — rxUdfUiReset","title":"Reset the rxode2 ui environment variables — rxUdfUiReset","text":"Reset rxode2 ui environment variables","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiReset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the rxode2 ui environment variables — rxUdfUiReset","text":"","code":"rxUdfUiReset()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiReset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset the rxode2 ui environment variables — rxUdfUiReset","text":"NULL silently","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiReset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reset the rxode2 ui environment variables — rxUdfUiReset","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUdfUiReset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset the rxode2 ui environment variables — rxUdfUiReset","text":"","code":"rxUdfUiReset()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress/Decompress rxode2 ui — rxUiDecompress","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"Compress/Decompress rxode2 ui","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"","code":"rxUiDecompress(ui)  rxUiCompress(ui)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"ui rxode2 ui object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"compressed decompressed rxui object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDecompress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress/Decompress rxode2 ui — rxUiDecompress","text":"","code":"one.cmt <- function() {   ini({     ## You may label each parameter with a comment     tka <- 0.45 # Log Ka     tcl <- log(c(0, 2.7, 100)) # Log Cl     ## This works with interactive models     ## You may also label the preceding line with label(\"label text\")     tv <- 3.45; label(\"log V\")     ## the label(\"Label name\") works with all models     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd) | tmp   }) }  f <- rxode2(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments print(class(f)) #> [1] \"rxUi\" \"raw\"  print(is.environment(f)) #> [1] FALSE  f  <- rxUiDecompress(f) print(class(f)) #> [1] \"rxUi\" print(is.environment(f)) #> [1] TRUE  f  <- rxUiCompress(f) print(class(f)) #> [1] \"rxUi\" \"raw\"  print(is.environment(f)) #> [1] FALSE"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"generic function deparsing certain objects printing rxode2 object.  Currently used meta-information rxUiDeparse.rxControl(rxControl(covsInterpolation=\"linear\", method=\"dop853\", naInterpolation=\"nocb\", keepInterpolation=\"nocb\", sigmaXform=\"variance\", omegaXform=\"variance\", returnType=\"data.frame\", sumType=\"fsum\", prodType=\"logify\"), \"ctl\")","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"","code":"rxUiDeparse(object, var)  # S3 method for class 'lotriFix' rxUiDeparse(object, var)  # Default S3 method rxUiDeparse(object, var)  # S3 method for class 'rxControl' rxUiDeparse(object, var)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"object object deparsed var variable name assigned","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"parsed R expression can used printing .function() calls.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiDeparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This is a generic function for deparsing certain objects when printing out a rxode2 object. Currently it is used for any meta-information — rxUiDeparse","text":"","code":"mat <- matrix(c(1, 0.1, 0.1, 1), 2, 2, dimnames=list(c(\"a\", \"b\"), c(\"a\", \"b\")))  rxUiDeparse(matrix(c(1, 0.1, 0.1, 1), 2, 2, dimnames=list(c(\"a\", \"b\"), c(\"a\", \"b\"))), \"x\") #> x <- lotri({ #>     a ~ 1 #>     b ~ c(0.1, 1) #> })"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiGet.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 for getting information from UI model — rxUiGet.cmtLines","title":"S3 for getting information from UI model — rxUiGet.cmtLines","text":"S3 getting information UI model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiGet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 for getting information from UI model — rxUiGet.cmtLines","text":"","code":"# S3 method for class 'cmtLines' rxUiGet(x, ...)  # S3 method for class 'dvidLine' rxUiGet(x, ...)  # S3 method for class 'paramsLine' rxUiGet(x, ...)  # S3 method for class 'interpLines' rxUiGet(x, ...)  # S3 method for class 'simulationSigma' rxUiGet(x, ...)  # S3 method for class 'simulationModel' rxUiGet(x, ...)  # S3 method for class 'symengineModelNoPrune' rxUiGet(x, ...)  # S3 method for class 'symengineModelPrune' rxUiGet(x, ...)  # S3 method for class 'simulationIniModel' rxUiGet(x, ...)  rxUiGet(x, ...)  # S3 method for class 'levels' rxUiGet(x, ...)  # S3 method for class 'state' rxUiGet(x, ...)  # S3 method for class 'stateDf' rxUiGet(x, ...)  # S3 method for class 'statePropDf' rxUiGet(x, ...)  # S3 method for class 'props' rxUiGet(x, ...)  # S3 method for class 'theta' rxUiGet(x, ...)  # S3 method for class 'lstChr' rxUiGet(x, ...)  # S3 method for class 'omega' rxUiGet(x, ...)  # S3 method for class 'funTxt' rxUiGet(x, ...)  # S3 method for class 'allCovs' rxUiGet(x, ...)  # S3 method for class 'muRefTable' rxUiGet(x, ...)  # S3 method for class 'multipleEndpoint' rxUiGet(x, ...)  # S3 method for class 'funPrint' rxUiGet(x, ...)  # S3 method for class 'fun' rxUiGet(x, ...)  # S3 method for class 'funPartsDigest' rxUiGet(x, ...)  # S3 method for class 'md5' rxUiGet(x, ...)  # S3 method for class 'sha1' rxUiGet(x, ...)  # S3 method for class 'ini' rxUiGet(x, ...)  # S3 method for class 'iniFun' rxUiGet(x, ...)  # S3 method for class 'modelFun' rxUiGet(x, ...)  # S3 method for class 'model' rxUiGet(x, ...)  # S3 method for class 'modelDesc' rxUiGet(x, ...)  # S3 method for class 'thetaLower' rxUiGet(x, ...)  # S3 method for class 'thetaUpper' rxUiGet(x, ...)  # S3 method for class 'lhsVar' rxUiGet(x, ...)  # S3 method for class 'varLhs' rxUiGet(x, ...)  # S3 method for class 'lhsEta' rxUiGet(x, ...)  # S3 method for class 'lhsTheta' rxUiGet(x, ...)  # S3 method for class 'lhsCov' rxUiGet(x, ...)  # S3 method for class 'etaLhs' rxUiGet(x, ...)  # S3 method for class 'thetaLhs' rxUiGet(x, ...)  # S3 method for class 'covLhs' rxUiGet(x, ...)  # Default S3 method rxUiGet(x, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiGet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 for getting information from UI model — rxUiGet.cmtLines","text":"x list (UIenvironment, exact).  UI environment parsed function rxode2.  exact boolean says exact match required. ... arguments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiGet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 for getting information from UI model — rxUiGet.cmtLines","text":"value requested UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUiGet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S3 for getting information from UI model — rxUiGet.cmtLines","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUnloadAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Unloads all rxode2 compiled DLLs — rxUnloadAll","title":"Unloads all rxode2 compiled DLLs — rxUnloadAll","text":"Unloads rxode2 compiled DLLs","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUnloadAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unloads all rxode2 compiled DLLs — rxUnloadAll","text":"","code":"rxUnloadAll()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUnloadAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unloads all rxode2 compiled DLLs — rxUnloadAll","text":"List rxode2 dlls still loaded boolean rxode2 dlls unloaded","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUnloadAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unloads all rxode2 compiled DLLs — rxUnloadAll","text":"","code":"print(rxUnloadAll()) #> NULL"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Use model object in your package — rxUse","title":"Use model object in your package — rxUse","text":"Use model object package","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use model object in your package — rxUse","text":"","code":"rxUse(obj, overwrite = TRUE, compress = \"bzip2\", internal = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use model object in your package — rxUse","text":"obj model save. overwrite default, use_data() overwrite existing files. really want , set TRUE. compress Choose type compression used save(). one \"gzip\", \"bzip2\", \"xz\". internal run internally.  default FALSE","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use model object in your package — rxUse","text":"Nothing; used side effects called user","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxValidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","title":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","text":"Validate rxode2 allows easy validation/qualification nlmixr running testing suite system.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxValidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","text":"","code":"rxValidate(type = NULL, skipOnCran = TRUE)  rxTest(type = NULL, skipOnCran = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxValidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","text":"type Type test filter test type, expression, evaluate contents, respecting skipOnCran skipOnCran TRUE skip test CRAN.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxValidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","text":"nothing","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxValidate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validate rxode2 This allows easy validation/qualification of nlmixr by running the testing suite on your system. — rxValidate","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Version and repository for this dparser package. — rxVersion","title":"Version and repository for this dparser package. — rxVersion","text":"Version repository dparser package.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Version and repository for this dparser package. — rxVersion","text":"","code":"rxVersion(   extra = \"\",   echo = FALSE,   version = sessionInfo()$otherPkgs$rxode2$Version )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Version and repository for this dparser package. — rxVersion","text":"extra extra text display logo echo Boolean echo text logo, default FALSE version Version display/return","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxVersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Version and repository for this dparser package. — rxVersion","text":"character vector version repository.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxVersion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Version and repository for this dparser package. — rxVersion","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxWithSeed.html","id":null,"dir":"Reference","previous_headings":"","what":"Preserved seed and possibly set the seed — rxWithSeed","title":"Preserved seed and possibly set the seed — rxWithSeed","text":"Preserved seed possibly set seed","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxWithSeed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preserved seed and possibly set the seed — rxWithSeed","text":"","code":"rxWithSeed(   seed,   code,   rxseed = rxGetSeed(),   kind = \"default\",   normal.kind = \"default\",   sample.kind = \"default\" )  rxWithPreserveSeed(code)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxWithSeed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preserved seed and possibly set the seed — rxWithSeed","text":"seed R seed use session code code evaluate rxseed rxode2 seed preserved kind character NULL.  kind character     string, set R's RNG kind desired.  Use \"default\"     return R default.  See ‘Details’     interpretation NULL. normal.kind character string NULL.  character     string, set method Normal generation.  Use \"default\"     return R default.  NULL makes change. sample.kind character string NULL.  character     string, set method discrete uniform generation (used     sample, instance).  Use \"default\" return     R default.  NULL makes change.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxWithSeed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preserved seed and possibly set the seed — rxWithSeed","text":"returns whatever code returning","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxWithSeed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preserved seed and possibly set the seed — rxWithSeed","text":"","code":"rxGetSeed() #> [1] -1 rxWithSeed(1, {    print(rxGetSeed())    rxnorm()    print(rxGetSeed())    rxnorm() }, rxseed=3) #> [1] 3 #> [1] 5 #> [1] 0.03291887"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate beta variable from threefry generator — rxbeta","title":"Simulate beta variable from threefry generator — rxbeta","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate beta variable from threefry generator — rxbeta","text":"","code":"rxbeta(shape1, shape2, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate beta variable from threefry generator — rxbeta","text":"shape1, shape2 non-negative parameters Beta distribution. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate beta variable from threefry generator — rxbeta","text":"beta random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate beta variable from threefry generator — rxbeta","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate beta variable from threefry generator — rxbeta","text":"","code":"# \\donttest{  ## Use threefry engine  rxbeta(0.5, 0.5, n = 10) # with rxbeta you have to explicitly state n #>  [1] 0.20010253 0.57312552 0.37768796 0.86754361 0.85391446 0.99893102 #>  [7] 0.99309318 0.02719286 0.00314745 0.42356861 rxbeta(5, 1, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 0.9998949 0.9416763 0.8655410 0.8965935 0.9685887 0.9084803 0.8582096 #>  [8] 0.7147322 0.9299513 0.9665686  rxbeta(1, 3) #> [1] 0.1473567   ## This example uses `rxbeta` directly in the model  rx <- function() {   model({     a <- rxbeta(2, 2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Binomial variable from threefry generator — rxbinom","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"","code":"rxbinom(size, prob, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"size number trials (zero ). prob probability success trial. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"binomial random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Binomial variable from threefry generator — rxbinom","text":"","code":"# \\donttest{ ## Use threefry engine  rxbinom(10, 0.9, n = 10) # with rxbinom you have to explicitly state n #>  [1] 10  8  9  7 10  9  9  8 10  8 rxbinom(3, 0.5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 3 3 2 3 2 3 2 1 3 1  rxbinom(4, 0.7) #> [1] 3   ## This example uses `rxbinom` directly in the model  rx <- function() {   model({     a <- rxbinom(1, 0.5)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Cauchy variable from threefry generator — rxcauchy","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"","code":"rxcauchy(location = 0, scale = 1, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"location, scale location scale parameters. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"Cauchy random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxcauchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Cauchy variable from threefry generator — rxcauchy","text":"","code":"# \\donttest{  ## Use threefry engine  rxcauchy(0, 1, n = 10) # with rxcauchy you have to explicitly state n #>  [1] -0.3161956 -9.8293808  0.2817785  0.5647767 -0.8987297 -0.2183899 #>  [7] 18.6560233  2.9999284 -0.5308393 -1.9472665 rxcauchy(0.5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1]   1.55072313   1.22780297 -49.40914679  32.47667344   2.33699668 #>  [6]   4.99563885   2.63606252  -1.93851598  -0.05421445 -11.45911180  rxcauchy(3) #> [1] 2.112529   ## This example uses `rxcauchy` directly in the model  rx <- function() {   model({     a <- rxcauchy(2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate chi-squared variable from threefry generator — rxchisq","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"","code":"rxchisq(df, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"df degrees freedom (non-negative, can non-integer). n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"chi squared random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxchisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate chi-squared variable from threefry generator — rxchisq","text":"","code":"# \\donttest{  ## Use threefry engine  rxchisq(0.5, n = 10) # with rxchisq you have to explicitly state n #>  [1] 1.90504480 0.25777327 0.24140921 0.19956262 0.11770409 1.33930514 #>  [7] 0.06363897 0.75250428 0.19157213 0.14954344 rxchisq(5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 10.069133  5.362974  7.301783  2.363228  4.780306  3.993018  3.457269 #>  [8]  3.348536  7.038279  8.084157  rxchisq(1) #> [1] 0.4266164   ## This example uses `rxchisq` directly in the model  rx <- function() {   model({     a <- rxchisq(2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate exponential variable from threefry generator — rxexp","title":"Simulate exponential variable from threefry generator — rxexp","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate exponential variable from threefry generator — rxexp","text":"","code":"rxexp(rate, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate exponential variable from threefry generator — rxexp","text":"rate vector rates. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate exponential variable from threefry generator — rxexp","text":"exponential random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate exponential variable from threefry generator — rxexp","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate exponential variable from threefry generator — rxexp","text":"","code":"# \\donttest{  ## Use threefry engine  rxexp(0.5, n = 10) # with rxexp you have to explicitly state n #>  [1] 0.05410404 2.25964412 0.40951127 4.24314765 0.58305288 0.56626127 #>  [7] 0.39817970 5.21608196 2.82629689 0.52366837 rxexp(5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 0.208739640 0.145190818 0.136720742 0.007704255 0.027296188 0.394830887 #>  [7] 0.491186947 0.184064949 0.265036398 0.312613464  rxexp(1) #> [1] 2.190768   ## This example uses `rxexp` directly in the model  rx <- function() {   model({     a <- rxexp(2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate F variable from threefry generator — rxf","title":"Simulate F variable from threefry generator — rxf","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate F variable from threefry generator — rxf","text":"","code":"rxf(df1, df2, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate F variable from threefry generator — rxf","text":"df1, df2 degrees freedom.  Inf allowed. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate F variable from threefry generator — rxf","text":"f random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate F variable from threefry generator — rxf","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate F variable from threefry generator — rxf","text":"","code":"# \\donttest{  ## Use threefry engine  rxf(0.5, 0.5, n = 10) # with rxf you have to explicitly state n #>  [1] 2.268848e-06 1.315195e+00 1.918315e+02 5.195747e-05 1.602946e+00 #>  [6] 2.437402e+00 5.475269e+02 2.882414e+04 2.329001e-07 5.059613e+00 rxf(5, 1, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 23.7578920 28.9085893  0.5882514  0.3202233 20.7032261  0.2102623 #>  [7]  6.0936919  0.7095009  0.6808133  1.2529923  rxf(1, 3) #> [1] 0.8087568   ## This example uses `rxf` directly in the model  rx <- function() {   model({     a <- rxf(2, 2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate gamma variable from threefry generator — rxgamma","title":"Simulate gamma variable from threefry generator — rxgamma","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate gamma variable from threefry generator — rxgamma","text":"","code":"rxgamma(shape, rate = 1, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate gamma variable from threefry generator — rxgamma","text":"shape shape gamma random variable rate alternative way specify scale. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate gamma variable from threefry generator — rxgamma","text":"gamma random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate gamma variable from threefry generator — rxgamma","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate gamma variable from threefry generator — rxgamma","text":"","code":"# \\donttest{  ## Use threefry engine  rxgamma(0.5, n = 10) # with rxgamma you have to explicitly state n #>  [1] 0.1492627910 0.0004773476 0.2923598511 0.0950681735 0.3802674587 #>  [6] 0.6579192476 0.4933942531 1.5417386996 0.1254190514 1.7440363766 rxgamma(5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 4.667288 3.456419 1.734316 3.399774 2.329945 3.257427 4.929922 5.185524 #>  [9] 3.221306 4.644219  rxgamma(1) #> [1] 0.5626083   ## This example uses `rxbeta` directly in the model  rx <- function() {   model({     a <- rxgamma(2)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate geometric variable from threefry generator — rxgeom","title":"Simulate geometric variable from threefry generator — rxgeom","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate geometric variable from threefry generator — rxgeom","text":"","code":"rxgeom(prob, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate geometric variable from threefry generator — rxgeom","text":"prob probability success trial. 0 < prob <= 1. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate geometric variable from threefry generator — rxgeom","text":"geometric random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate geometric variable from threefry generator — rxgeom","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxgeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate geometric variable from threefry generator — rxgeom","text":"","code":"# \\donttest{  ## Use threefry engine  rxgeom(0.5, n = 10) # with rxgeom you have to explicitly state n #>  [1] 0 0 0 0 3 0 3 0 1 0 rxgeom(0.25, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 2 0 4 0 1 1 0 2 0 2  rxgeom(0.75) #> [1] 0   ## This example uses `rxgeom` directly in the model  rx <- function() {   model({     a <- rxgeom(0.24)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Binomial variable from threefry generator — rxnbinom","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"","code":"rxnbinom(size, prob, mu, n = 1L, ncores = 1L)  rxnbinomMu(size, mu, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"size target number successful trials, dispersion     parameter (shape parameter gamma mixing distribution).     Must strictly positive, need integer. prob probability success trial. 0 < prob <= 1. mu alternative parametrization via mean: see ‘Details’. n number observations.  length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"negative binomial random deviates. Note rxbinom2 uses mu parameterization rxbinom uses prob parameterization (mu=size/(prob+size))","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnbinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Binomial variable from threefry generator — rxnbinom","text":"","code":"# \\donttest{ ## Use threefry engine  rxnbinom(10, 0.9, n = 10) # with rxbinom you have to explicitly state n #>  [1] 5 2 0 2 0 1 1 1 0 0 rxnbinom(3, 0.5, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 2 5 3 3 2 3 2 3 1 1  rxnbinom(4, 0.7) #> [1] 3  # use mu parameter rxnbinomMu(40, 40, n=10) #>  [1] 43 27 28 39 43 43 47 36 24 34  ## This example uses `rxbinom` directly in the model  rx <- function() {   model({     a <- rxnbinom(10, 0.5)   }) }  et <- et(1, id = 1:100)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  rx <- function() {   model({     a <- rxnbinomMu(10, 40)   }) }  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnormV.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate random normal variable from threefry generator — rxnormV","title":"Simulate random normal variable from threefry generator — rxnormV","text":"Simulate random normal variable threefry generator","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnormV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate random normal variable from threefry generator — rxnormV","text":"","code":"rxnormV(mean = 0, sd = 1, n = 1L, ncores = 1L)  rxnorm(mean = 0, sd = 1, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnormV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate random normal variable from threefry generator — rxnormV","text":"mean vector means. sd vector standard deviations. n number observations ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnormV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate random normal variable from threefry generator — rxnormV","text":"normal random number deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxnormV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate random normal variable from threefry generator — rxnormV","text":"","code":"# \\donttest{ ## Use threefry engine  rxnorm(n = 10) # with rxnorm you have to explicitly state n #>  [1]  0.172888709  0.284784040 -0.005692539 -0.421214620  0.452990248 #>  [6]  0.012650216 -0.934263347 -1.208389993  0.298874284 -0.397359774 rxnorm(n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1]  0.06786949 -0.28052929 -0.66690901  0.33965344 -1.16260363  0.25713640 #>  [7] -1.12190228  0.79853569 -0.53656934  0.07836036  rxnorm(2, 3) ## The first 2 arguments are the mean and standard deviation #> [1] -0.7994892   ## This example uses `rxnorm` directly in the model  rx <- function() {   model({     a <- rxnorm()   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","title":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","text":"Set function body rxUi object retaining object information (like data)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","text":"","code":"rxode2(x, envir = environment(x)) <- value  # S3 method for class '`function`' rxode2(x, envir = environment(x)) <- value  # Default S3 method rxode2(x, envir = environment(x)) <- value  rxode(x, envir = environment(x)) <- value  RxODE(x, envir = environment(x)) <- value"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","text":"x rxUi object envir environment assignment ocurs value value assigned","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","text":"rxode2 ui/function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the function body of an rxUi object while retaining other object information (like data) — rxode2<-","text":"","code":"one.compartment <- function() {   ini({     tka <- log(1.57); label(\"Ka\")     tcl <- log(2.72); label(\"Cl\")     tv <- log(31.5); label(\"V\")     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  two.compartment <- function() {   ini({     lka <- 0.45 ; label(\"Absorption rate (Ka)\")     lcl <- 1 ; label(\"Clearance (CL)\")     lvc  <- 3 ; label(\"Central volume of distribution (V)\")     lvp  <- 5 ; label(\"Peripheral volume of distribution (Vp)\")     lq  <- 0.1 ; label(\"Intercompartmental clearance (Q)\")     propSd <- 0.5 ; label(\"Proportional residual error (fraction)\")   })   model({     ka <- exp(lka)     cl <- exp(lcl)     vc <- exp(lvc)     vp <- exp(lvp)     q  <- exp(lq)     kel <- cl/vc     k12 <- q/vc     k21 <- q/vp     d/dt(depot) <- -ka*depot     d/dt(central) <-  ka*depot - kel*central - k12*central + k21*peripheral1     d/dt(peripheral1) <- k12*central - k21*peripheral1     cp <- central / vc     cp ~ prop(propSd)   }) }  ui <- rxode2(one.compartment) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments  rxode2(ui) <- two.compartment"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ODE-based model specification — rxode2","title":"Create an ODE-based model specification — rxode2","text":"Create dynamic ODE-based model object suitably translation fast C code","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ODE-based model specification — rxode2","text":"","code":"rxode2(   model,   modName = basename(wd),   wd = getwd(),   filename = NULL,   extraC = NULL,   debug = FALSE,   calcJac = NULL,   calcSens = NULL,   collapseModel = FALSE,   package = NULL,   ...,   linCmtSens = c(\"linCmtA\", \"linCmtB\"),   indLin = FALSE,   verbose = FALSE,   fullPrint = getOption(\"rxode2.fullPrint\", FALSE),   envir = parent.frame() )  RxODE(   model,   modName = basename(wd),   wd = getwd(),   filename = NULL,   extraC = NULL,   debug = FALSE,   calcJac = NULL,   calcSens = NULL,   collapseModel = FALSE,   package = NULL,   ...,   linCmtSens = c(\"linCmtA\", \"linCmtB\"),   indLin = FALSE,   verbose = FALSE,   fullPrint = getOption(\"rxode2.fullPrint\", FALSE),   envir = parent.frame() )  rxode(   model,   modName = basename(wd),   wd = getwd(),   filename = NULL,   extraC = NULL,   debug = FALSE,   calcJac = NULL,   calcSens = NULL,   collapseModel = FALSE,   package = NULL,   ...,   linCmtSens = c(\"linCmtA\", \"linCmtB\"),   indLin = FALSE,   verbose = FALSE,   fullPrint = getOption(\"rxode2.fullPrint\", FALSE),   envir = parent.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ODE-based model specification — rxode2","text":"model ODE model specification.  can : string containing set ordinary differential equations (ODE) expressions defining changes dynamic system. file name ODE system equation contained ODE expression enclosed \\{\\} (see also filename argument). details, see sections “Details” rxode2 Syntax . modName string used model name. string used naming various aspects computations, including generating C symbol names, dynamic libraries, etc. Therefore, necessary modName consists simple ASCII alphanumeric characters starting letter. wd character string working directory create subdirectory according modName. specified, subdirectory named “modName.d” created populated C file, dynamic loading library, plus various working files. missing, files created (removed) temporary directory, rxode2 DLL model created current directory named rx_????_platform, example rx_129f8f97fb94a87ca49ca8dafe691e1e_i386.dll filename file name connection object ODE-based model specification resides. one model filename may specified. extraC Extra c code include model.  can useful specify functions model.  C functions usually take double precision arguments, return double precision values. debug boolean indicating executable compiled verbose debugging information turned . calcJac boolean indicating rxode2 calculate Jacobain according specified ODEs. calcSens boolean indicating rxode2 calculate sensitivities according specified ODEs. collapseModel boolean indicating rxode2 remove LHS variables calculating sensitivities. package Package name pre-compiled binaries. ... ignored arguments. linCmtSens method calculate linCmt() solutions indLin Calculate inductive linearization matrices compile inductive linearization support. verbose TRUE verbose linear compartmental model fullPrint using printf within model, TRUE print every step (except /indLin), otherwise FALSE print calculating d/dt envir environment look R user functions (defaults parent environment)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an ODE-based model specification — rxode2","text":"object (environment) class rxode2 (see Chambers Temple Lang (2001)) consisting following list strings functions:","code":"* `model` a character string holding the source model specification. * `get.modelVars`a function that returns a list with 3 character     vectors, `params`, `state`, and `lhs` of variable names used in the model     specification. These will be output when the model is computed (i.e., the ODE solved by integration).    * `solve`{this function solves (integrates) the ODE. This       is done by passing the code to [rxSolve()].       This is as if you called `rxSolve(rxode2object, ...)`,       but returns a matrix instead of a rxSolve object.        `params`: a numeric named vector with values for every parameter       in the ODE system; the names must correspond to the parameter       identifiers used in the ODE specification;        `events`: an `eventTable` object describing the       input (e.g., doses) to the dynamic system and observation       sampling time points (see  [eventTable()]);        `inits`: a vector of initial values of the state variables       (e.g., amounts in each compartment), and the order in this vector       must be the same as the state variables (e.g., PK/PD compartments);         `stiff`: a logical (`TRUE` by default) indicating whether       the ODE system is stiff or not.        For stiff ODE systems (`stiff = TRUE`), `rxode2` uses       the LSODA (Livermore Solver for Ordinary Differential Equations)       Fortran package, which implements an automatic method switching       for stiff and non-stiff problems along the integration interval,       authored by Hindmarsh and Petzold (2003).        For non-stiff systems (`stiff = FALSE`), `rxode2` uses `DOP853`,       an explicit Runge-Kutta method of order 8(5, 3) of Dormand and Prince       as implemented in C by Hairer and Wanner (1993).        `trans_abs`: a logical (`FALSE` by default) indicating       whether to fit a transit absorption term       (TODO: need further documentation and example);        `atol`: a numeric absolute tolerance (1e-08 by default);        `rtol`: a numeric relative tolerance (1e-06 by default).        The output of \\dQuote{solve} is a matrix with as many rows as there       are sampled time points and as many columns as system variables       (as defined by the ODEs and additional assignments in the rxode2 model           code).}    * `isValid` a function that (naively) checks for model validity,       namely that the C object code reflects the latest model       specification.   * `version` a string with the version of the `rxode2`       object (not the package).   * `dynLoad` a function with one `force = FALSE` argument       that dynamically loads the object code if needed.   * `dynUnload` a function with no argument that unloads       the model object code.   * `delete` removes all created model files, including C and DLL files.       The model object is no longer valid and should be removed, e.g.,       `rm(m1)`.   * `run` deprecated, use `solve`.   * `get.index` deprecated.   * `getObj` internal (not user callable) function."},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an ODE-based model specification — rxode2","text":"Rx name rxode2 meant suggest abbreviation Rx medical prescription, thus suggest package emphasis pharmacometrics modeling, including pharmacokinetics (PK), pharmacodynamics (PD), disease progression, drug-disease modeling, etc. ODE-based model specification may coded inside four places: Inside rxode2({}) block statements:    Inside rxode2(\"\") string statement:    file name loaded rxode2:    model function can parsed rxode2:    block statement, character string text file internal rxode2 compilation manager translates ODE system C, compiles loads R session. call rxode2 produces object class rxode2 consists list-like structure (environment) various member functions. last type model (model function), call rxode2 creates parsed rxode2 ui can translated rxode2 compilation model.   type function required nlmixr2 estimation can extended modified model piping. reason focused documentation. basic model specification consists one statements optionally terminated semi-colons ; optional comments (comments delimited # end--line). block statements set statements delimited curly braces, { ... }. Statements can either assignments, conditional /else /else, loops (can exited break), special statements, printing statements (debugging/testing). Assignment statements can : simple assignments, left hand identifier (.e., variable). includes string assignments special time-derivative assignments, left hand specifies change amount corresponding state variable (compartment) respect time e.g., d/dt(depot): special initial-condition assignments left hand specifies compartment initial condition specified, e.g. depot(0) = 0 special model event changes including bioavailability (f(depot)=1), lag time (alag(depot)=0), modeled rate (rate(depot)=2) modeled duration (dur(depot)=2). example model features event specification modeled infusions rxode2 data specification found rxode2 events vignette. special change point syntax, model times. model times specified mtime(var)=time special Jacobian-derivative assignments, left hand specifies change compartment ode respect variable. example, d/dt(y) = dy, Jacobian compartment can specified df(y)/dy(dy) = 1. may advantage obtaining solution specifying Jacobian stiff ODE systems. However, stiff systems tried LSODA, actually slightly slowed solving. Special string value declarations tell values string variable take within rxode2 solving structure. values cause factor created variable solving rxode2 model. , declared much way R, : labels() <- c(\"a1\", \"a2\"). Note assignment can done =, <- ~. assigning ~ operator, simple assignments time-derivative assignments output. Note rxode2 model functions assignment ~ can also overloaded residual distribution specification. Special statements can : Compartment declaration statements, can change default dosing compartment assumed compartment number(s) well add extra compartment names end (useful multiple-endpoint nlmixr models); specified cmt(compartmentName) Parameter declaration statements, can make sure input parameters certain order instead ordering parameters order parsed. useful keeping parameter order using 2 different ODE models. specified param(par1, par2,...) Variable interpolation statements, tells interpolation specific covariates. include locf(cov1, cov2, ...) last observation carried forward, nocb(cov1, cov2, ...) next observation carried backward, linear(cov1, cov2, ...) linear interpolation midpoint(cov1, cov2, ...) midpoint interpolation. example model shown :   Expressions assignment statements can numeric logical. Numeric expressions can include following numeric operators +, -, *, /, ^ mathematical functions defined C R math libraries (e.g., fabs, exp, log, sin, abs). may also access R’s functions R math libraries, like lgammafn log gamma function. rxode2 syntax case-sensitive, .e., ABC different abc, Abc, ABc, etc.","code":"library(rxode2) mod <- rxode2({   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; }) mod <- rxode2(\"   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; \") writeLines(\"   # simple assignment   C2 <- centr/V2    # time-derivative assignment   d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3; \", \"modelFile.rxode2\") mod <- rxode2(filename='modelFile.rxode2') unlink(\"modelFile.rxode2\") mod <- function() {   model({     # simple assignment     C2 <- centr/V2      # time-derivative assignment     d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3;   }) }  mod <- rxode2(mod) # or simply mod() if the model is at the end of the function  # These model functions often have residual components and initial # (`ini({})`) conditions attached as well. For example the # theophylline model can be written as:  one.compartment <- function() {   ini({     tka <- 0.45 # Log Ka     tcl <- 1 # Log Cl     tv <- 3.45    # Log V     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) }  # after parsing the model mod <- one.compartment() mod$simulationModel  # or mod$simulationIniModel # simple assignment    C2 <- centr/V2     # time-derivative assignment    d/dt(centr) <- F*KA*depot - CL*C2 - Q*C2 + Q*C3;"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"identifiers","dir":"Reference","previous_headings":"","what":"Identifiers","title":"Create an ODE-based model specification — rxode2","text":"Like R, Identifiers (variable names) may consist one alphanumeric, underscore _ period . characters, first character digit underscore _. Identifiers model specification can refer : State variables dynamic system (e.g., compartments pharmacokinetics model). Implied input variable, t (time), tlast (last time point), podo (oral dose, undocumented case absorption transit models). Special constants like pi R’s predefined constants. Model parameters (e.g., ka rate absorption, CL clearance, etc.) Others, created assignments part model specification; referred LHS (left-hand side) variable. Currently, rxode2 modeling language recognizes system state variables “parameters”, thus, values need passed R ODE model (e.g., age) either passed params argument integrator function rxSolve() supplied event data-set. certain variable names rxode2 event tables. avoid confusion, following event table-related items assigned, used state can accessed rxode2 code: cmt dvid addl ss amt dur rate Rprintf print printf id However following variables used model specification: evid ii Sometimes rxode2 generates variables fed back rxode2. Similarly, nlmixr2 generates variables used nlmixr estimation simulation. variables start either rx nlmixr prefixes. avoid problems, suggested use variables starting either rx nlmixr prefixes.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"logical-operators","dir":"Reference","previous_headings":"","what":"Logical Operators","title":"Create an ODE-based model specification — rxode2","text":"Logical operators support standard R operators ==, != >= <= > <. Like R can () () statements, ifelse() expressions. Additionally can standard assignment. instance, following valid:   Notice can also use character expressions comparisons. convenience comes cost since character comparisons slower numeric expressions. Unlike R, .numeric .integer logical statements needed, cause syntax error try use function.","code":"cov1 = covm*(sexf == \"female\") + covm*(sexf != \"female\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"supported-functions","dir":"Reference","previous_headings":"","what":"Supported functions","title":"Create an ODE-based model specification — rxode2","text":"supported functions rxode2 can seen rxSupportedFuns(). brief description built-functions following table: Note lag(cmt) = equivalent alag(cmt) = = lag(wt)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"reserved-keywords","dir":"Reference","previous_headings":"","what":"Reserved keywords","title":"Create an ODE-based model specification — rxode2","text":"reserved keywords rxode2 model. following table: Note rxFlag always output 11 calc_lhs since final variables calculated, though can tweak test certain parts rxode2 using flag.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"residual-functions-when-using-rxode-functions","dir":"Reference","previous_headings":"","what":"Residual functions when using rxode2 functions","title":"Create an ODE-based model specification — rxode2","text":"addition ~ hiding output certain types output, also used specify residual output endpoint input rxode2 model function (includes residual model({}) block). specifications form:   Indicating variable var variable represents individual central tendencies model also represents compartment specification data-set. can also change compartment name using | syntax, :   case var represents central tendency cmt represents compartment dvid specification.","code":"var ~ add(add.sd) var ~ add(add.sd) | cmt"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"transformations","dir":"Reference","previous_headings":"","what":"Transformations","title":"Create an ODE-based model specification — rxode2","text":"normal related distributions, can apply transformation sides using keywords/functions apply transformations. default likelihood transformations calculated untransformed scale. bounded variables like logit-normal probit-normal low high values defaulted 0 1 missing. models wish proportional model one transformation can replace standard deviation NA allow transformations, lnorm(), probitNorm() logitNorm() can combined variance stabilizing yeoJohnson() transformation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"normal-and-t-related-distributions","dir":"Reference","previous_headings":"","what":"Normal and t-related distributions","title":"Create an ODE-based model specification — rxode2","text":"normal t-related distributions, wanted keep ability use skewed distributions additive proportional t/cauchy-space, distributions specified differently comparison supported distributions within nlmixr2: Note normal t-related distributions nlmixr2 calculate cwres npde normal assumption help assess goodness fit model. Also note +dnorm() mostly testing purposes slow estimation procedure nlmixr2. suggest adding (except explicit testing). multiple endpoint models mix non-normal normal distributions, whole problem shifted log-likelihood method estimation nlmixr2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"notes-on-additive-proportional-models","dir":"Reference","previous_headings":"","what":"Notes on additive + proportional models","title":"Create an ODE-based model specification — rxode2","text":"two different ways specify additive proportional models, call combined1 combined2, way Monolix calls two distributions (avoid software differences naming). first, combined1, assumes additive proportional differences standard deviation scale, : y=f+(+b* f^c)*err second, combined2, assumes additive proportional differences combined variance scale: y=f+[sqrt(^2+b^2 *f^(2c))]*err default nlmixr2/rxode2 otherwise specified combined2 since mirrors adding 2 normal distributions statistics add variances (standard deviations). However, combined1 can describe data possibly even better combined2 possible options rxode2/nlmixr2.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"distributions-of-known-likelihoods","dir":"Reference","previous_headings":"","what":"Distributions of known likelihoods","title":"Create an ODE-based model specification — rxode2","text":"residuals related normal, t-distribution cauchy, often residual specification form:   compartment specification left handed side specification. generalized likelihood can specify:","code":"cmt ~ dbeta(alpha, beta) ll(cmt) ~ llik specification"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"ordinal-likelihoods","dir":"Reference","previous_headings":"","what":"Ordinal likelihoods","title":"Create an ODE-based model specification — rxode2","text":"Finally, ordinal likelihoods/simulations can specified 2 ways. first :   err represents compartment p0 probability specific category: model ensure sum p values less 1. Additionally can write arbitrary number categories ordinal model described . seems little p0 probability category 1 sometimes scores non-whole numbers. can modeled follows:   numeric categories specified explicitly, probabilities remain :","code":"err ~ c(p0, p1, p2) err ~ c(p0=0, p1=1, p2=2, 3)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"general-table-of-supported-residual-distributions","dir":"Reference","previous_headings":"","what":"General table of supported residual distributions","title":"Create an ODE-based model specification — rxode2","text":"general supported following table (available rxode2::rxResidualError)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"creating-rxode-models","dir":"Reference","previous_headings":"","what":"Creating rxode2 models","title":"Create an ODE-based model specification — rxode2","text":"NA","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"note-on-strings-in-rxode-","dir":"Reference","previous_headings":"","what":"Note on strings in rxode2","title":"Create an ODE-based model specification — rxode2","text":"Strings converted double values inside rxode2, hence can refer integer corresponding string value string value . covariates calculated fly based data likely try , though aware. strings defined model, fixed used. example:   also replaced :   Since \"Med\" already defined wanted can pre-declare levels (order) give better control :   can see number changed since declaration change numbers variable tAPGAR. levels() statements need declared variable occurs ensure numbering consistent declared.","code":"if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- \"High\"   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- \"Low\"   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- \"Med\"   } else {     tAPGAR<- \"Med\"   } if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- \"High\"   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- \"Low\"   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- \"Med\"   } else {     tAPGAR<- 3   } levels(tAPGAR) <- c(\"Med\", \"Low\", \"High\") if (APGAR == 10 || APGAR == 8 || APGAR == 9) {     tAPGAR <- 3   } else if (APGAR == 1 || APGAR == 2 || APGAR == 3) {     tAPGAR <- 2   } else if (APGAR == 4 || APGAR == 5 || APGAR == 6 || APGAR == 7) {     tAPGAR <- 1   } else {     tAPGAR<- 1   }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an ODE-based model specification — rxode2","text":"Chamber, J. M. Temple Lang, D. (2001) Object Oriented Programming R. R News, Vol. 1, . 3, September 2001. https://cran.r-project.org/doc/Rnews/Rnews_2001-3.pdf. Hindmarsh, . C. ODEPACK, Systematized Collection ODE Solvers. Scientific Computing, R. S. Stepleman et al. (Eds.), North-Holland, Amsterdam, 1983, pp. 55-64. Petzold, L. R. Automatic Selection Methods Solving Stiff Nonstiff Systems Ordinary Differential Equations. Siam J. Sci. Stat. Comput. 4 (1983), pp. 136-148. Hairer, E., Norsett, S. P., Wanner, G. Solving ordinary differential equations , nonstiff problems. 2nd edition, Springer Series Computational Mathematics, Springer-Verlag (1993). Plevyak, J. dparser, https://dparser.sourceforge.net/. Web. 12 Oct. 2015.","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an ODE-based model specification — rxode2","text":"Melissa Hallow, Wenping Wang Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an ODE-based model specification — rxode2","text":"","code":"# \\donttest{  mod <- function() {   ini({     KA   <- .291     CL   <- 18.6     V2   <- 40.2     Q    <- 10.5     V3   <- 297.0     Kin  <- 1.0     Kout <- 1.0     EC50 <- 200.0   })   model({     # A 4-compartment model, 3 PK and a PD (effect) compartment     # (notice state variable names 'depot', 'centr', 'peri', 'eff')     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot;     d/dt(centr) <- KA*depot - CL*C2 - Q*C2 + Q*C3;     d/dt(peri)  <-                    Q*C2 - Q*C3;     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff;     eff(0)      <- 1   }) }  m1 <- rxode2(mod) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments print(m1) #>  ── rxode2-based free-form 4-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>      KA      CL      V2       Q      V3     Kin    Kout    EC50  #>   0.291  18.600  40.200  10.500 297.000   1.000   1.000 200.000  #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2            centr #> 3                  3             peri #> 4                  4              eff #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         KA <- 0.291 #>         CL <- 18.6 #>         V2 <- 40.2 #>         Q <- 10.5 #>         V3 <- 297 #>         Kin <- 1 #>         Kout <- 1 #>         EC50 <- 200 #>     }) #>     model({ #>         C2 <- centr/V2 #>         C3 <- peri/V3 #>         d/dt(depot) <- -KA * depot #>         d/dt(centr) <- KA * depot - CL * C2 - Q * C2 + Q * C3 #>         d/dt(peri) <- Q * C2 - Q * C3 #>         d/dt(eff) <- Kin - Kout * (1 - C2/(EC50 + C2)) * eff #>         eff(0) <- 1 #>     }) #> }  # Step 2 - Create the model input as an EventTable, # including dosing and observation (sampling) events  # QD (once daily) dosing for 5 days.  qd <- et(amountUnits = \"ug\", timeUnits = \"hours\") %>%   et(amt = 10000, addl = 4, ii = 24)  # Sample the system hourly during the first day, every 8 hours # then after qd <- qd %>% et(0:24) %>%   et(from = 24 + 8, to = 5 * 24, by = 8)  # Step 3 - solve the system  qd.cp <- rxSolve(m1, qd) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  head(qd.cp) #>    time       C2        C3     depot    centr      peri      eff #> 1 0 [h]  0.00000 0.0000000 10000.000    0.000    0.0000 1.000000 #> 2 1 [h] 43.99334 0.9113641  7475.157 1768.532  270.6751 1.083968 #> 3 2 [h] 54.50866 2.6510696  5587.797 2191.248  787.3677 1.179529 #> 4 3 [h] 51.65163 4.4243597  4176.966 2076.396 1314.0348 1.227523 #> 5 4 [h] 44.37513 5.9432612  3122.347 1783.880 1765.1486 1.233503 #> 6 5 [h] 36.46382 7.1389804  2334.004 1465.845 2120.2772 1.214084  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal translation to get model variables list — rxode2parse","title":"Internal translation to get model variables list — rxode2parse","text":"Internal translation get model variables list","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal translation to get model variables list — rxode2parse","text":"","code":"rxode2parse(   model,   linear = FALSE,   linCmtSens = c(\"linCmtA\", \"linCmtB\"),   verbose = FALSE,   code = NULL,   envir = parent.frame() )"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal translation to get model variables list — rxode2parse","text":"model Model (either file name string) linear boolean indicating linear compartment model generated linCmt() (default FALSE) linCmtSens Linear compartment model sensitivity type verbose boolean indicating type model detected linCmt() parsing code file name c code written (testing purposes mostly, needs rxode2 anything fancy) envir environment look R user functions (defaults parent environment)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal translation to get model variables list — rxode2parse","text":"rxModelVars object model variables rxode2 syntax expression","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal translation to get model variables list — rxode2parse","text":"","code":"rxode2parse(\"a=3\") #>   #> rxode2 model variables (see str to see all variables) #> value$params: a"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"Control packages loaded rxode2 model dll loaded","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"","code":"rxode2parseGetPackagesToLoad()  rxode2parseAssignPackagesToLoad(pkgs = rxode2parseGetPackagesToLoad())"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"pkgs packages make sure loaded every time load rxode2 model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"List packages load","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"Matthew Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPackagesToLoad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control the packages that are loaded when a rxode2 model dll is loaded — rxode2parseGetPackagesToLoad","text":"","code":"rxode2parseGetPackagesToLoad() #> [1] \"rxode2ll\" \"lotri\"     rxode2parseAssignPackagesToLoad(rxode2parseGetPackagesToLoad()) #> [1] \"rxode2ll\" \"lotri\""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":null,"dir":"Reference","previous_headings":"","what":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"sets function gets currently assigned function pointer assignments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"","code":"rxode2parseAssignPointerTranslation(var)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"var List packages pointer assignment called.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"Nothing, called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignPointerTranslation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This sets function gets the currently assigned function pointer assignments — rxode2parseAssignPointerTranslation","text":"","code":"rxode2parseAssignPointerTranslation(\"rxode2\")"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":null,"dir":"Reference","previous_headings":"","what":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"assigns c level linkages roxde2 model","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"","code":"rxode2parseAssignTranslation(df)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"df data frame containing character column names rxFun, fun, type, package, packageFun integer column names argMin argMax","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"Nothing called side effects","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseAssignTranslation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This assigns the c level linkages for a roxde2 model — rxode2parseAssignTranslation","text":"","code":"rxode2parseAssignTranslation(rxode2parseGetTranslation())"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseD.html","id":null,"dir":"Reference","previous_headings":"","what":"This gives the derivative table for rxode2 — rxode2parseD","title":"This gives the derivative table for rxode2 — rxode2parseD","text":"help allow registration functions rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This gives the derivative table for rxode2 — rxode2parseD","text":"","code":"rxode2parseD()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This gives the derivative table for rxode2 — rxode2parseD","text":"Derivative table environment rxode2","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This gives the derivative table for rxode2 — rxode2parseD","text":"environment derivative table; example: Derivative(f(,b,c), ) = fa() Derivative(f(,b,c), b) = fb() Derivative(f(,b,c), c) = fc() derivative table f : assign(\"f\", list(fa(,b,c), fb(,b,c), fc(,b,c)), rxode2parseD()) fa translates arguments derivative respect fb translates arguments derivative respect b list NULL rxode2 know take derivative respect argument. list shorter length arguments argument derivative arguments specified taken.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This gives the derivative table for rxode2 — rxode2parseD","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetPointerAssignment.html","id":null,"dir":"Reference","previous_headings":"","what":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","title":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","text":"function gets currently assigned function pointer assignments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetPointerAssignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","text":"","code":"rxode2parseGetPointerAssignment()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetPointerAssignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","text":"currently assigned pointer assignments","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetPointerAssignment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetPointerAssignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function gets the currently assigned function pointer assignments — rxode2parseGetPointerAssignment","text":"","code":"rxode2parseGetTranslation() #>                   rxFun                  fun                  type  package #> 1               linCmtA              linCmtA             linCmtA_p   rxode2 #> 2               linCmtB              linCmtB             linCmtB_p   rxode2 #> 3                rxnorm               rxnorm           rxode2i_fn2   rxode2 #> 4               rxbinom              rxbinom       rxode2i_rxbinom   rxode2 #> 5              rxnbinom             rxnbinom       rxode2i_rxbinom   rxode2 #> 6            rxnbinomMu           rxnbinomMu       rxode2i_rxbinom   rxode2 #> 7              rxcauchy             rxcauchy           rxode2i_fn2   rxode2 #> 8               rxchisq              rxchisq            rxode2i_fn   rxode2 #> 9                 rxexp                rxexp            rxode2i_fn   rxode2 #> 10                  rxf                  rxf           rxode2i_fn2   rxode2 #> 11               rxgeom               rxgeom           rxode2i_ifn   rxode2 #> 12              rxgamma              rxgamma           rxode2i_fn2   rxode2 #> 13               rxbeta               rxbeta           rxode2i_fn2   rxode2 #> 14               rxpois               rxpois           rxode2i_ifn   rxode2 #> 15                 rxt_                 rxt_            rxode2i_fn   rxode2 #> 16               rxunif               rxunif           rxode2i_fn2   rxode2 #> 17            rxweibull            rxweibull           rxode2i_fn2   rxode2 #> 18               rinorm               rinorm          rxode2i2_fn2   rxode2 #> 19              ribinom              ribinom      rxode2i2_ribinom   rxode2 #> 20             rinbinom             rinbinom      rxode2i2_ribinom   rxode2 #> 21           rinbinomMu           rinbinomMu      rxode2i2_ribinom   rxode2 #> 22             ricauchy             ricauchy          rxode2i2_fn2   rxode2 #> 23              richisq              richisq           rxode2i2_fn   rxode2 #> 24                riexp                riexp           rxode2i2_fn   rxode2 #> 25                  rif                  rif          rxode2i2_fn2   rxode2 #> 26               rigeom               rigeom          rxode2i2_ifn   rxode2 #> 27              rigamma              rigamma          rxode2i2_fn2   rxode2 #> 28               ribeta               ribeta          rxode2i2_fn2   rxode2 #> 29               ripois               ripois          rxode2i2_ifn   rxode2 #> 30                 rit_                 rit_           rxode2i2_fn   rxode2 #> 31               riunif               riunif          rxode2i2_fn2   rxode2 #> 32            riweibull            riweibull          rxode2i2_fn2   rxode2 #> 33                 ReLU                 ReLU             rxode2_fn   rxode2 #> 34                dReLU                dReLU             rxode2_fn   rxode2 #> 35                 GELU                 GELU             rxode2_fn   rxode2 #> 36                dGELU                dGELU             rxode2_fn   rxode2 #> 37               d2GELU               d2GELU             rxode2_fn   rxode2 #> 38               d3GELU               d3GELU             rxode2_fn   rxode2 #> 39               d4GELU               d4GELU             rxode2_fn   rxode2 #> 40             softplus             softplus             rxode2_fn   rxode2 #> 41            dsoftplus            dsoftplus             rxode2_fn   rxode2 #> 42           d2softplus           d2softplus             rxode2_fn   rxode2 #> 43           d3softplus           d3softplus             rxode2_fn   rxode2 #> 44           d4softplus           d4softplus             rxode2_fn   rxode2 #> 45                 SELU                 SELU             rxode2_fn   rxode2 #> 46                dSELU                dSELU             rxode2_fn   rxode2 #> 47                lReLU                lReLU             rxode2_fn   rxode2 #> 48               dlReLU               dlReLU             rxode2_fn   rxode2 #> 49                Swish                Swish             rxode2_fn   rxode2 #> 50               dSwish               dSwish             rxode2_fn   rxode2 #> 51                PReLU                PReLU            rxode2_fn2   rxode2 #> 52               dPReLU               dPReLU            rxode2_fn2   rxode2 #> 53              dPReLUa              dPReLUa            rxode2_fn2   rxode2 #> 54             dPReLUa1             dPReLUa1            rxode2_fn2   rxode2 #> 55                  ELU                  ELU            rxode2_fn2   rxode2 #> 56                 dELU                 dELU            rxode2_fn2   rxode2 #> 57                d2ELU                d2ELU            rxode2_fn2   rxode2 #> 58               d2aELU               d2aELU            rxode2_fn2   rxode2 #> 59                dELUa                dELUa            rxode2_fn2   rxode2 #> 60               d2ELUa               d2ELUa            rxode2_fn2   rxode2 #> 61                  phi                  phi             rxode2_fn   rxode2 #> 62               gammap               gammap            rxode2_fn2   rxode2 #> 63               gammaq               gammaq            rxode2_fn2   rxode2 #> 64            gammapInv            gammapInv            rxode2_fn2   rxode2 #> 65           gammapInva           gammapInva            rxode2_fn2   rxode2 #> 66            gammaqInv            gammaqInv            rxode2_fn2   rxode2 #> 67           gammaqInva           gammaqInva            rxode2_fn2   rxode2 #> 68           uppergamma           uppergamma            rxode2_fn2   rxode2 #> 69           lowergamma           lowergamma            rxode2_fn2   rxode2 #> 70            gammapDer            gammapDer            rxode2_fn2   rxode2 #> 71                logit                logit            rxode2_fn3   rxode2 #> 72                expit                expit            rxode2_fn3   rxode2 #> 73               simeta               simeta               _simfun   rxode2 #> 74               simeps               simeps               _simfun   rxode2 #> 75             llikNorm            _llikNorm    rxode2_llikNormFun rxode2ll #> 76        llikNormDmean       _llikNormDmean    rxode2_llikNormFun rxode2ll #> 77          llikNormDsd         _llikNormDsd    rxode2_llikNormFun rxode2ll #> 78             llikPois            _llikPois    rxode2_llikPoisFun rxode2ll #> 79      llikPoisDlambda     _llikPoisDlambda    rxode2_llikPoisFun rxode2ll #> 80            llikBinom           _llikBinom   rxode2_llikBinomFun rxode2ll #> 81       llikBinomDprob      _llikBinomDprob   rxode2_llikBinomFun rxode2ll #> 82           llikNbinom          _llikNbinom   rxode2_llikBinomFun rxode2ll #> 83      llikNbinomDprob     _llikNbinomDprob   rxode2_llikBinomFun rxode2ll #> 84         llikNbinomMu        _llikNbinomMu   rxode2_llikBinomFun rxode2ll #> 85      llikNbinomMuDmu     _llikNbinomMuDmu   rxode2_llikBinomFun rxode2ll #> 86             llikBeta            _llikBeta    rxode2_llikBetaFun rxode2ll #> 87      llikBetaDshape1     _llikBetaDshape1    rxode2_llikBetaFun rxode2ll #> 88      llikBetaDshape2     _llikBetaDshape2    rxode2_llikBetaFun rxode2ll #> 89                llikT               _llikT       rxode2_llikTFun rxode2ll #> 90             llikTDdf            _llikTDdf       rxode2_llikTFun rxode2ll #> 91           llikTDmean          _llikTDmean       rxode2_llikTFun rxode2ll #> 92             llikTDsd            _llikTDsd       rxode2_llikTFun rxode2ll #> 93            llikChisq           _llikChisq   rxode2_llikChisqFun rxode2ll #> 94         llikChisqDdf        _llikChisqDdf   rxode2_llikChisqFun rxode2ll #> 95              llikExp             _llikExp     rxode2_llikExpFun rxode2ll #> 96         llikExpDrate        _llikExpDrate     rxode2_llikExpFun rxode2ll #> 97                llikF               _llikF       rxode2_llikFFun rxode2ll #> 98            llikFDdf1           _llikFDdf1       rxode2_llikFFun rxode2ll #> 99            llikFDdf2           _llikFDdf2       rxode2_llikFFun rxode2ll #> 100            llikGeom            _llikGeom    rxode2_llikGeomFun rxode2ll #> 101          llikGeomDp          _llikGeomDp    rxode2_llikGeomFun rxode2ll #> 102            llikUnif            _llikUnif    rxode2_llikUnifFun rxode2ll #> 103      llikUnifDalpha      _llikUnifDalpha    rxode2_llikUnifFun rxode2ll #> 104       llikUnifDbeta       _llikUnifDbeta    rxode2_llikUnifFun rxode2ll #> 105         llikWeibull         _llikWeibull rxode2_llikWeibullFun rxode2ll #> 106   llikWeibullDshape   _llikWeibullDshape rxode2_llikWeibullFun rxode2ll #> 107   llikWeibullDscale   _llikWeibullDscale rxode2_llikWeibullFun rxode2ll #> 108           llikGamma           _llikGamma   rxode2_llikGammaFun rxode2ll #> 109     llikGammaDshape     _llikGammaDshape   rxode2_llikGammaFun rxode2ll #> 110      llikGammaDrate      _llikGammaDrate   rxode2_llikGammaFun rxode2ll #> 111          llikCauchy          _llikCauchy  rxode2_llikCauchyFun rxode2ll #> 112 llikCauchyDlocation _llikCauchyDlocation  rxode2_llikCauchyFun rxode2ll #> 113    llikCauchyDscale    _llikCauchyDscale  rxode2_llikCauchyFun rxode2ll #>                packageFun argMin argMax threadSafe #> 1                 linCmtA     14     14          1 #> 2                 linCmtB     15     15          1 #> 3                  rxnorm     NA     NA          1 #> 4                 rxbinom     NA     NA          1 #> 5                rxnbinom     NA     NA          1 #> 6              rxnbinomMu     NA     NA          1 #> 7                rxcauchy     NA     NA          1 #> 8                 rxchisq     NA     NA          1 #> 9                   rxexp     NA     NA          1 #> 10                    rxf     NA     NA          1 #> 11                 rxgeom     NA     NA          1 #> 12                rxgamma     NA     NA          1 #> 13                 rxbeta     NA     NA          1 #> 14                 rxpois     NA     NA          1 #> 15                   rxt_     NA     NA          1 #> 16                 rxunif     NA     NA          1 #> 17              rxweibull     NA     NA          1 #> 18                 rinorm     NA     NA          1 #> 19                ribinom     NA     NA          1 #> 20               rinbinom     NA     NA          1 #> 21             rinbinomMu     NA     NA          1 #> 22               ricauchy     NA     NA          1 #> 23                richisq     NA     NA          1 #> 24                  riexp     NA     NA          1 #> 25                    rif     NA     NA          1 #> 26                 rigeom     NA     NA          1 #> 27                rigamma     NA     NA          1 #> 28                 ribeta     NA     NA          1 #> 29                 ripois     NA     NA          1 #> 30                   rit_     NA     NA          1 #> 31                 riunif     NA     NA          1 #> 32              riweibull     NA     NA          1 #> 33                   ReLU      1      1          1 #> 34                  dReLU      1      1          1 #> 35                   GELU      1      1          1 #> 36                  dGELU      1      1          1 #> 37                 d2GELU      1      1          1 #> 38                 d3GELU      1      1          1 #> 39                 d4GELU      1      1          1 #> 40               softplus      1      1          1 #> 41              dsoftplus      1      1          1 #> 42             d2softplus      1      1          1 #> 43             d3softplus      1      1          1 #> 44             d4softplus      1      1          1 #> 45                   SELU      1      1          1 #> 46                  dSELU      1      1          1 #> 47                  lReLU      1      1          1 #> 48                 dlReLU      1      1          1 #> 49                  Swish      1      1          1 #> 50                 dSwish      1      1          1 #> 51                  PReLU      2      2          1 #> 52                 dPReLU      2      2          1 #> 53                dPReLUa      2      2          1 #> 54               dPReLUa1      2      2          1 #> 55                    ELU      2      2          1 #> 56                   dELU      2      2          1 #> 57                  d2ELU      2      2          1 #> 58                 d2aELU      2      2          1 #> 59                  dELUa      2      2          1 #> 60                 d2ELUa      2      2          1 #> 61                    phi     NA     NA          1 #> 62                 gammap      2      2          1 #> 63                 gammaq      2      2          1 #> 64              gammapInv      2      2          1 #> 65             gammapInva      2      2          1 #> 66              gammaqInv      2      2          1 #> 67             gammaqInva      2      2          1 #> 68             uppergamma      2      2          1 #> 69             lowergamma      2      2          1 #> 70              gammapDer      2      2          1 #> 71                  logit     NA     NA          1 #> 72                  expit     NA     NA          1 #> 73                 simeta     NA     NA          1 #> 74                 simeps     NA     NA          1 #> 75             rxLlikNorm      3      3          1 #> 76        rxLlikNormDmean      3      3          1 #> 77          rxLlikNormDsd      3      3          1 #> 78             rxLlikPois      2      2          1 #> 79      rxLlikPoisDlambda      2      2          1 #> 80            rxLlikBinom      3      3          1 #> 81       rxLlikBinomDprob      3      3          1 #> 82           rxLlikNbinom      3      3          1 #> 83      rxLlikNbinomDprob      3      3          1 #> 84         rxLlikNbinomMu      3      3          1 #> 85      rxLlikNbinomMuDmu      3      3          1 #> 86             rxLlikBeta      3      3          1 #> 87      rxLlikBetaDshape1      3      3          1 #> 88      rxLlikBetaDshape2      3      3          1 #> 89                rxLlikT      4      4          1 #> 90             rxLlikTDdf      4      4          1 #> 91           rxLlikTDmean      4      4          1 #> 92             rxLlikTDsd      4      4          1 #> 93            rxLlikChisq      2      2          1 #> 94         rxLlikChisqDdf      2      2          1 #> 95              rxLlikExp      2      2          1 #> 96         rxLlikExpDrate      2      2          1 #> 97                rxLlikF      3      3          1 #> 98            rxLlikFDdf1      3      3          1 #> 99            rxLlikFDdf2      3      3          1 #> 100            rxLlikGeom      2      2          1 #> 101          rxLlikGeomDp     NA     NA          1 #> 102            rxLlikUnif      3      3          1 #> 103      rxLlikUnifDalpha      3      3          1 #> 104       rxLlikUnifDbeta      3      3          1 #> 105         rxLlikWeibull      3      3          1 #> 106   rxLlikWeibullDshape      3      3          1 #> 107   rxLlikWeibullDscale      3      3          1 #> 108           rxLlikGamma      3      3          1 #> 109     rxLlikGammaDshape      3      3          1 #> 110      rxLlikGammaDrate      3      3          1 #> 111          rxLlikCauchy      3      3          1 #> 112 rxLlikCauchyDlocation      3      3          1 #> 113    rxLlikCauchyDscale      3      3          1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetTranslation.html","id":null,"dir":"Reference","previous_headings":"","what":"This function gets the currently assigned translations — rxode2parseGetTranslation","title":"This function gets the currently assigned translations — rxode2parseGetTranslation","text":"function gets currently assigned translations","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetTranslation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function gets the currently assigned translations — rxode2parseGetTranslation","text":"","code":"rxode2parseGetTranslation()"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetTranslation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function gets the currently assigned translations — rxode2parseGetTranslation","text":"currently assigned translations","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetTranslation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function gets the currently assigned translations — rxode2parseGetTranslation","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxode2parseGetTranslation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function gets the currently assigned translations — rxode2parseGetTranslation","text":"","code":"rxode2parseGetTranslation() #>                   rxFun                  fun                  type  package #> 1               linCmtA              linCmtA             linCmtA_p   rxode2 #> 2               linCmtB              linCmtB             linCmtB_p   rxode2 #> 3                rxnorm               rxnorm           rxode2i_fn2   rxode2 #> 4               rxbinom              rxbinom       rxode2i_rxbinom   rxode2 #> 5              rxnbinom             rxnbinom       rxode2i_rxbinom   rxode2 #> 6            rxnbinomMu           rxnbinomMu       rxode2i_rxbinom   rxode2 #> 7              rxcauchy             rxcauchy           rxode2i_fn2   rxode2 #> 8               rxchisq              rxchisq            rxode2i_fn   rxode2 #> 9                 rxexp                rxexp            rxode2i_fn   rxode2 #> 10                  rxf                  rxf           rxode2i_fn2   rxode2 #> 11               rxgeom               rxgeom           rxode2i_ifn   rxode2 #> 12              rxgamma              rxgamma           rxode2i_fn2   rxode2 #> 13               rxbeta               rxbeta           rxode2i_fn2   rxode2 #> 14               rxpois               rxpois           rxode2i_ifn   rxode2 #> 15                 rxt_                 rxt_            rxode2i_fn   rxode2 #> 16               rxunif               rxunif           rxode2i_fn2   rxode2 #> 17            rxweibull            rxweibull           rxode2i_fn2   rxode2 #> 18               rinorm               rinorm          rxode2i2_fn2   rxode2 #> 19              ribinom              ribinom      rxode2i2_ribinom   rxode2 #> 20             rinbinom             rinbinom      rxode2i2_ribinom   rxode2 #> 21           rinbinomMu           rinbinomMu      rxode2i2_ribinom   rxode2 #> 22             ricauchy             ricauchy          rxode2i2_fn2   rxode2 #> 23              richisq              richisq           rxode2i2_fn   rxode2 #> 24                riexp                riexp           rxode2i2_fn   rxode2 #> 25                  rif                  rif          rxode2i2_fn2   rxode2 #> 26               rigeom               rigeom          rxode2i2_ifn   rxode2 #> 27              rigamma              rigamma          rxode2i2_fn2   rxode2 #> 28               ribeta               ribeta          rxode2i2_fn2   rxode2 #> 29               ripois               ripois          rxode2i2_ifn   rxode2 #> 30                 rit_                 rit_           rxode2i2_fn   rxode2 #> 31               riunif               riunif          rxode2i2_fn2   rxode2 #> 32            riweibull            riweibull          rxode2i2_fn2   rxode2 #> 33                 ReLU                 ReLU             rxode2_fn   rxode2 #> 34                dReLU                dReLU             rxode2_fn   rxode2 #> 35                 GELU                 GELU             rxode2_fn   rxode2 #> 36                dGELU                dGELU             rxode2_fn   rxode2 #> 37               d2GELU               d2GELU             rxode2_fn   rxode2 #> 38               d3GELU               d3GELU             rxode2_fn   rxode2 #> 39               d4GELU               d4GELU             rxode2_fn   rxode2 #> 40             softplus             softplus             rxode2_fn   rxode2 #> 41            dsoftplus            dsoftplus             rxode2_fn   rxode2 #> 42           d2softplus           d2softplus             rxode2_fn   rxode2 #> 43           d3softplus           d3softplus             rxode2_fn   rxode2 #> 44           d4softplus           d4softplus             rxode2_fn   rxode2 #> 45                 SELU                 SELU             rxode2_fn   rxode2 #> 46                dSELU                dSELU             rxode2_fn   rxode2 #> 47                lReLU                lReLU             rxode2_fn   rxode2 #> 48               dlReLU               dlReLU             rxode2_fn   rxode2 #> 49                Swish                Swish             rxode2_fn   rxode2 #> 50               dSwish               dSwish             rxode2_fn   rxode2 #> 51                PReLU                PReLU            rxode2_fn2   rxode2 #> 52               dPReLU               dPReLU            rxode2_fn2   rxode2 #> 53              dPReLUa              dPReLUa            rxode2_fn2   rxode2 #> 54             dPReLUa1             dPReLUa1            rxode2_fn2   rxode2 #> 55                  ELU                  ELU            rxode2_fn2   rxode2 #> 56                 dELU                 dELU            rxode2_fn2   rxode2 #> 57                d2ELU                d2ELU            rxode2_fn2   rxode2 #> 58               d2aELU               d2aELU            rxode2_fn2   rxode2 #> 59                dELUa                dELUa            rxode2_fn2   rxode2 #> 60               d2ELUa               d2ELUa            rxode2_fn2   rxode2 #> 61                  phi                  phi             rxode2_fn   rxode2 #> 62               gammap               gammap            rxode2_fn2   rxode2 #> 63               gammaq               gammaq            rxode2_fn2   rxode2 #> 64            gammapInv            gammapInv            rxode2_fn2   rxode2 #> 65           gammapInva           gammapInva            rxode2_fn2   rxode2 #> 66            gammaqInv            gammaqInv            rxode2_fn2   rxode2 #> 67           gammaqInva           gammaqInva            rxode2_fn2   rxode2 #> 68           uppergamma           uppergamma            rxode2_fn2   rxode2 #> 69           lowergamma           lowergamma            rxode2_fn2   rxode2 #> 70            gammapDer            gammapDer            rxode2_fn2   rxode2 #> 71                logit                logit            rxode2_fn3   rxode2 #> 72                expit                expit            rxode2_fn3   rxode2 #> 73               simeta               simeta               _simfun   rxode2 #> 74               simeps               simeps               _simfun   rxode2 #> 75             llikNorm            _llikNorm    rxode2_llikNormFun rxode2ll #> 76        llikNormDmean       _llikNormDmean    rxode2_llikNormFun rxode2ll #> 77          llikNormDsd         _llikNormDsd    rxode2_llikNormFun rxode2ll #> 78             llikPois            _llikPois    rxode2_llikPoisFun rxode2ll #> 79      llikPoisDlambda     _llikPoisDlambda    rxode2_llikPoisFun rxode2ll #> 80            llikBinom           _llikBinom   rxode2_llikBinomFun rxode2ll #> 81       llikBinomDprob      _llikBinomDprob   rxode2_llikBinomFun rxode2ll #> 82           llikNbinom          _llikNbinom   rxode2_llikBinomFun rxode2ll #> 83      llikNbinomDprob     _llikNbinomDprob   rxode2_llikBinomFun rxode2ll #> 84         llikNbinomMu        _llikNbinomMu   rxode2_llikBinomFun rxode2ll #> 85      llikNbinomMuDmu     _llikNbinomMuDmu   rxode2_llikBinomFun rxode2ll #> 86             llikBeta            _llikBeta    rxode2_llikBetaFun rxode2ll #> 87      llikBetaDshape1     _llikBetaDshape1    rxode2_llikBetaFun rxode2ll #> 88      llikBetaDshape2     _llikBetaDshape2    rxode2_llikBetaFun rxode2ll #> 89                llikT               _llikT       rxode2_llikTFun rxode2ll #> 90             llikTDdf            _llikTDdf       rxode2_llikTFun rxode2ll #> 91           llikTDmean          _llikTDmean       rxode2_llikTFun rxode2ll #> 92             llikTDsd            _llikTDsd       rxode2_llikTFun rxode2ll #> 93            llikChisq           _llikChisq   rxode2_llikChisqFun rxode2ll #> 94         llikChisqDdf        _llikChisqDdf   rxode2_llikChisqFun rxode2ll #> 95              llikExp             _llikExp     rxode2_llikExpFun rxode2ll #> 96         llikExpDrate        _llikExpDrate     rxode2_llikExpFun rxode2ll #> 97                llikF               _llikF       rxode2_llikFFun rxode2ll #> 98            llikFDdf1           _llikFDdf1       rxode2_llikFFun rxode2ll #> 99            llikFDdf2           _llikFDdf2       rxode2_llikFFun rxode2ll #> 100            llikGeom            _llikGeom    rxode2_llikGeomFun rxode2ll #> 101          llikGeomDp          _llikGeomDp    rxode2_llikGeomFun rxode2ll #> 102            llikUnif            _llikUnif    rxode2_llikUnifFun rxode2ll #> 103      llikUnifDalpha      _llikUnifDalpha    rxode2_llikUnifFun rxode2ll #> 104       llikUnifDbeta       _llikUnifDbeta    rxode2_llikUnifFun rxode2ll #> 105         llikWeibull         _llikWeibull rxode2_llikWeibullFun rxode2ll #> 106   llikWeibullDshape   _llikWeibullDshape rxode2_llikWeibullFun rxode2ll #> 107   llikWeibullDscale   _llikWeibullDscale rxode2_llikWeibullFun rxode2ll #> 108           llikGamma           _llikGamma   rxode2_llikGammaFun rxode2ll #> 109     llikGammaDshape     _llikGammaDshape   rxode2_llikGammaFun rxode2ll #> 110      llikGammaDrate      _llikGammaDrate   rxode2_llikGammaFun rxode2ll #> 111          llikCauchy          _llikCauchy  rxode2_llikCauchyFun rxode2ll #> 112 llikCauchyDlocation _llikCauchyDlocation  rxode2_llikCauchyFun rxode2ll #> 113    llikCauchyDscale    _llikCauchyDscale  rxode2_llikCauchyFun rxode2ll #>                packageFun argMin argMax threadSafe #> 1                 linCmtA     14     14          1 #> 2                 linCmtB     15     15          1 #> 3                  rxnorm     NA     NA          1 #> 4                 rxbinom     NA     NA          1 #> 5                rxnbinom     NA     NA          1 #> 6              rxnbinomMu     NA     NA          1 #> 7                rxcauchy     NA     NA          1 #> 8                 rxchisq     NA     NA          1 #> 9                   rxexp     NA     NA          1 #> 10                    rxf     NA     NA          1 #> 11                 rxgeom     NA     NA          1 #> 12                rxgamma     NA     NA          1 #> 13                 rxbeta     NA     NA          1 #> 14                 rxpois     NA     NA          1 #> 15                   rxt_     NA     NA          1 #> 16                 rxunif     NA     NA          1 #> 17              rxweibull     NA     NA          1 #> 18                 rinorm     NA     NA          1 #> 19                ribinom     NA     NA          1 #> 20               rinbinom     NA     NA          1 #> 21             rinbinomMu     NA     NA          1 #> 22               ricauchy     NA     NA          1 #> 23                richisq     NA     NA          1 #> 24                  riexp     NA     NA          1 #> 25                    rif     NA     NA          1 #> 26                 rigeom     NA     NA          1 #> 27                rigamma     NA     NA          1 #> 28                 ribeta     NA     NA          1 #> 29                 ripois     NA     NA          1 #> 30                   rit_     NA     NA          1 #> 31                 riunif     NA     NA          1 #> 32              riweibull     NA     NA          1 #> 33                   ReLU      1      1          1 #> 34                  dReLU      1      1          1 #> 35                   GELU      1      1          1 #> 36                  dGELU      1      1          1 #> 37                 d2GELU      1      1          1 #> 38                 d3GELU      1      1          1 #> 39                 d4GELU      1      1          1 #> 40               softplus      1      1          1 #> 41              dsoftplus      1      1          1 #> 42             d2softplus      1      1          1 #> 43             d3softplus      1      1          1 #> 44             d4softplus      1      1          1 #> 45                   SELU      1      1          1 #> 46                  dSELU      1      1          1 #> 47                  lReLU      1      1          1 #> 48                 dlReLU      1      1          1 #> 49                  Swish      1      1          1 #> 50                 dSwish      1      1          1 #> 51                  PReLU      2      2          1 #> 52                 dPReLU      2      2          1 #> 53                dPReLUa      2      2          1 #> 54               dPReLUa1      2      2          1 #> 55                    ELU      2      2          1 #> 56                   dELU      2      2          1 #> 57                  d2ELU      2      2          1 #> 58                 d2aELU      2      2          1 #> 59                  dELUa      2      2          1 #> 60                 d2ELUa      2      2          1 #> 61                    phi     NA     NA          1 #> 62                 gammap      2      2          1 #> 63                 gammaq      2      2          1 #> 64              gammapInv      2      2          1 #> 65             gammapInva      2      2          1 #> 66              gammaqInv      2      2          1 #> 67             gammaqInva      2      2          1 #> 68             uppergamma      2      2          1 #> 69             lowergamma      2      2          1 #> 70              gammapDer      2      2          1 #> 71                  logit     NA     NA          1 #> 72                  expit     NA     NA          1 #> 73                 simeta     NA     NA          1 #> 74                 simeps     NA     NA          1 #> 75             rxLlikNorm      3      3          1 #> 76        rxLlikNormDmean      3      3          1 #> 77          rxLlikNormDsd      3      3          1 #> 78             rxLlikPois      2      2          1 #> 79      rxLlikPoisDlambda      2      2          1 #> 80            rxLlikBinom      3      3          1 #> 81       rxLlikBinomDprob      3      3          1 #> 82           rxLlikNbinom      3      3          1 #> 83      rxLlikNbinomDprob      3      3          1 #> 84         rxLlikNbinomMu      3      3          1 #> 85      rxLlikNbinomMuDmu      3      3          1 #> 86             rxLlikBeta      3      3          1 #> 87      rxLlikBetaDshape1      3      3          1 #> 88      rxLlikBetaDshape2      3      3          1 #> 89                rxLlikT      4      4          1 #> 90             rxLlikTDdf      4      4          1 #> 91           rxLlikTDmean      4      4          1 #> 92             rxLlikTDsd      4      4          1 #> 93            rxLlikChisq      2      2          1 #> 94         rxLlikChisqDdf      2      2          1 #> 95              rxLlikExp      2      2          1 #> 96         rxLlikExpDrate      2      2          1 #> 97                rxLlikF      3      3          1 #> 98            rxLlikFDdf1      3      3          1 #> 99            rxLlikFDdf2      3      3          1 #> 100            rxLlikGeom      2      2          1 #> 101          rxLlikGeomDp     NA     NA          1 #> 102            rxLlikUnif      3      3          1 #> 103      rxLlikUnifDalpha      3      3          1 #> 104       rxLlikUnifDbeta      3      3          1 #> 105         rxLlikWeibull      3      3          1 #> 106   rxLlikWeibullDshape      3      3          1 #> 107   rxLlikWeibullDscale      3      3          1 #> 108           rxLlikGamma      3      3          1 #> 109     rxLlikGammaDshape      3      3          1 #> 110      rxLlikGammaDrate      3      3          1 #> 111          rxLlikCauchy      3      3          1 #> 112 rxLlikCauchyDlocation      3      3          1 #> 113    rxLlikCauchyDscale      3      3          1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate ordinal value — rxord","title":"Simulate ordinal value — rxord","text":"Simulate ordinal value","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate ordinal value — rxord","text":"","code":"rxord(...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate ordinal value — rxord","text":"... probabilities simulated.  sum number one.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate ordinal value — rxord","text":"number 1 (number probabilities specified + 1)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate ordinal value — rxord","text":"values entered 'rxord' simulation simulate probability falling group. falls outside specified probabilities, simulate group (number probabilities specified + 1)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate ordinal value — rxord","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate ordinal value — rxord","text":"","code":"# This will give values 1, and 2 rxord(0.5) #> [1] 2 rxord(0.5) #> [1] 1 rxord(0.5) #> [1] 2 rxord(0.5) #> [1] 1  # This will give values 1, 2 and 3 rxord(0.3, 0.3) #> [1] 1 rxord(0.3, 0.3) #> [1] 1 rxord(0.3, 0.3) #> [1] 1"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate random Poisson variable from threefry generator — rxpois","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"","code":"rxpois(lambda, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"lambda vector (non-negative) means. n number random values return. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"poission random number deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxpois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate random Poisson variable from threefry generator — rxpois","text":"","code":"# \\donttest{ ## Use threefry engine  rxpois(lambda = 3, n = 10) # with rxpois you have to explicitly state n #>  [1] 3 4 1 2 3 2 1 1 7 1 rxpois(lambda = 3, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 2 1 3 3 5 2 6 6 8 2  rxpois(4) ## The first arguments are the lambda parameter #> [1] 6   ## This example uses `rxpois` directly in the model  rx <- function() {   model({     a <- rxpois(3)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate student t variable from threefry generator — rxt","title":"Simulate student t variable from threefry generator — rxt","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate student t variable from threefry generator — rxt","text":"","code":"rxt(df, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate student t variable from threefry generator — rxt","text":"df degrees freedom (\\(> 0\\), maybe non-integer).  df       = Inf allowed. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate student t variable from threefry generator — rxt","text":"t-distribution random numbers","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate student t variable from threefry generator — rxt","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate student t variable from threefry generator — rxt","text":"","code":"# \\donttest{  ## Use threefry engine rxt(df = 3, n = 10) # with rxt you have to explicitly state n #>  [1]  0.59696783  0.36643924  3.90544272 -1.98756495 -0.67838742 -0.02706751 #>  [7] -0.29260787 -0.11948095 -0.32964388  2.03708591 rxt(df = 3, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1]  1.16861213  1.22576406 -1.74976204 -1.49656075  0.92029986  1.80834310 #>  [7] -0.08562431 -2.13348911  1.04362847  0.34807090  rxt(4) ## The first argument is the df parameter #> [1] -0.2566706   ## This example uses `rxt` directly in the model  rx <- function() {    model({     a <- rxt(3)    }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate uniform variable from threefry generator — rxunif","title":"Simulate uniform variable from threefry generator — rxunif","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate uniform variable from threefry generator — rxunif","text":"","code":"rxunif(min = 0, max = 1, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate uniform variable from threefry generator — rxunif","text":"min, max lower upper limits distribution.  Must finite. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate uniform variable from threefry generator — rxunif","text":"uniform random numbers","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate uniform variable from threefry generator — rxunif","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxunif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate uniform variable from threefry generator — rxunif","text":"","code":"# \\donttest{  ## Use threefry engine  rxunif(min = 0, max = 4, n = 10) # with rxunif you have to explicitly state n #>  [1] 2.4079607 1.7783947 1.2768194 0.4902107 1.5013125 3.5942682 1.4827298 #>  [8] 1.9568479 2.4242906 3.6372585 rxunif(min = 0, max = 4, n = 10, ncores = 2) # You can parallelize the simulation using openMP #>  [1] 0.3825280 0.8600095 1.7186870 2.4484074 2.2692561 0.4697962 3.7543812 #>  [8] 0.4969432 2.6547598 2.1530229  rxunif() #> [1] 0.5617085   ## This example uses `rxunif` directly in the model  rx <- function() {   model({     a <- rxunif(0, 3)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Weibull variable from threefry generator — rxweibull","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"Care taken method encounter birthday problem, described https://www.johndcook.com/blog/2016/01/29/random-number-generator-seed-mistakes/. Since sitmo threefry, currently generates one random deviate uniform distribution seed engine threefry run code.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"","code":"rxweibull(shape, scale = 1, n = 1L, ncores = 1L)"},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"shape, scale shape scale parameters, latter defaulting 1. n number observations. length(n) > 1, length     taken number required. ncores Number cores simulation rxnorm simulates using threefry sitmo generator. rxnormV used simulate vandercorput simulator, since satisfy normal properties changed simple alias rxnorm. longer supported rxode2({}) blocks","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"Weibull random deviates","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"Therefore, simple call random number generated followed second call random number generated may identical seeds.  number random number generator calls increased probability birthday problem increase. key avoid problem either run simulations rxode2 environment (therefore one seed series seeds whole simulation), pre-generate random variables used simulation, seed rxode2 engine rxSetSeed() Internally ID seeded unique number results depend number cores used.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/rxweibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Weibull variable from threefry generator — rxweibull","text":"","code":"# \\donttest{  ## Use threefry engine  # with rxweibull you have to explicitly state n rxweibull(shape = 1, scale = 4, n = 10) #>  [1]  1.953503  0.124592 12.502286  2.284222  4.342211  2.337220  3.743978 #>  [8]  1.087069  1.155109  7.962468  # You can parallelize the simulation using openMP rxweibull(shape = 1, scale = 4, n = 10, ncores = 2) #>  [1]  8.673411 11.228521  3.515282  8.043888  2.588675  9.741515  2.163835 #>  [8]  1.233657  6.839772  3.783971  rxweibull(3) #> [1] 0.5160208   ## This example uses `rxweibull` directly in the model  rx <- function() {   model({     a <- rxweibull(1, 3)   }) }  et <- et(1, id = 1:2)  s <- rxSolve(rx, et) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Softplus Activation Function — softplus","title":"Softplus Activation Function — softplus","text":"Softplus Activation Function","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Softplus Activation Function — softplus","text":"","code":"softplus(x)"},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Softplus Activation Function — softplus","text":"x numeric vector","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Softplus Activation Function — softplus","text":"numeric vector","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Softplus Activation Function — softplus","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/softplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Softplus Activation Function — softplus","text":"","code":"softplus(c(-1, 0, 1, 2)) #> [1] 0.3132617 0.6931472 1.3132617 2.1269280  # You can use rxode2 too:  r <- rxode2({  s <- softplus(time) }) #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  e <- et(c(-1, 0, 1, 2))  rxSolve(r, e) #> ── Solved rxode2 object ── #> ── Parameters (value$params): ── #> # A tibble: 1 × 0 #> ── Initial Conditions (value$inits): ── #> named numeric(0) #> ── First part of data (object): ── #> # A tibble: 4 × 2 #>    time     s #>   <dbl> <dbl> #> 1    -1 0.313 #> 2     0 0.693 #> 3     1 1.31  #> 4     2 2.13"},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":null,"dir":"Reference","previous_headings":"","what":"Dosing/Amt geom/stat — stat_amt","title":"Dosing/Amt geom/stat — stat_amt","text":"dosing geom shows vertical lines dose occurs","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dosing/Amt geom/stat — stat_amt","text":"","code":"stat_amt(   mapping = NULL,   data = NULL,   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_amt(   mapping = NULL,   data = NULL,   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dosing/Amt geom/stat — stat_amt","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dosing/Amt geom/stat — stat_amt","text":"returns stat_amt context ggplot2 plot","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dosing/Amt geom/stat — stat_amt","text":"Requires following aesthetics: x representing x values, usually time amt representing dosing values;  missing zero dose given","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_amt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dosing/Amt geom/stat — stat_amt","text":"","code":"# \\donttest{ library(rxode2) library(units) #> udunits database from /usr/share/xml/udunits/udunits2.xml   ## Model from RxODE tutorial mod1 <- function() {   ini({     KA <- 2.94E-01     CL <- 1.86E+01     V2 <- 4.02E+01     Q  <- 1.05E+01     V3 <- 2.97E+02     Kin <- 1     Kout <- 1     EC50 <- 200   })   model({     C2 <- centr/V2     C3 <- peri/V3     d/dt(depot) <- -KA*depot     d/dt(centr) <-  KA*depot - CL*C2 - Q*C2 + Q*C3     d/dt(peri)  <-                    Q*C2 - Q*C3     d/dt(eff)   <- Kin - Kout*(1-C2/(EC50+C2))*eff   }) }  ## These are making the more complex regimens of the rxode2 tutorial  ## bid for 5 days bid <- et(timeUnits=\"hr\") %>%   et(amt=10000,ii=12,until=set_units(5, \"days\"))  ## qd for 5 days qd <- et(timeUnits=\"hr\") %>%       et(amt=20000,ii=24,until=set_units(5, \"days\"))  ## bid for 5 days followed by qd for 5 days  et <- seq(bid,qd) %>% et(seq(0,11*24,length.out=100))  bidQd <- rxSolve(mod1, et, addDosing=TRUE) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>   #>   #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’  # by default dotted and under-stated plot(bidQd, C2) + geom_amt(aes(amt=amt))   # of course you can make it a bit more visible  plot(bidQd, C2) + geom_amt(aes(amt=amt), col=\"red\", lty=1, linewidth=1.2)   # }"},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_cens.html","id":null,"dir":"Reference","previous_headings":"","what":"Censoring geom/stat — stat_cens","title":"Censoring geom/stat — stat_cens","text":"censoring geom shows left right censoring specified nlmixr input data-set fit","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_cens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Censoring geom/stat — stat_cens","text":"","code":"stat_cens(   mapping = NULL,   data = NULL,   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   width = 0.01,   ... )  geom_cens(   mapping = NULL,   data = NULL,   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   width = 0.01,   ... )"},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_cens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censoring geom/stat — stat_cens","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). width represents width (\\ censoring box ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_cens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Censoring geom/stat — stat_cens","text":"returns ggplot2 stat","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/stat_cens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Censoring geom/stat — stat_cens","text":"Requires following aesthetics: x Represents independent variable, often time scale y represents dependent variable CENS censoring information; (-1 right censored, 0 censoring 1 left censoring) LIMIT represents corresponding limit () add boxes representing areas fit censored.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxDll.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of rxDll object — summary.rxDll","title":"Summary of rxDll object — summary.rxDll","text":"gives expanded information rxDll object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxDll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of rxDll object — summary.rxDll","text":"","code":"# S3 method for class 'rxDll' summary(object, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxDll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of rxDll object — summary.rxDll","text":"object RxDll object ... arguments.  Includes noprint, logical telling object print rxDll object first. default FALSE","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxDll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of rxDll object — summary.rxDll","text":"object returned","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxDll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of rxDll object — summary.rxDll","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxode2.html","id":null,"dir":"Reference","previous_headings":"","what":"Print expanded information about the rxode2 object. — summary.rxode2","title":"Print expanded information about the rxode2 object. — summary.rxode2","text":"prints expanded information rxode2 object.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print expanded information about the rxode2 object. — summary.rxode2","text":"","code":"# S3 method for class 'rxode2' summary(object, ...)"},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print expanded information about the rxode2 object. — summary.rxode2","text":"object rxode2 object ... Ignored parameters","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print expanded information about the rxode2 object. — summary.rxode2","text":"object returned","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/summary.rxode2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print expanded information about the rxode2 object. — summary.rxode2","text":"Matthew L.Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":null,"dir":"Reference","previous_headings":"","what":"Swaps the matrix list with a cube — swapMatListWithCube","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"Swaps matrix list cube","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"","code":"swapMatListWithCube(matrixListOrCube)"},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"matrixListOrCube Either list 2-dimensional matrices cube matrices","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"list cube (opposite format input)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/swapMatListWithCube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swaps the matrix list with a cube — swapMatListWithCube","text":"","code":"# Create matrix list matLst <- cvPost(10, lotri::lotri(a+b~c(1, 0.25, 1)), 3) print(matLst) #> [[1]] #>           a         b #> a 2.4264748 0.7671728 #> b 0.7671728 0.8645639 #>  #> [[2]] #>           a          b #> a  1.099929 -0.1181670 #> b -0.118167  0.6062742 #>  #> [[3]] #>           a         b #> a 0.7727525 0.0775470 #> b 0.0775470 0.8274925 #>   # Convert to cube matCube <- swapMatListWithCube(matLst) print(matCube) #> , , 1 #>  #>           a         b #> a 2.4264748 0.7671728 #> b 0.7671728 0.8645639 #>  #> , , 2 #>  #>           a          b #> a  1.099929 -0.1181670 #> b -0.118167  0.6062742 #>  #> , , 3 #>  #>           a         b #> a 0.7727525 0.0775470 #> b 0.0775470 0.8274925 #>   # Convert back to list matLst2 <- swapMatListWithCube(matCube) print(matLst2) #> [[1]] #>           a         b #> a 2.4264748 0.7671728 #> b 0.7671728 0.8645639 #>  #> [[2]] #>           a          b #> a  1.099929 -0.1181670 #> b -0.118167  0.6062742 #>  #> [[3]] #>           a         b #> a 0.7727525 0.0775470 #> b 0.0775470 0.8274925 #>"},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":null,"dir":"Reference","previous_headings":"","what":"This function tests if this object is a iniDf as needed by the UI — testIniDf","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"function tests object iniDf needed UI","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"","code":"testIniDf(iniDf)  assertIniDf(iniDf, extra = \"\", .var.name = .vname(iniDf), null.ok = FALSE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"iniDf object test rxode2 ui iniDf data.frame extra information append error message .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname. null.ok [logical(1)] set TRUE, x may also NULL. case type check x performed, additional checks disabled.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"boolean, indicating object valid initialization data frame","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"assertIniDf(): Assert object valid rxode2 ui initialization data frame","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testIniDf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function tests if this object is a iniDf as needed by the UI — testIniDf","text":"","code":"testIniDf(TRUE) #> [1] FALSE"},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if rxode2 uses linear solved systems — testRxLinCmt","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"Test rxode2 uses linear solved systems","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"","code":"testRxLinCmt(ui, extra = \"\", .var.name = .vname(ui))  assertRxLinCmt(ui, extra = \"\", .var.name = .vname(ui))"},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"ui rxode2 model extra Extra text append error message (like \"focei\") .var.name [character(1)] Name checked object print assertions. Defaults heuristic implemented vname.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"TRUE model uses linear solved systems, FALSE otherwise","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"assertRxLinCmt(): Assert rxode2 uses linear solved systems","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxLinCmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if rxode2 uses linear solved systems — testRxLinCmt","text":"","code":"one.cmt <- function() {   ini({    ## You may label each parameter with a comment    tka <- 0.45 # Log Ka    tcl <- log(c(0, 2.7, 100)) # Log Cl    ## This works with interactive models    ## You may also label the preceding line with label(\"label text\")    tv <- 3.45; label(\"log V\")    ## the label(\"Label name\") works with all models    eta.ka ~ 0.6    eta.cl ~ 0.3    eta.v ~ 0.1    add.sd <- 0.7  })  model({    ka <- exp(tka + eta.ka)    cl <- exp(tcl + eta.cl)    v <- exp(tv + eta.v)    linCmt() ~ add(add.sd)  }) }  testRxLinCmt(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> [1] TRUE"},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"Test rxode2 model parameters user defined boundaries","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"","code":"testRxUnbounded(ui)  assertRxUnbounded(ui, extra = \"\", .var.name = .vname(ui))  warnRxBounded(ui, extra = \"\", .var.name = .vname(ui))"},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"ui rxode2 ui extra extra information append error message .var.name variable name","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"boolean indicating parameters user defined boundaries","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"assertRxUnbounded(): Assert rxode2 model parameters user defined boundaries warnRxBounded(): Warn rxode2 model parameters user defined boundaries","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/testRxUnbounded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if the rxode2 model has any parameters with user defined boundaries — testRxUnbounded","text":"","code":"one.cmt <- function() {   ini({     tka <- 0.45; label(\"Ka\")     tcl <- log(c(0, 2.7, 100)); label(\"Cl\")     tv <- 3.45; label(\"V\")     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     linCmt() ~ add(add.sd)   }) }  testRxUnbounded(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> [1] FALSE  try(assertRxUnbounded(one.cmt)) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> Error : 'one.cmt' can not have user defined boundaries  warnRxBounded(one.cmt) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #> Warning: 'one.cmt' has the following user-defined boundaries: tcl"},{"path":"https://nlmixr2.github.io/rxode2/reference/toTrialDuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","title":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","text":"Convert event data trial duration data helper function create custom event table. observation time start first event time (baseline) end trial duration. interval spacing observation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/toTrialDuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","text":"","code":"toTrialDuration(ev, trialEnd, interval, writeDir = NULL)"},{"path":"https://nlmixr2.github.io/rxode2/reference/toTrialDuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","text":"ev event data trialEnd extend trial duration. Must time unit event data interval observation interval. Must time unit event data writeDir NULL, write output csv file","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/toTrialDuration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","text":"Omar Elashkar","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/toTrialDuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert event data to trial duration data A helper function to create a custom event table. The observation time will start from the first event time (baseline) and end at trial duration. The interval is the spacing between each observation. — toTrialDuration","text":"","code":"# Create event table with unique time for each ID  ev = et(data.frame(id = rep(1:10, 3),  time = runif(min = 10, max = 20, n = 30)))   # select the duration and spacing interval (assuming time is in years)  toTrialDuration(ev, trialEnd = 1.5, interval = 0.2) #> ── EventTable with 80 records ── #> 0 dosing records (see value$get.dosing(); add with add.dosing or et) #> 80 observation times (see value$get.sampling(); add with add.sampling or et) #> ── First part of value: ── #> # A tibble: 80 × 4 #>       id  time   amt evid          #>    <int> <dbl> <dbl> <evid>        #>  1     1  10.0    NA 0:Observation #>  2     1  10.2    NA 0:Observation #>  3     1  10.4    NA 0:Observation #>  4     1  10.6    NA 0:Observation #>  5     1  10.8    NA 0:Observation #>  6     1  11.0    NA 0:Observation #>  7     1  11.2    NA 0:Observation #>  8     1  11.4    NA 0:Observation #>  9     2  12.5    NA 0:Observation #> 10     2  12.7    NA 0:Observation #> # ℹ 70 more rows"},{"path":"https://nlmixr2.github.io/rxode2/reference/update.rxUi.html","id":null,"dir":"Reference","previous_headings":"","what":"Update for rxUi — update.rxUi","title":"Update for rxUi — update.rxUi","text":"Update rxUi","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/update.rxUi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update for rxUi — update.rxUi","text":"","code":"# S3 method for class 'rxUi' update(object, ..., envir = parent.frame())"},{"path":"https://nlmixr2.github.io/rxode2/reference/update.rxUi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update for rxUi — update.rxUi","text":"object rxode2 UI object ... Lines update envir Environment evaluating ini() style calls","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/update.rxUi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update for rxUi — update.rxUi","text":"new rxode2 updated UI object","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":null,"dir":"Reference","previous_headings":"","what":"uppergamma: upper incomplete gamma function — uppergamma","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"tgamma boost library","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"","code":"uppergamma(a, z)"},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"numeric '' parameter upper incomplete gamma z numeric 'z' parameter upper incomplete gamma","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"uppergamma results","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"uppergamma function given : \\(uppergamma(, z) = \\int_{z}^{\\infty}t^{-1}\\cdot e^{-t} dt\\)","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"Matthew L. Fidler","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/uppergamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"uppergamma: upper incomplete gamma function — uppergamma","text":"","code":"uppergamma(1, 3) #> [1] 0.04978707  uppergamma(1:3, 3) #> [1] 0.04978707 0.19914827 0.84638016  uppergamma(1, 1:3) #> [1] 0.36787944 0.13533528 0.04978707"},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":null,"dir":"Reference","previous_headings":"","what":"Set random effects and residual error to zero — zeroRe","title":"Set random effects and residual error to zero — zeroRe","text":"Set random effects residual error zero","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set random effects and residual error to zero — zeroRe","text":"","code":"zeroRe(object, which = c(\"omega\", \"sigma\"), fix = TRUE)"},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set random effects and residual error to zero — zeroRe","text":"object model modify types parameters set zero fix parameters fixed zero value?","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set random effects and residual error to zero — zeroRe","text":"object parameters set zero","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set random effects and residual error to zero — zeroRe","text":"Bill Denney","code":""},{"path":"https://nlmixr2.github.io/rxode2/reference/zeroRe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set random effects and residual error to zero — zeroRe","text":"","code":"one.compartment <- function() {   ini({     tka <- log(1.57); label(\"Ka\")     tcl <- log(2.72); label(\"Cl\")     tv <- log(31.5); label(\"V\")     eta.ka ~ 0.6     eta.cl ~ 0.3     eta.v ~ 0.1     add.sd <- 0.7   })   model({     ka <- exp(tka + eta.ka)     cl <- exp(tcl + eta.cl)     v <- exp(tv + eta.v)     d/dt(depot) = -ka * depot     d/dt(center) = ka * depot - cl / v * center     cp = center / v     cp ~ add(add.sd)   }) } zeroRe(one.compartment) #>   #>   #> ℹ parameter labels from comments are typically ignored in non-interactive mode #> ℹ Need to run with the source intact to parse comments #>  ── rxode2-based free-form 2-cmt ODE model ──────────────────────────────────────  #>  ── Initalization: ──   #> Fixed Effects ($theta):  #>       tka       tcl        tv    add.sd  #> 0.4510756 1.0006319 3.4499875 0.0000000  #>  #> Omega ($omega):  #>        eta.ka eta.cl eta.v #> eta.ka      0      0     0 #> eta.cl      0      0     0 #> eta.v       0      0     0 #> attr(,\"lotriFix\") #>        eta.ka eta.cl eta.v #> eta.ka   TRUE  FALSE FALSE #> eta.cl  FALSE   TRUE FALSE #> eta.v   FALSE  FALSE  TRUE #>  #> States ($state or $stateDf):  #>   Compartment Number Compartment Name #> 1                  1            depot #> 2                  2           center #>  ── μ-referencing ($muRefTable): ──   #>   theta    eta level #> 1   tka eta.ka    id #> 2   tcl eta.cl    id #> 3    tv  eta.v    id #>  #>  ── Model (Normalized Syntax): ──  #> function() { #>     ini({ #>         tka <- 0.451075619360217 #>         label(\"Ka\") #>         tcl <- 1.00063188030791 #>         label(\"Cl\") #>         tv <- 3.44998754583159 #>         label(\"V\") #>         add.sd <- fix(0, 0) #>         eta.ka ~ fix(0) #>         eta.cl ~ fix(0) #>         eta.v ~ fix(0) #>     }) #>     model({ #>         ka <- exp(tka + eta.ka) #>         cl <- exp(tcl + eta.cl) #>         v <- exp(tv + eta.v) #>         d/dt(depot) = -ka * depot #>         d/dt(center) = ka * depot - cl/v * center #>         cp = center/v #>         cp ~ add(add.sd) #>     }) #> }"},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-400","dir":"Changelog","previous_headings":"","what":"rxode2 4.0.0","title":"rxode2 4.0.0","text":"Add information errors NAs solving. Fix rxDerived() mixed vector non-vector input. Fix model variables alag(cmt) defined d/dt() linCmt() Just time use state.ignore model variables, fixes negative length error observed #857. Fix steady state bug time-varying covariates. Now covariates inferred time steady state (instead searching subject based projected time). Rework linear solved systems use wnl solutions, threaded linear systems solve (non-gradient solutions). new method closes variety linear compartment model bugs (#261, #272, #441, #504, #564, #717, #728, #827, #855) Added new types bounds event tables: 3 point bounds et(list(c(low, mid, high))) specified way, change. Perfect use babelmixr2’s PopED (#862, #863, #854) Intervals simulated normal values instead uniform. case first seen interval 3 elements NA end et(list(c(mean, sd, NA), c(mean, sd))), elements can simply 2 declaring c(mean, sd) course uniform windows et(list(c(low, high))) still work Currently different types windows mixed. Add ability pipe list named numeric eta %>% ini(~eta) Added fix event tables expanding IDs non-sequential order. particular first ID minimum ID expanding first event table, smallest ID output table. Now smallest ID event table. (Fixes #878, #869, #870) Added ability pipe ini() lotri(), expression can converted ini .ini(). Also allows ini() expressions converted lotri .lotri(). Fixes #871 Added new type variability expression simulation estimation focei likelihood related methods: +var(). changes standard deviation parameters variance parameters. Added new type endpoint expression focei estimation +dv(). transforms data predictions. can see useful model linearization. Bug fix parameters input ($params) output ($lhs) respects order $lhs declaration (Fixes #876) Add rxFixRes literally fix residual estimates model (#889) Now modeled duration 0 treated bolus dose (#892)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-304","dir":"Changelog","previous_headings":"","what":"rxode2 3.0.4","title":"rxode2 3.0.4","text":"CRAN release: 2025-02-14 Add stable hashes rxUi objects (#838, #689) Fix iov simulation (#842) Fix rxnbinom() called directly R (#847) expand match close R’s rnbinom() including allowing named mu= calls. rxode2 ui, also now allowed.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-303","dir":"Changelog","previous_headings":"","what":"rxode2 3.0.3","title":"rxode2 3.0.3","text":"CRAN release: 2024-12-15 Add logit/expit named expressions, logit(x, high=20) becomes logit(x, 0, 20) ui models. Updated random ui models like rxnorm(sd=10) accept complex numeric expressions like rxnorm(sd=10+1). Updated random ui models accept complex non-numeric expressions like rxnorm(sd=+b) Rework tad() related functions use interface compartments (way depend order compartments); See #815. mu-referencing, Also allow dummy variables ignore state requirements (ie podo(depot) single line error parsing mu-referenced equations). Add getRxNpars api. allows development version babelmixr2 better check model loaded unload/reload necessary. Add rxUdfUiControl() rxode2 user function get control information something like nlmixr2 Bug fix tracking time dose dosing 2 compartments occur exact time (#804, #819) Change transit() model uses tad0(), podo0() related functions bit stable simulation estimation Fix compile flags work BH 1.87 (#826)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-302","dir":"Changelog","previous_headings":"","what":"rxode2 3.0.2","title":"rxode2 3.0.2","text":"CRAN release: 2024-10-30 Bug fix api, censoring function pointer updated (#801). Query rxode2.verbose.pipe run time instead requiring set loading rxode2. correct values boundaries logit, expit, probit, probitInv (instead NA). cases break anything. Add new style user function modifies ui parsing just using function (presence data). Used new user function interface allow random functions rxode2 ui functions named. example, can use rxnorm(sd=3) instead use rxnorm(0, 3), although rxnorm() still works.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-301","dir":"Changelog","previous_headings":"","what":"rxode2 3.0.1","title":"rxode2 3.0.1","text":"CRAN release: 2024-09-22 Explicitly initialize order vector stop valgrind warning (requested CRAN)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-300","dir":"Changelog","previous_headings":"","what":"rxode2 3.0.0","title":"rxode2 3.0.0","text":"CRAN release: 2024-09-18","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"breaking-changes-3-0-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"rxode2 3.0.0","text":"model properties moved $params $props conflict low level rxode2 model $params Error specifying wd without modName Linear midpoint time two points, rxode2 handles missing values changed. missing value lower requested time, look backward finds first non-missing value (missing start looking forward). missing value higher requested time, algorithm look forward finds first non-missing value (missing, start looking backward). order ODEs now determined order cmt() d/dt(). Compartment properties, tad() compartment related variables longer affect compartment sorting. option rxode2.syntax.require.ode.first longer anything. handling zeros “safely” changed (see #775) safeZero=TRUE denominator division expression zero, use Machine’s small number/eps (can see value .Machine$double.eps) saveLog=TRUE x log(x) less equal zero, change log(eps) safePow=TRUE expression x^y zero x negative number y replace x eps. Since protection divide zero changed, results also change. conservative protection mechanism applied previously. Random numbers rxode2 different using dop853, lsoda indLin methods. now seed random numbers way liblsoda, random number provided different solving methods. arguments saved rxSolve items like thetaMat reduced matrices used solving, full matrices (likely break many items)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"possible-breaking-changes-though-unlikely-3-0-0","dir":"Changelog","previous_headings":"","what":"Possible breaking changes (though unlikely)","title":"rxode2 3.0.0","text":"iCov longer merged event dataset. makes solving iCov slightly faster (#743)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-3-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 3.0.0","text":"can remove covariances every omega piping %>%   ini(diag()) can bit granular removing covariances either eta.ka eta.cl : %>%   ini(diag(eta.ka, eta.cl)) anything correlations eta.cl %>% ini(diag(eta.cl)) can also remove individual covariances %>% ini(-cov(, b)) %>% ini(-cor(,b)). can specify type interpolation applied added dosing records (added records) columns kept keep= option rxSolve(). new option keepInterpolation can locf last observation carried forward, nocb next observation carried backward, well NA puts NA imputed data rows. See #756. Note: interpolation linear/midpoint factors/characters changes locf warning (#759) Also note, default keep interpolation na Now can specify interpolation method per covariate model: linear(var1, var2) says var1 var2 use linear interpolation time-varying covariate. also use linear(var1) locf() declares variables using last observation carried forward nocb() declares variables using next observation carried backward midpoint() declares variables using midpoint interpolation linear(), locf(), locb(), midpoint(), params(), cmt() dvid() declarations now ignored loading rxode2 model rxS() Strings can assigned variables rxode2. Strings can now enclosed single quote well double quote. limitation rxode2 using string since R-parser changes single quotes double quotes. (impact rxode2({}) ui/function form). robust string encoding symengine (adapted utils::URLencode() utils::URLdecode()) Empty arguments rxRename() give warning (#688) Promoting covariates parameters model piping (via ini()) now allows setting bounds (#692) Added assertCompartmentName(), assertCompartmentExists(), assertCompartmentNew(), testCompartmentExists(), assertVariableExists() testVariableExists(), assertVariableNew(), assertVariableName(), assertParameterValue() verify value valid nlmixr2 compartment name, nlmixr2 compartment/variable exists model, variable name, parameter value (#726; #733) Added assertRxUnbounded(), testRxUnbounded(), warnRxBounded() allow nlmixr2 warn methods ignore boundaries #760 Added functions tad0(), tafd0(), tlast0() tfirst0() give 0 instead NA dose administered yet. useful use ODEs since NAs break solving (can used bit robustly models like Weibull absorption). rxode2 binary link lotri, means changes lotri package require rxode2 recompiled (cases) crash system. rxode2 also binary linkage PreciseSums binary linkage dparser reduced C structures , making changes dparser less likely cause segmentation faults rxode2 wasn’t recompiled. new model property added $props$cmtProp $statePropDf. data-frames showing compartment properties (currently ini, f, alag, rate dur) rxode2 ui model. comes lower level model variable $stateProp information encoded integers state. new generic method rxUiDeparse can used deparse meta information readable expressions; currently default supports lower triangular matrices lotri, can extended support types objects like ’nlmixr2’s foceiControl() instance.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-3-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 3.0.0","text":"Fix ui$props$endpoint ui endpoint defined terms ode instead lhs. See #754 Fix ui$props ui linear compartment model without ka defined. Model extraction modelExtract() now extract model properties. Note model property alag(cmt) lag(cmt) give value. See #745 assigning reserved variables, parser error. See #744 Linear interpolation now adjust times well values NA values observed. Fix keeping data NA values crash R; Also fixed incorrect NA interpolations. See #756 using cmt() sometimes next statement corrupted normalized syntax (like instance locf); bug fixed (#763) keep now error trying keep items rxode2 output data-frame calculated (#764)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"big-change-3-0-0","dir":"Changelog","previous_headings":"","what":"Big change","title":"rxode2 3.0.0","text":"request CRAN, combine rxode2parse, rxode2random, rxode2et package; changes packages now placed :","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2et-3-0-0","dir":"Changelog","previous_headings":"Big change > rxode2et (no changes before merge)","what":"rxode2et 2.0.13","title":"rxode2 3.0.0","text":"Fix import data NA times","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2et-3-0-0-1","dir":"Changelog","previous_headings":"Big change > rxode2et (no changes before merge)","what":"rxode2et 2.0.12","title":"rxode2 3.0.0","text":"Fix formatting issues identified m1mac, requested CRAN","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2et-3-0-0-2","dir":"Changelog","previous_headings":"Big change > rxode2et (no changes before merge)","what":"rxode2et 2.0.11","title":"rxode2 3.0.0","text":"Make stacking flexible help rxode2 types plots Add toTrialDuration Omar Elashkar convert event data trial duration data Fix Issue #23 prefer variable values NSE values","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2et-3-0-0-3","dir":"Changelog","previous_headings":"Big change > rxode2et (no changes before merge)","what":"rxode2et 2.0.10","title":"rxode2 3.0.0","text":"Fix dollar sign accessing objects (like data frames), pointed @frbrz (issue #16) Use rxode2parse functions internal event table creation (moved ). Dropped C++14 let system decide.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2et-3-0-0-4","dir":"Changelog","previous_headings":"Big change > rxode2et (no changes before merge)","what":"rxode2et 2.0.9","title":"rxode2 3.0.0","text":"Split et(), eventTable() related functions. Also split rxStack() rxCbindStudyIndividual() package. Added NEWS.md file track changes package.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-before-merge-3-0-0","dir":"Changelog","previous_headings":"Big change","what":"rxode2random (before merge)","title":"rxode2 3.0.0","text":"Fix bug simulating nested variables (#25)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.1.0","title":"rxode2 3.0.0","text":"Breaking Change changed distributions standard C++ <random> boost::random. Since dependent compiler, makes random numbers generated Mac, Windows Linux every distribution. Unfortunately new random number transformation, simulation results likely different . exception uniform number, always platforms.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0-1","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.0.13","title":"rxode2 3.0.0","text":"Fixed formatting issues (requested CRAN identified m1mac)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0-2","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.0.12","title":"rxode2 3.0.0","text":"Added function dfWishart gives (simulation) approximation degrees freedom Wishart match rse value. Added function swapMatListWithCube swaps omegaList omegaCube values Ensure outputs integers (instead long integers) requested CRAN checking functions.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0-3","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.0.11","title":"rxode2 3.0.0","text":"Fix qassert LTO","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0-4","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.0.10","title":"rxode2 3.0.0","text":"Moved fast factor rxode2parse allow etTrans moved ","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2random-3-0-0-5","dir":"Changelog","previous_headings":"Big change > rxode2random (before merge)","what":"rxode2random 2.0.9","title":"rxode2 3.0.0","text":"Initial release rxode2random, separates parallel safe, random number generation ‘rxode2’ separate package reduce ‘rxode2’ compilation time. make CRAN maintenance bit easier. Added NEWS.md file track changes package.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-fixed-before-merging-3-0-0","dir":"Changelog","previous_headings":"Big change","what":"rxode2parse (fixed before merging)","title":"rxode2 3.0.0","text":"requested CRAN remove C code SET_TYPEOF longer part C R API.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.19","title":"rxode2 3.0.0","text":"Added evid suffix 60 cases evid=2 adds event (fixes tad() calculation certain edge cases) Initialize variables NA","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-1","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.18","title":"rxode2 3.0.0","text":"Removed linear compartment solutions gradients rxode2parse (rxode2) compiled intel c++ compiler (since crashes compiling). Fixed m1mac string issues requested CRAN","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-2","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.17","title":"rxode2 3.0.0","text":"Added ability query R user functions rxode2 model (force single threaded solve) Moved core rxFunParse rxRmFunParse C R user function clashes can handled Model variables now tracks compartments lag-time defined compartment steady state doses (NONMEM equivalent SS=1, SS=2), additional tracking time-point added track time lagged dose given. upshot, lagged dose start steady state concentration shifted + ii - lag rxode2 (currently ode systems ) release calculates non bio-availability adjusted duration rates instead trying figure rate duration solving. Make double assignment error, ie <- b <- NA times ignored (warning) Steady state bolus doses addl treated non steady state events (like observed NONMEM) Timsort upgraded; drop radix support rxode2 structure etTrans now supports keeping logical vectors (appropriate version rxode2). Security fixes applied requested CRAN","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-3","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.16","title":"rxode2 3.0.0","text":"Import data.table explicitly R code (imported C/C++ code)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-4","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.15","title":"rxode2 3.0.0","text":"Updates make flags support CXX17.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-5","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.14","title":"rxode2 3.0.0","text":"‘linCmt()’ translations ‘alpha’, ‘beta’, ‘gamma’, ‘k21’, ‘k31’, ‘vc’ now error instead ignoring ‘gamma’ ‘k31’ give 2 cmt solution transit compartment internal code now changes dose 0.0 dose administered depot compartment. way dosing central compartment (without dosing transit compartment) give NA depot compartment (consequently central compartment) Moved rxDerived added tests well. Moved etTransParse added tests well (makes etTrans). addition following changes made etTransParse()/etTrans(): internal translation (etTrans()) drop times infusions stop. , infusion stopped last observation time infusion stopped dropped. interferes linCmt() models. Breaking change/bug fix evid=2 considered observations translating data internal rxode2 event structure Fix edge case find infusion duration first item dosing record time 0. Fixed bug certain infusions rate, ii /ss data items dropped output addDosing=TRUE Also internal functions convert classic NONMEM events rxode2 events internal function gives information linear compartmental model translation type, useful babelmixr2 ‘time’ model now case insensitive Use function declaration rxode2parseGetTranslation() determine thread safety functions available rxode2 Add check correct number function arguments parser. Like R, known functions can assigned variable function can still called (changing variable value). example can variable gamma well function gamma(). Fix garbled error messages occur certain messages. Fixed errors occurred using capitalized AMT variables model.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-6","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.13","title":"rxode2 3.0.0","text":"Version bump dparser (binaries built correctly)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-7","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.12","title":"rxode2 3.0.0","text":"Bug fix strict prototypes Removed sprintf noted CRAN Made rxode2parse dll binary independent rxode2()","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-8","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.11","title":"rxode2 3.0.0","text":"Bug fix strict aliasing requested CRAN","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-9","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.10","title":"rxode2 3.0.0","text":"Use strict aliasing requested CRAN","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2parse-3-0-0-10","dir":"Changelog","previous_headings":"Big change > rxode2parse (fixed before merging)","what":"rxode2parse 2.0.9","title":"rxode2 3.0.0","text":"Initial release split rxode2parse rxode2 reduce compilation time ‘rxode2’","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-213","dir":"Changelog","previous_headings":"","what":"rxode2 2.1.3","title":"rxode2 2.1.3","text":"CRAN release: 2024-05-28","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-2-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 2.1.3","text":"Make sure object uncompressed rxode2 ui solving rxSolve (See #661) Fix #670 using last simulated observation residual trailing doses.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-2-1-3","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 2.1.3","text":"Create function see rxode2 solve loaded memory (rxode2::rxSolveSetup()) Create new function fixes rxode2 population values model (drops initial estimates); rxFixPop()","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"other-changes-2-1-3","dir":"Changelog","previous_headings":"","what":"Other changes","title":"rxode2 2.1.3","text":"Pendantic -remap (requested CRAN) gcc USBAN fix (requested CRAN)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-212","dir":"Changelog","previous_headings":"","what":"rxode2 2.1.2","title":"rxode2 2.1.2","text":"CRAN release: 2024-01-30","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"other-changes-2-1-2","dir":"Changelog","previous_headings":"","what":"Other changes","title":"rxode2 2.1.2","text":"rxUi compression now defaults fast compression Fixes String literal formatting issues identified CRAN (#643) Removes linear compartment solutions gradients intel c++ compiler (since crash compiler).","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-210","dir":"Changelog","previous_headings":"","what":"rxode2 2.1.0","title":"rxode2 2.1.0","text":"CRAN release: 2023-12-11","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"breaking-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"rxode2 2.1.0","text":"Steady state lag times longer shifted lag time solved steady state default. addition steady state original time dosing also back-calculated. want old behavior can bring back option ssAtDoseTime=FALSE. “dop853” now uses hmax/h0 values rxControl() rxSolve(). may change ODE solving using “dop853” specified (xgxr available), x axis longer assumed hours","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 2.1.0","text":"User defined functions can now R functions. many R functions can converted C rxFun() (can see C code afterwards rxC(\"funName\")) Parallel solving models require sorting (like modeled lag times, modeled duration etc) now solve parallel instead downgrading single threaded solving Steady state infusions duration infusions greater inter-dose interval now supported. Added $symengineModelNoPrune $symengineModelPrune loading models rxode2 rxS() plotting creating confidence intervals multiple endpoint models simulated rxode2 ui model, can plot/summarize endpoint sim. (ie. confint(model,   \"sim\") plot(model, sim)). want summarize subset endpoints, can focus endpoint pre-pending endpoint sim. example wanted plot/summarize endpoint eff use sim.eff. (ie confint(model, \"sim.eff\") plot(model, sim.eff)) Added model$simulationIniModel prepend initial conditions ini({}) block classic rxode2({}) model. Now model$simulationModel model$simulationIniModel save use initialization values compiled model, solve original ui model. Allow ini(model) <- NULL drop ini block .ini(NULL) gives ini({}) (Issue #523) Add function modelExtract() extract model lines allow modifying changing model piping simply assigning modified lines model(ui) <- newModifiedLines Add Algebraic mu-referencing detection (mu2) allows express mu-referenced covariates : Instead previously required (log.WT.div.70.5 calculated data) mu expressions. ui now information allow transformation data internally transformation old mu-referencing style run optimization. Allow steady state infusions duration infusion greater inter-dose interval solved. Solves now possibly print information issuing “solve system” error function rxSetPipingAuto() now exported change way affect piping individual setup Allow covariates specified model piping, mod   %>% model(=var+3, cov=\"var\") add \"var\" covariate. calculating confidence intervals rxode2 simulated objects can now use stratify simulation summary. example can now stratify gender race : confint(sim,   \"sim\", =c(\"race\", \"gender\")) calculating intervals rxode2 simulated objects can now use ci=FALSE calculates default intervals without bands percentiles; can also choose match secondary bands limits levels use ci=0.99 instance new function introduced meanProbs() calculates mean expected confidence bands either normal t distribution related new function introduced calculates mean confidence bands Bernoulli/Binomial distribution (binomProbs()) calculating intervals rxode2 simulated objects can also use mean=TRUE use mean first level confidence using meanProbs(). confidence interval can override n used confidence interval using n=#. can also change prediction interval instead using pred=TRUE. Also calculating intervals rxode2 simulated object can also use mean=\"binom\" use binomial distributional information (ci) first level confidence using binomProbs(). confidence interval can override n used confidence interval using n=#. can also change prediction interval instead using pred=TRUE. pred=TRUE can override number predicted samples m=# plotting confint derived intervals rxode2 simulation, can now subset based simulated value like plot(ci, Cc) plot variable Cc summarized even also summarized eff (instance). rxode2 ui compressed ui object, can modify ini block $ini <- modify model block $model <-. equivalent ini(model) <- model(model) <-, respectively. Otherwise, object added user defined components function (ie $meta). object uncompressed, simply assigns environment instead (just like ). printing meta information happens lotri compatible matrix, use lotri express instead default R expression. Allow character vectors converted expressions piping (#552) rxAppendModel() now take arbitrary number models append together; also better handling models duplicate parameters models without ini() blocks (#617 / #573 / #575). keep now also keep attributes input data (special handling levels); means broader variety classes kept carrying information (example ordered factors, data frame columns unit information, etc) Piping arguments append ini() model() aligned perform similarly. Therefore ini(append=) now can take expressions instead simply strings model(append=) can also take strings. Also model piping now can specify integer line number modified just like ini() . Also model(append=FALSE) changed model(append=NULL). behavior don’t specify argument, behavior changed align ini() piping. Hence model(append=TRUE) append model(append=FALSE) now pre-pend model. model(append=NULL) modify lines like behavior ini(append=NULL). default model(line) modifying line -place still applies. breaking change, code perform . Labels can now dropped ini(param=label(NULL)). Also parameters can dropped idiom model(param=NULL) ini(param=NULL) changes parameter covariate align idiom dropping parameters rxRename refactored run faster","code":"cl <- exp(tcl + eta.cl + wt_cl * log(WT/70.5)) cl <- exp(tcl + eta.cl + wt_cl * log.WT.div.70.5)"},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"internal-new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"Internal new features","title":"rxode2 2.1.0","text":"Add .model() list expressions, implies model(ui) <-   ui$lstExpr assign model components. also robustly work character vectors Simulated objects rxSolve now can access model variables $rxModelVars Simulation models UI now use rxerr.endpoint instead err.endpoint sigma residual error. align convention internally generated variables start rx nlmixr Sorting uses timsort now, upgraded latest version Morwenn","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-2-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 2.1.0","text":"Simulating/solving functions/ui now prefers params omega sigma model (#632) Piping add constants initial estimates constants specified model({}) block (like k <- 1), ini block Bug fix geom_amt() aes transformation x Bug fix covariate updates may affect multiple compartment models (like issue #581)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"maintenance-fixes-2-1-0","dir":"Changelog","previous_headings":"","what":"Maintenance fixes","title":"rxode2 2.1.0","text":"Modify plot code work development xgxr","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-2014","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.14","title":"rxode2 2.0.14","text":"CRAN release: 2023-10-07 CRAN requested FORTRAN kind changed portable; commented code, simply removed comment. Bug-fix geom_amt(); also now uses linewidth least ggplot2 3.4.0 documentation cleaned rxode2 2.0.13","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-2013","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.13","title":"rxode2 2.0.13","text":"CRAN release: 2023-04-22","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-2-0-13","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 2.0.13","text":"bug fixed zeroRe() function works correlated omega values. bug fixed rename() function works initial conditions compartments (cmt(0))","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-2-0-13","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 2.0.13","text":"new function zeroRe() allows simple setting omega /sigma values zero model (#456) Diagonal zeros omega sigma matrices treated zeros model. corresponding omega sigma matrices drop columns/rows diagonals zero create new omega sigma matrix simulation. idiom NONMEM uses simulation matrices. Add ability pipe model estimates another model parentModel %>% ini(modelWithNewEsts) Add ability append model statements piping using %>%   model(x=3, append=d/dt(depot)), still supports appending append=TRUE pre-pending append=NA (default replace lines append=FALSE) rxSolve’s keep argument now maintain character factor classes input data class (#190) Parameter labels may now modified via ini(param = label(\"text\")) (#351). Parameter order may modified via append argument ini() piping model. example, ini(param = 1, append = 0) ini(param = label(\"text\"), append = \"param2\") (#352).","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"internal-changes-2-0-13","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"rxode2 2.0.13","text":"lower/upper bounds outside required bounds, adjustment displayed. initial values piped break model’s boundary condition reset boundary unbounded message boundary reset. Added .rxUi() function convert following objects rxUi objects: rxode2, rxModelVars, function. Converting nlmixr2 fits rxUi placed s3 method corresponding package. assertRxUi(x) now uses .rxUi() can extended outside rxode2/nlmixr2. rxode2 now supports addl ss doses Moved rxDerived rxode2parse (re-exported ). Added test transit compartment solving absence dosing transit compartment (fixed rxode2parse solving tested ) Using ini() without arguments rxode2 type function return ini() block. Also added method ini(mod) <-   iniBlock modify ini block wish. iniBlock expression. Using model() without arguments rxode2 type function return model() block. Also added new method model(mod) <- modelBlock Added new method rxode2(mod) <- modFunction allows replacing function new function maintaining meta information ui (like information comes nonmem2rx models). modFunction body new function, new function, new rxode2 ui. rxode2 ui objects now $sticky item inside internal (compressed) environment. $sticky tells variables keep “significant” change ui piping sort model change. respected model piping, modifying model ini(mod)<-, model(mod)<-, rxode2(mod)<-. significant change change model block, change number estimates, change value estimates. Estimate bounds, weather estimate fixed estimate label changes considered significant. Added .ini() method convert various formats ini expression. used internally ini(mod)<-. want assign something new can convert ini expression, add method .ini(). Added .model() method convert various formats model expression. used internally model(mod)<-. want assign something new can convert model expression, add method .model().","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-2011","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.11","title":"rxode2 2.0.11","text":"CRAN release: 2022-11-01 Give meaningful error ‘rxode2’ ui models error expressions Break ABI requirement roxde2() rxode2parse() new rxode2parse fix sprintf exclusion shown CRAN.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-2010","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.10","title":"rxode2 2.0.10","text":"CRAN release: 2022-10-20 Time invariant covariates can now contain ‘NA’ values. column ‘NA’ entire id, now ‘rxode2’ warns id column instead just id. fix CRAN issues ‘nlmixr2est’, make version dependency explicit.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-209","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.9","title":"rxode2 2.0.9","text":"CRAN release: 2022-10-19 Remove log likelihoods ‘rxode2’ reduce compilation time increase maintainability ‘rxode2’. transferred ‘rxode2ll’ (requested CRAN). Remove parsing ‘rxode2’ solved linear compartment code move ‘rxode2parse’ reduce compilation time (requested CRAN). Remove random number generation ‘rxode2’ move ‘rxode2random’ reduce compilation time (requested CRAN). Remove event table translation generation ‘rxode2’ move ‘rxode2et’ reduce compilation time (requested CRAN). Change rxode2 ui object compressed, serialized object default. reduce C stack size problem occurs many environments R. Warn ignoring items simulations Export method change ‘rxode2’ solve methods internal integers Bug fix time invariant covariates identified time variant covariate individual’s time starts 0.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-208","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.8","title":"rxode2 2.0.8","text":"CRAN release: 2022-09-23","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"breaking-changes-2-0-8","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"rxode2 2.0.8","text":"rxgamma now allows rate input. aligns internal rxode2 version rxgamma clarifies used. also aligned llikGamma function used generalized likelihood estimation. ui cauchy simulations now follow ui normal t distributions, means can combine transformations. cauchy t distribution one degree freedom. ui dnorm() norm() longer equivalent add(). Now allows use loglik llikNorm() instead standard nlmixr2 style focei likelihood. done adding dnorm() end line. also means dnorm() now doesn’t take arguments. Vandercorput normal removed (non-random number generator)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-2-0-8","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 2.0.8","text":"Allow models nlmixr2 form without ini({}) block Allow model piping omega matrix f %>% ini(omegaMatrix) Standard models created rxode2() can piped model function Families log-likelihood added rxode2 mixed likelihood nonlinear mixed effects models may specified run. memory footprint rxode2 solving reduced Piping now allow named strings (issue #249)","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-2-0-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 2.0.8","text":"rxode2’s symengine convert sqrt(2) M_SQRT_2 M_SQRT2. fixed; noticeable nlmixr2 log-likelihood estimation methods rxode2 treats DV non-covariate etTran (last time duplicate model). noticeable nlmixr2 log-likelihood estimation methods.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"new-features-2-0-8-1","dir":"Changelog","previous_headings":"","what":"New features","title":"rxode2 2.0.8","text":"new flag (rxFlag) created tell rxode2 solving process . useful debugging. outputting variable always 11 calculating left handed equations. using conjunction printf() methods, double variable formatted \"%f\". additional option fullPrint added rxode2() allows rprintf() used almost rxode2() steps (inductive linearization matrix exponential exception ) instead just integration ddt step. defaults FALSE.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-207","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.7","title":"rxode2 2.0.7","text":"CRAN release: 2022-05-17 Removed accidental ^S news requested CRAN. Bug fix complicated mu-referencing. Change rxode2 md5 depend C/C++/Fortran code headers R files. way binary compatibility nlmixr2est rxode2, new version nlmixr2est need submitted CRAN.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"rxode2-206","dir":"Changelog","previous_headings":"","what":"rxode2 2.0.6","title":"rxode2 2.0.6","text":"CRAN release: 2022-05-09","code":""},{"path":[]},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"solving-controls-2-0-6","dir":"Changelog","previous_headings":"Breaking changes","what":"Solving controls","title":"rxode2 2.0.6","text":"options rxControl rxSolve strict. camelCase now always used. Old options like add.cov transit_abs longer supported, addCov supported. new option, sigdig added rxControl(), controls common significant figure options like atol, rtol, ssAtol, ssRtol, single option.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"simulations-2-0-6","dir":"Changelog","previous_headings":"Breaking changes","what":"Simulations","title":"rxode2 2.0.6","text":"simulations, $simulationSigma now assumes diagonal matrix. sigma values assumed standard normal, uncorrelated endpoints. Simulation uncertainty still draw identity diagonal matrix Parallel solving now seeds simulation per individual based initial seed plus simulation id. makes simulation reproducible regardless number cores running simulation.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"other-breaking-changes-2-0-6","dir":"Changelog","previous_headings":"Breaking changes","what":"Other breaking changes","title":"rxode2 2.0.6","text":"Solved objects now access underlying rxode model $rxode2 instead $rxode Since change names, rxode2, rxode RxODE perform function. Options changed RxODE.syntax rxode2.syntax. Assigning states rxode2.syntax.assign.state (RxODE.syntax.assign.state) longer supported. Enforcing “pure” assignment syntax = syntax longer supported rxode2.syntax.assign longer supported (RxODE.syntax.assign). Since R supports ** exponentiation operator, pure syntax without ** can longer enabled. Hence rxode2.syntax.star.pow (RxODE.syntax.star.pow) longer effect. “pure” syntax requires semicolon can longer enabled. Therefore rxode2.syntax.require.semicolon (RxODE.syntax.require.semicolon) longer effect. syntax state(0) can longer turned . rxode2.syntax.allow.ini0 (RxODE.syntax.allow.ini0) removed. Variable dots variable state names like state.name works R. Therefore, “pure” syntax excluding . values variables enforced rxode2.syntax.allow.dots (RxODE.syntax.allow.dots). mnemonic et(rate=model) et(dur=model) mnemonics removed. rate needs set -1 -2 manually instead. function rxode2Test() removed favor using testthat directly. Transit compartments need use new evid, evid=7. said, transitAbs option longer supported. ID columns input parameter data frames sorted merged original dataset ; underlying assumption ID order now checked outside rxode2(). Note event data frame still sorted.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"additional-features-2-0-6","dir":"Changelog","previous_headings":"","what":"Additional features","title":"rxode2 2.0.6","text":"UI functions nlmixr ported work rxode2 directly. rxModelVars({}) now supported. may now combine 2 models rxode2 rxAppendModel(). fact, long first value rxode2 evaluated ui model, can use c/rbind bind 2 models together. may now append model lines piping using %>% model(lines,   append=TRUE) can also pre-pend lines %>% model(lines,   append=NA) may now rename model variables, states defined parameters %>% rxRename(new=old) dplyr loaded: %>%   rename(new=old) can fix parameters %>% ini(tcl=fix) %>% ini(fix(tcl)) well unfix parameters %>% ini(tcl=unfix) %>% ini(unfix(tcl))","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"internal-changes-2-0-6","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"rxode2 2.0.6","text":"Strict R headers enforced places Since many changes incompatible, version renamed rxode2 rxode2() printout longer uses rules centered headings make display better larger variety systems.","code":""},{"path":"https://nlmixr2.github.io/rxode2/news/index.html","id":"bug-fixes-2-0-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"rxode2 2.0.6","text":"tad() related time features reset start infusion (opposed starting beginning end infusion)","code":""}]
